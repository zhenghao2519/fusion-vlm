2025-03-03 17:08:45,013 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.9.21 (main, Dec 11 2024, 16:24:11) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.13.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.1
OpenCV: 4.11.0
MMCV: 1.6.2
MMCV Compiler: GCC 11.4
MMCV CUDA Compiler: 11.8
MMDetection: 2.28.2
MMSegmentation: 0.30.0
MMDetection3D: 1.0.0rc6+7175f0d
spconv2.0: True
------------------------------------------------------------

2025-03-03 17:08:46,013 - mmdet - INFO - Distributed training: True
2025-03-03 17:08:46,908 - mmdet - INFO - Config:
point_cloud_range = [-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]
class_names = [
    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',
    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
]
dataset_type = 'CustomNuScenesDataset'
data_root = './data/nuscenes/'
input_modality = dict(
    use_lidar=False,
    use_camera=True,
    use_radar=False,
    use_map=False,
    use_external=True)
file_client_args = dict(backend='disk')
train_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_bbox=True,
        with_label=True,
        with_bbox_depth=True),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),
    dict(
        type='ObjectNameFilter',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(
        type='ResizeCropFlipRotImage',
        data_aug_conf=dict(
            resize_lim=(0.37, 0.45),
            final_dim=(320, 640),
            bot_pct_lim=(0.0, 0.0),
            rot_lim=(0.0, 0.0),
            H=900,
            W=1600,
            rand_flip=False),
        training=True),
    dict(
        type='ResizeMultiview3D',
        img_scale=(640, 640),
        keep_ratio=False,
        multiscale_mode='value'),
    dict(
        type='LoadAnnoatationVQA',
        base_vqa_path='./data/nuscenes/vqa/train/',
        base_desc_path='./data/nuscenes/desc/train/',
        base_conv_path='./data/nuscenes/conv/train/',
        base_key_path='./data/nuscenes/keywords/train/',
        tokenizer='ckpts/pretrain_qformer/',
        max_length=2048,
        ignore_type=[],
        lane_objs_info='./data/nuscenes/lane_obj_train.pkl'),
    dict(
        type='NormalizeMultiviewImage',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='PadMultiViewImage', size_divisor=32),
    dict(
        type='PETRFormatBundle3D',
        class_names=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        collect_keys=[
            'lidar2img', 'intrinsics', 'extrinsics', 'timestamp',
            'img_timestamp', 'ego_pose', 'ego_pose_inv', 'command', 'can_bus',
            'prev_exists'
        ]),
    dict(
        type='Collect3D',
        keys=[
            'lane_pts', 'input_ids', 'vlm_labels', 'gt_bboxes_3d',
            'gt_labels_3d', 'img', 'gt_bboxes', 'gt_labels', 'centers2d',
            'depths', 'prev_exists', 'lidar2img', 'intrinsics', 'extrinsics',
            'timestamp', 'img_timestamp', 'ego_pose', 'ego_pose_inv',
            'command', 'can_bus'
        ],
        meta_keys=('filename', 'ori_shape', 'img_shape', 'pad_shape',
                   'scale_factor', 'flip', 'box_mode_3d', 'box_type_3d',
                   'img_norm_cfg', 'scene_token', 'gt_bboxes_3d',
                   'gt_labels_3d'))
]
test_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='ResizeCropFlipRotImage',
        data_aug_conf=dict(
            resize_lim=(0.37, 0.45),
            final_dim=(320, 640),
            bot_pct_lim=(0.0, 0.0),
            rot_lim=(0.0, 0.0),
            H=900,
            W=1600,
            rand_flip=False),
        training=False),
    dict(
        type='ResizeMultiview3D',
        img_scale=(640, 640),
        keep_ratio=False,
        multiscale_mode='value'),
    dict(
        type='NormalizeMultiviewImage',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='PadMultiViewImage', size_divisor=32),
    dict(
        type='LoadAnnoatationVQATest',
        base_vqa_path='./data/nuscenes/vqa/val/',
        base_conv_path='./data/nuscenes/conv/val/',
        base_counter_path='./data/nuscenes/eval_cf/',
        load_type=['planning'],
        tokenizer='ckpts/pretrain_qformer/',
        max_length=2048),
    dict(
        type='MultiScaleFlipAug3D',
        img_scale=(1333, 800),
        pts_scale_ratio=1,
        flip=False,
        transforms=[
            dict(
                type='PETRFormatBundle3D',
                collect_keys=[
                    'lidar2img', 'intrinsics', 'extrinsics', 'timestamp',
                    'img_timestamp', 'ego_pose', 'ego_pose_inv', 'command',
                    'can_bus'
                ],
                class_names=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ],
                with_label=False),
            dict(
                type='Collect3D',
                keys=[
                    'input_ids', 'img', 'lidar2img', 'intrinsics',
                    'extrinsics', 'timestamp', 'img_timestamp', 'ego_pose',
                    'ego_pose_inv', 'command', 'can_bus'
                ],
                meta_keys=('sample_idx', 'vlm_labels', 'filename', 'ori_shape',
                           'img_shape', 'pad_shape', 'scale_factor', 'flip',
                           'box_mode_3d', 'box_type_3d', 'img_norm_cfg',
                           'scene_token'))
        ])
]
eval_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        file_client_args=dict(backend='disk')),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=10,
        file_client_args=dict(backend='disk')),
    dict(
        type='DefaultFormatBundle3D',
        class_names=[
            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'
        ],
        with_label=False),
    dict(type='Collect3D', keys=['points'])
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=2,
    train=dict(
        type='CustomNuScenesDataset',
        data_root='./data/nuscenes/',
        ann_file='./data/nuscenes/nuscenes2d_ego_temporal_infos_train.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_bbox=True,
                with_label=True,
                with_bbox_depth=True),
            dict(
                type='ObjectRangeFilter',
                point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),
            dict(
                type='ObjectNameFilter',
                classes=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ]),
            dict(
                type='ResizeCropFlipRotImage',
                data_aug_conf=dict(
                    resize_lim=(0.37, 0.45),
                    final_dim=(320, 640),
                    bot_pct_lim=(0.0, 0.0),
                    rot_lim=(0.0, 0.0),
                    H=900,
                    W=1600,
                    rand_flip=False),
                training=True),
            dict(
                type='ResizeMultiview3D',
                img_scale=(640, 640),
                keep_ratio=False,
                multiscale_mode='value'),
            dict(
                type='LoadAnnoatationVQA',
                base_vqa_path='./data/nuscenes/vqa/train/',
                base_desc_path='./data/nuscenes/desc/train/',
                base_conv_path='./data/nuscenes/conv/train/',
                base_key_path='./data/nuscenes/keywords/train/',
                tokenizer='ckpts/pretrain_qformer/',
                max_length=2048,
                ignore_type=[],
                lane_objs_info='./data/nuscenes/lane_obj_train.pkl'),
            dict(
                type='NormalizeMultiviewImage',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='PadMultiViewImage', size_divisor=32),
            dict(
                type='PETRFormatBundle3D',
                class_names=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ],
                collect_keys=[
                    'lidar2img', 'intrinsics', 'extrinsics', 'timestamp',
                    'img_timestamp', 'ego_pose', 'ego_pose_inv', 'command',
                    'can_bus', 'prev_exists'
                ]),
            dict(
                type='Collect3D',
                keys=[
                    'lane_pts', 'input_ids', 'vlm_labels', 'gt_bboxes_3d',
                    'gt_labels_3d', 'img', 'gt_bboxes', 'gt_labels',
                    'centers2d', 'depths', 'prev_exists', 'lidar2img',
                    'intrinsics', 'extrinsics', 'timestamp', 'img_timestamp',
                    'ego_pose', 'ego_pose_inv', 'command', 'can_bus'
                ],
                meta_keys=('filename', 'ori_shape', 'img_shape', 'pad_shape',
                           'scale_factor', 'flip', 'box_mode_3d',
                           'box_type_3d', 'img_norm_cfg', 'scene_token',
                           'gt_bboxes_3d', 'gt_labels_3d'))
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=False,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=True),
        test_mode=False,
        box_type_3d='LiDAR',
        seq_split_num=1,
        seq_mode=True,
        use_valid_flag=True,
        filter_empty_gt=False),
    val=dict(
        type='CustomNuScenesDataset',
        data_root='data/nuscenes/',
        ann_file='./data/nuscenes/nuscenes2d_ego_temporal_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='ResizeCropFlipRotImage',
                data_aug_conf=dict(
                    resize_lim=(0.37, 0.45),
                    final_dim=(320, 640),
                    bot_pct_lim=(0.0, 0.0),
                    rot_lim=(0.0, 0.0),
                    H=900,
                    W=1600,
                    rand_flip=False),
                training=False),
            dict(
                type='ResizeMultiview3D',
                img_scale=(640, 640),
                keep_ratio=False,
                multiscale_mode='value'),
            dict(
                type='NormalizeMultiviewImage',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='PadMultiViewImage', size_divisor=32),
            dict(
                type='LoadAnnoatationVQATest',
                base_vqa_path='./data/nuscenes/vqa/val/',
                base_conv_path='./data/nuscenes/conv/val/',
                base_counter_path='./data/nuscenes/eval_cf/',
                load_type=['planning'],
                tokenizer='ckpts/pretrain_qformer/',
                max_length=2048),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(1333, 800),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='PETRFormatBundle3D',
                        collect_keys=[
                            'lidar2img', 'intrinsics', 'extrinsics',
                            'timestamp', 'img_timestamp', 'ego_pose',
                            'ego_pose_inv', 'command', 'can_bus'
                        ],
                        class_names=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        with_label=False),
                    dict(
                        type='Collect3D',
                        keys=[
                            'input_ids', 'img', 'lidar2img', 'intrinsics',
                            'extrinsics', 'timestamp', 'img_timestamp',
                            'ego_pose', 'ego_pose_inv', 'command', 'can_bus'
                        ],
                        meta_keys=('sample_idx', 'vlm_labels', 'filename',
                                   'ori_shape', 'img_shape', 'pad_shape',
                                   'scale_factor', 'flip', 'box_mode_3d',
                                   'box_type_3d', 'img_norm_cfg',
                                   'scene_token'))
                ])
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=False,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=True),
        test_mode=True,
        box_type_3d='LiDAR',
        eval_mode=['lane', 'det']),
    test=dict(
        type='CustomNuScenesDataset',
        data_root='data/nuscenes/',
        ann_file='./data/nuscenes/nuscenes2d_ego_temporal_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='ResizeCropFlipRotImage',
                data_aug_conf=dict(
                    resize_lim=(0.37, 0.45),
                    final_dim=(320, 640),
                    bot_pct_lim=(0.0, 0.0),
                    rot_lim=(0.0, 0.0),
                    H=900,
                    W=1600,
                    rand_flip=False),
                training=False),
            dict(
                type='ResizeMultiview3D',
                img_scale=(640, 640),
                keep_ratio=False,
                multiscale_mode='value'),
            dict(
                type='NormalizeMultiviewImage',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='PadMultiViewImage', size_divisor=32),
            dict(
                type='LoadAnnoatationVQATest',
                base_vqa_path='./data/nuscenes/vqa/val/',
                base_conv_path='./data/nuscenes/conv/val/',
                base_counter_path='./data/nuscenes/eval_cf/',
                load_type=['planning'],
                tokenizer='ckpts/pretrain_qformer/',
                max_length=2048),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(1333, 800),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='PETRFormatBundle3D',
                        collect_keys=[
                            'lidar2img', 'intrinsics', 'extrinsics',
                            'timestamp', 'img_timestamp', 'ego_pose',
                            'ego_pose_inv', 'command', 'can_bus'
                        ],
                        class_names=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        with_label=False),
                    dict(
                        type='Collect3D',
                        keys=[
                            'input_ids', 'img', 'lidar2img', 'intrinsics',
                            'extrinsics', 'timestamp', 'img_timestamp',
                            'ego_pose', 'ego_pose_inv', 'command', 'can_bus'
                        ],
                        meta_keys=('sample_idx', 'vlm_labels', 'filename',
                                   'ori_shape', 'img_shape', 'pad_shape',
                                   'scale_factor', 'flip', 'box_mode_3d',
                                   'box_type_3d', 'img_norm_cfg',
                                   'scene_token'))
                ])
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=False,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=True),
        test_mode=True,
        box_type_3d='LiDAR',
        eval_mode=['lane', 'det']),
    shuffler_sampler=dict(
        type='InfiniteGroupEachSampleInBatchSampler',
        seq_split_num=2,
        warmup_split_num=10,
        num_iters_to_seq=28130),
    nonshuffler_sampler=dict(type='DistributedSampler'))
evaluation = dict(
    interval=168780,
    pipeline=[
        dict(type='LoadMultiViewImageFromFiles', to_float32=True),
        dict(
            type='ResizeCropFlipRotImage',
            data_aug_conf=dict(
                resize_lim=(0.37, 0.45),
                final_dim=(320, 640),
                bot_pct_lim=(0.0, 0.0),
                rot_lim=(0.0, 0.0),
                H=900,
                W=1600,
                rand_flip=False),
            training=False),
        dict(
            type='ResizeMultiview3D',
            img_scale=(640, 640),
            keep_ratio=False,
            multiscale_mode='value'),
        dict(
            type='NormalizeMultiviewImage',
            mean=[123.675, 116.28, 103.53],
            std=[58.395, 57.12, 57.375],
            to_rgb=True),
        dict(type='PadMultiViewImage', size_divisor=32),
        dict(
            type='LoadAnnoatationVQATest',
            base_vqa_path='./data/nuscenes/vqa/val/',
            base_conv_path='./data/nuscenes/conv/val/',
            base_counter_path='./data/nuscenes/eval_cf/',
            load_type=['planning'],
            tokenizer='ckpts/pretrain_qformer/',
            max_length=2048),
        dict(
            type='MultiScaleFlipAug3D',
            img_scale=(1333, 800),
            pts_scale_ratio=1,
            flip=False,
            transforms=[
                dict(
                    type='PETRFormatBundle3D',
                    collect_keys=[
                        'lidar2img', 'intrinsics', 'extrinsics', 'timestamp',
                        'img_timestamp', 'ego_pose', 'ego_pose_inv', 'command',
                        'can_bus'
                    ],
                    class_names=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ],
                    with_label=False),
                dict(
                    type='Collect3D',
                    keys=[
                        'input_ids', 'img', 'lidar2img', 'intrinsics',
                        'extrinsics', 'timestamp', 'img_timestamp', 'ego_pose',
                        'ego_pose_inv', 'command', 'can_bus'
                    ],
                    meta_keys=('sample_idx', 'vlm_labels', 'filename',
                               'ori_shape', 'img_shape', 'pad_shape',
                               'scale_factor', 'flip', 'box_mode_3d',
                               'box_type_3d', 'img_norm_cfg', 'scene_token'))
            ])
    ])
checkpoint_config = dict(interval=14065, max_keep_ckpts=3)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
work_dir = 'work_dirs/mask_eva_lane_det_vlm/'
load_from = 'ckpts/eva02_petr_proj.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
backbone_norm_cfg = dict(type='LN', requires_grad=True)
plugin = True
plugin_dir = 'projects/mmdet3d_plugin/'
voxel_size = [0.2, 0.2, 8]
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
num_gpus = 1
batch_size = 1
num_iters_per_epoch = 28130
num_epochs = 6
llm_path = 'ckpts/pretrain_qformer/'
collect_keys = [
    'lidar2img', 'intrinsics', 'extrinsics', 'timestamp', 'img_timestamp',
    'ego_pose', 'ego_pose_inv', 'command', 'can_bus'
]
model = dict(
    type='Petr3D',
    save_path='./results_planning_only/',
    use_grid_mask=True,
    frozen=False,
    use_lora=True,
    tokenizer='ckpts/pretrain_qformer/',
    lm_head='ckpts/pretrain_qformer/',
    img_backbone=dict(
        type='EVAViT',
        img_size=640,
        patch_size=16,
        window_size=16,
        in_chans=3,
        embed_dim=1024,
        depth=24,
        num_heads=16,
        mlp_ratio=2.6666666666666665,
        window_block_indexes=[
            0, 1, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21, 22
        ],
        qkv_bias=True,
        drop_path_rate=0.3,
        flash_attn=True,
        with_cp=True,
        frozen=True),
    map_head=dict(
        type='PETRHeadM',
        num_classes=1,
        in_channels=1024,
        out_dims=4096,
        memory_len=600,
        with_mask=True,
        topk_proposals=300,
        num_lane=1800,
        num_lanes_one2one=300,
        k_one2many=5,
        lambda_one2many=1.0,
        num_extra=256,
        n_control=11,
        pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],
        code_weights=[1.0, 1.0],
        transformer=dict(
            type='PETRTemporalTransformer',
            input_dimension=256,
            output_dimension=256,
            num_layers=6,
            embed_dims=256,
            num_heads=8,
            feedforward_dims=2048,
            dropout=0.1,
            with_cp=True,
            flash_attn=True),
        train_cfg=dict(
            assigner=dict(
                type='LaneHungarianAssigner',
                cls_cost=dict(type='FocalLossCost', weight=1.5),
                reg_cost=dict(type='LaneL1Cost', weight=0.02),
                iou_cost=dict(type='IoUCost', weight=0.0))),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=1.5),
        loss_bbox=dict(type='L1Loss', loss_weight=0.02),
        loss_dir=dict(type='PtsDirCosLoss', loss_weight=0.0)),
    pts_bbox_head=dict(
        type='StreamPETRHead',
        num_classes=10,
        in_channels=1024,
        out_dims=4096,
        num_query=600,
        with_mask=True,
        memory_len=600,
        topk_proposals=300,
        num_propagated=300,
        num_extra=256,
        n_control=11,
        match_with_velo=False,
        scalar=10,
        noise_scale=1.0,
        dn_weight=1.0,
        split=0.75,
        code_weights=[2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
        transformer=dict(
            type='PETRTemporalTransformer',
            input_dimension=256,
            output_dimension=256,
            num_layers=6,
            embed_dims=256,
            num_heads=8,
            feedforward_dims=2048,
            dropout=0.1,
            with_cp=True,
            flash_attn=True),
        bbox_coder=dict(
            type='NMSFreeCoder',
            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],
            max_num=300,
            voxel_size=[0.2, 0.2, 8],
            num_classes=10),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=2.0),
        loss_bbox=dict(type='L1Loss', loss_weight=0.25),
        loss_iou=dict(type='GIoULoss', loss_weight=0.0)),
    train_cfg=dict(
        pts=dict(
            grid_size=[512, 512, 1],
            voxel_size=[0.2, 0.2, 8],
            point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],
            out_size_factor=4,
            assigner=dict(
                type='HungarianAssigner3D',
                cls_cost=dict(type='FocalLossCost', weight=2.0),
                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),
                iou_cost=dict(type='IoUCost', weight=0.0),
                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]))))
ida_aug_conf = dict(
    resize_lim=(0.37, 0.45),
    final_dim=(320, 640),
    bot_pct_lim=(0.0, 0.0),
    rot_lim=(0.0, 0.0),
    H=900,
    W=1600,
    rand_flip=False)
optimizer = dict(
    constructor='LearningRateDecayOptimizerConstructor',
    type='AdamW',
    lr=0.0001,
    betas=(0.9, 0.999),
    weight_decay=0.0001,
    paramwise_cfg=dict(
        decay_rate=0.9,
        head_decay_rate=4.0,
        lm_head_decay_rate=0.1,
        decay_type='vit_wise',
        num_layers=24))
optimizer_config = dict(
    type='Fp16OptimizerHook',
    loss_scale='dynamic',
    grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='CosineAnnealing',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.3333333333333333,
    min_lr_ratio=0.001)
find_unused_parameters = False
runner = dict(type='IterBasedRunner', max_iters=168780)
gpu_ids = range(0, 1)

2025-03-03 17:08:46,909 - mmdet - INFO - Set random seed to 0, deterministic: False
Name of parameter - Initialization information

position_range - torch.Size([6]): 
The value is the same before and after calling `init_weights` of Petr3D  

coords_d - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.code_weights - torch.Size([10]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.match_costs - torch.Size([10]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.pc_range - torch.Size([6]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.3.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.6.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.6.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.reg_branches.0.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reg_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reg_branches.0.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reg_branches.0.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reg_branches.0.4.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reg_branches.0.4.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.input_projection.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.input_projection.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.output_projection.weight - torch.Size([4096, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.output_projection.bias - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reference_points.weight - torch.Size([600, 3]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.pseudo_reference_points.weight - torch.Size([300, 3]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.query_embedding.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.can_bus_embed.0.weight - torch.Size([1024, 74]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.can_bus_embed.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.can_bus_embed.2.weight - torch.Size([4096, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.can_bus_embed.2.bias - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.query_pos.0.weight - torch.Size([256, 396]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.query_pos.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.query_pos.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.query_pos.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.time_embedding.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.time_embedding.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.time_embedding.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.time_embedding.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.reduce.0.weight - torch.Size([256, 156]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.reduce.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.gamma.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.gamma.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.beta.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.beta.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.pos_embed - torch.Size([1, 197, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.patch_embed.proj.weight - torch.Size([1024, 3, 16, 16]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.patch_embed.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.code_weights - torch.Size([2]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.match_costs - torch.Size([2]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.pc_range - torch.Size([6]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.3.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.6.weight - torch.Size([1, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.6.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.reg_branches.0.0.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.reg_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.reg_branches.0.2.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.reg_branches.0.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.reg_branches.0.4.weight - torch.Size([33, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.reg_branches.0.4.bias - torch.Size([33]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.input_projection.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.input_projection.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.output_projection.weight - torch.Size([4096, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.output_projection.bias - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.reference_points_lane.weight - torch.Size([3, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.reference_points_lane.bias - torch.Size([3]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.points_embedding_lane.weight - torch.Size([11, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.instance_embedding_lane.weight - torch.Size([1800, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.query_embedding.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

position_encoder.0.weight - torch.Size([1024, 192]): 
The value is the same before and after calling `init_weights` of Petr3D  

position_encoder.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

position_encoder.2.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

position_encoder.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.embed_tokens.weight - torch.Size([32000, 4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.norm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.lm_head.weight - torch.Size([32000, 4096]): 
The value is the same before and after calling `init_weights` of Petr3D  
2025-03-03 17:09:03,791 - mmdet - INFO - Model:
Petr3D(
  (pts_bbox_head): StreamPETRHead(
    (loss_cls): FocalLoss()
    (loss_bbox): L1Loss()
    (cls_branches): ModuleList(
      (0): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
      (1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
      (2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
      (3): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
      (4): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
      (5): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
    )
    (reg_branches): ModuleList(
      (0): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (3): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (4): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (5): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
    )
    (input_projection): Linear(in_features=1024, out_features=256, bias=True)
    (output_projection): Linear(in_features=256, out_features=4096, bias=True)
    (reference_points): Embedding(600, 3)
    (pseudo_reference_points): Embedding(300, 3)
    (query_embedding): Embedding(256, 256)
    (can_bus_embed): Sequential(
      (0): Linear(in_features=74, out_features=1024, bias=True)
      (1): ReLU()
      (2): Linear(in_features=1024, out_features=4096, bias=True)
    )
    (loss_iou): GIoULoss()
    (transformer): PETRTemporalTransformer(
      (query_decoder): PETRTransformerDecoder(
        (_layers): ModuleList(
          (0): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (1): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (2): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (3): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (4): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (5): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
    )
    (query_pos): Sequential(
      (0): Linear(in_features=396, out_features=256, bias=True)
      (1): ReLU()
      (2): Linear(in_features=256, out_features=256, bias=True)
    )
    (time_embedding): Sequential(
      (0): Linear(in_features=256, out_features=256, bias=True)
      (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
    )
    (ego_pose_pe): MLN(
      (reduce): Sequential(
        (0): Linear(in_features=156, out_features=256, bias=True)
        (1): ReLU()
      )
      (gamma): Linear(in_features=256, out_features=256, bias=True)
      (beta): Linear(in_features=256, out_features=256, bias=True)
      (ln): LayerNorm((256,), eps=1e-05, elementwise_affine=False)
    )
  )
  (img_backbone): EVAViT(
    (patch_embed): PatchEmbed(
      (proj): Conv2d(3, 1024, kernel_size=(16, 16), stride=(16, 16))
    )
    (rope_win): VisionRotaryEmbeddingFast()
    (rope_glb): VisionRotaryEmbeddingFast()
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (6): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (7): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (8): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (9): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (10): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (11): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (12): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (13): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (14): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (15): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (16): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (17): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (18): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (19): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (20): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (21): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (22): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (23): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (grid_mask): GridMask()
  (query_pos): Sequential(
    (0): Linear(in_features=396, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=256, bias=True)
  )
  (time_embedding): Sequential(
    (0): Linear(in_features=256, out_features=256, bias=True)
    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
  )
  (ego_pose_pe): MLN(
    (reduce): Sequential(
      (0): Linear(in_features=156, out_features=256, bias=True)
      (1): ReLU()
    )
    (gamma): Linear(in_features=256, out_features=256, bias=True)
    (beta): Linear(in_features=256, out_features=256, bias=True)
    (ln): LayerNorm((256,), eps=1e-05, elementwise_affine=False)
  )
  (map_head): PETRHeadM(
    (loss_cls): FocalLoss()
    (loss_bbox): L1Loss()
    (cls_branches): ModuleList(
      (0): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
      (1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
      (2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
      (3): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
      (4): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
      (5): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
    )
    (reg_branches): ModuleList(
      (0): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
      (1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
      (2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
      (3): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
      (4): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
      (5): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
    )
    (input_projection): Linear(in_features=1024, out_features=256, bias=True)
    (output_projection): Linear(in_features=256, out_features=4096, bias=True)
    (reference_points_lane): Linear(in_features=256, out_features=3, bias=True)
    (points_embedding_lane): Embedding(11, 256)
    (instance_embedding_lane): Embedding(1800, 256)
    (query_embedding): Embedding(256, 256)
    (loss_dir): PtsDirCosLoss()
    (transformer): PETRTemporalTransformer(
      (query_decoder): PETRTransformerDecoder(
        (_layers): ModuleList(
          (0): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (1): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (2): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (3): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (4): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (5): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
    )
    (query_pos): Sequential(
      (0): Linear(in_features=396, out_features=256, bias=True)
      (1): ReLU()
      (2): Linear(in_features=256, out_features=256, bias=True)
    )
    (time_embedding): Sequential(
      (0): Linear(in_features=256, out_features=256, bias=True)
      (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
    )
    (ego_pose_pe): MLN(
      (reduce): Sequential(
        (0): Linear(in_features=156, out_features=256, bias=True)
        (1): ReLU()
      )
      (gamma): Linear(in_features=256, out_features=256, bias=True)
      (beta): Linear(in_features=256, out_features=256, bias=True)
      (ln): LayerNorm((256,), eps=1e-05, elementwise_affine=False)
    )
  )
  (position_encoder): Sequential(
    (0): Linear(in_features=192, out_features=1024, bias=True)
    (1): ReLU()
    (2): Linear(in_features=1024, out_features=256, bias=True)
  )
  (lm_head): PeftModelForCausalLM(
    (base_model): LoraModel(
      (model): LlavaLlamaForCausalLM(
        (model): LlavaLlamaModel(
          (embed_tokens): Embedding(32000, 4096, padding_idx=0)
          (layers): ModuleList(
            (0): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (1): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (2): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (3): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (4): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (5): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (6): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (7): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (8): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (9): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (10): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (11): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (12): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (13): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (14): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (15): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (16): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (17): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (18): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (19): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (20): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (21): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (22): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (23): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (24): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (25): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (26): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (27): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (28): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (29): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (30): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (31): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
          )
          (norm): LlamaRMSNorm()
        )
        (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
      )
    )
  )
)
2025-03-03 17:09:03,825 - mmdet - INFO - Total parameters: 3,837,949,423
2025-03-03 17:09:03,825 - mmdet - INFO - Trainable parameters: 34,146,881
2025-03-03 17:09:03,825 - mmdet - INFO - pts_bbox_head: 15,805,882 parameters (0.41%)
2025-03-03 17:09:03,826 - mmdet - INFO - pts_bbox_head: 15,804,956 trainable parameters(46.29%)
2025-03-03 17:09:03,826 - mmdet - INFO -   pts_bbox_head breakdown:
2025-03-03 17:09:03,826 - mmdet - INFO -     cls_branches: 135,178 parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     cls_branches: 135,178 trainable parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     reg_branches: 134,154 parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     reg_branches: 134,154 trainable parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     input_projection: 262,400 parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     input_projection: 262,400 trainable parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     output_projection: 1,052,672 parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     output_projection: 1,052,672 trainable parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     reference_points: 1,800 parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     reference_points: 1,800 trainable parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     pseudo_reference_points: 900 parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     pseudo_reference_points: 0 trainable parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     query_embedding: 65,536 parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     query_embedding: 65,536 trainable parameters
2025-03-03 17:09:03,826 - mmdet - INFO -     can_bus_embed: 4,275,200 parameters
2025-03-03 17:09:03,827 - mmdet - INFO -     can_bus_embed: 4,275,200 trainable parameters
2025-03-03 17:09:03,827 - mmdet - INFO -     transformer: 9,472,512 parameters
2025-03-03 17:09:03,827 - mmdet - INFO -     transformer: 9,472,512 trainable parameters
2025-03-03 17:09:03,827 - mmdet - INFO -     query_pos: 167,424 parameters
2025-03-03 17:09:03,827 - mmdet - INFO -     query_pos: 167,424 trainable parameters
2025-03-03 17:09:03,827 - mmdet - INFO -     time_embedding: 66,304 parameters
2025-03-03 17:09:03,827 - mmdet - INFO -     time_embedding: 66,304 trainable parameters
2025-03-03 17:09:03,827 - mmdet - INFO -     ego_pose_pe: 171,776 parameters
2025-03-03 17:09:03,827 - mmdet - INFO -     ego_pose_pe: 171,776 trainable parameters
2025-03-03 17:09:03,828 - mmdet - INFO - img_backbone: 303,388,608 parameters (7.90%)
2025-03-03 17:09:03,829 - mmdet - INFO - img_backbone: 0 trainable parameters(0.00%)
2025-03-03 17:09:03,829 - mmdet - INFO -   img_backbone breakdown:
2025-03-03 17:09:03,829 - mmdet - INFO -     patch_embed: 787,456 parameters
2025-03-03 17:09:03,829 - mmdet - INFO -     patch_embed: 0 trainable parameters
2025-03-03 17:09:03,830 - mmdet - INFO -     blocks: 302,399,424 parameters
2025-03-03 17:09:03,830 - mmdet - INFO -     blocks: 0 trainable parameters
2025-03-03 17:09:03,830 - mmdet - INFO - grid_mask: 0 parameters (0.00%)
2025-03-03 17:09:03,830 - mmdet - INFO - grid_mask: 0 trainable parameters(0.00%)
2025-03-03 17:09:03,830 - mmdet - INFO - query_pos: 167,424 parameters (0.00%)
2025-03-03 17:09:03,830 - mmdet - INFO - query_pos: 167,424 trainable parameters(0.49%)
2025-03-03 17:09:03,830 - mmdet - INFO - time_embedding: 66,304 parameters (0.00%)
2025-03-03 17:09:03,830 - mmdet - INFO - time_embedding: 66,304 trainable parameters(0.19%)
2025-03-03 17:09:03,830 - mmdet - INFO - ego_pose_pe: 171,776 parameters (0.00%)
2025-03-03 17:09:03,831 - mmdet - INFO - ego_pose_pe: 171,776 trainable parameters(0.50%)
2025-03-03 17:09:03,831 - mmdet - INFO - map_head: 11,995,951 parameters (0.31%)
2025-03-03 17:09:03,831 - mmdet - INFO - map_head: 11,995,941 trainable parameters(35.13%)
2025-03-03 17:09:03,831 - mmdet - INFO -   map_head breakdown:
2025-03-03 17:09:03,831 - mmdet - INFO -     cls_branches: 132,865 parameters
2025-03-03 17:09:03,831 - mmdet - INFO -     cls_branches: 132,865 trainable parameters
2025-03-03 17:09:03,831 - mmdet - INFO -     reg_branches: 140,065 parameters
2025-03-03 17:09:03,831 - mmdet - INFO -     reg_branches: 140,065 trainable parameters
2025-03-03 17:09:03,831 - mmdet - INFO -     input_projection: 262,400 parameters
2025-03-03 17:09:03,831 - mmdet - INFO -     input_projection: 262,400 trainable parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     output_projection: 1,052,672 parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     output_projection: 1,052,672 trainable parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     reference_points_lane: 771 parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     reference_points_lane: 771 trainable parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     points_embedding_lane: 2,816 parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     points_embedding_lane: 2,816 trainable parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     instance_embedding_lane: 460,800 parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     instance_embedding_lane: 460,800 trainable parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     query_embedding: 65,536 parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     query_embedding: 65,536 trainable parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     transformer: 9,472,512 parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     transformer: 9,472,512 trainable parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     query_pos: 167,424 parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     query_pos: 167,424 trainable parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     time_embedding: 66,304 parameters
2025-03-03 17:09:03,832 - mmdet - INFO -     time_embedding: 66,304 trainable parameters
2025-03-03 17:09:03,833 - mmdet - INFO -     ego_pose_pe: 171,776 parameters
2025-03-03 17:09:03,833 - mmdet - INFO -     ego_pose_pe: 171,776 trainable parameters
2025-03-03 17:09:03,833 - mmdet - INFO - position_encoder: 460,032 parameters (0.01%)
2025-03-03 17:09:03,833 - mmdet - INFO - position_encoder: 460,032 trainable parameters(1.35%)
2025-03-03 17:09:03,835 - mmdet - INFO - lm_head: 3,506,704,384 parameters (91.37%)
2025-03-03 17:09:03,837 - mmdet - INFO - lm_head: 6,291,456 trainable parameters(18.42%)
2025-03-03 17:09:03,837 - mmdet - INFO -   lm_head breakdown:
2025-03-03 17:09:03,839 - mmdet - INFO -     base_model: 3,506,704,384 parameters
2025-03-03 17:09:03,840 - mmdet - INFO -     base_model: 6,291,456 trainable parameters
2025-03-03 17:09:23,315 - mmdet - INFO - position_range: torch.float32, False, cpu
2025-03-03 17:09:23,315 - mmdet - INFO - coords_d: torch.float32, False, cpu
2025-03-03 17:09:23,315 - mmdet - INFO - pts_bbox_head.code_weights: torch.float32, False, cpu
2025-03-03 17:09:23,315 - mmdet - INFO - pts_bbox_head.match_costs: torch.float32, False, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.pc_range: torch.float32, False, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.cls_branches.0.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.cls_branches.0.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.cls_branches.0.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.cls_branches.0.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.cls_branches.0.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.cls_branches.0.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.cls_branches.0.4.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.cls_branches.0.4.bias: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.cls_branches.0.6.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.cls_branches.0.6.bias: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.reg_branches.0.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.reg_branches.0.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.reg_branches.0.2.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.reg_branches.0.2.bias: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.reg_branches.0.4.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.reg_branches.0.4.bias: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.input_projection.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.input_projection.bias: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.output_projection.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.output_projection.bias: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.reference_points.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.pseudo_reference_points.weight: torch.float32, False, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.query_embedding.weight: torch.float32, True, cpu
2025-03-03 17:09:23,316 - mmdet - INFO - pts_bbox_head.can_bus_embed.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.can_bus_embed.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.can_bus_embed.2.weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.can_bus_embed.2.bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,317 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,318 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,319 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,320 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.query_pos.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.query_pos.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.query_pos.2.weight: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.query_pos.2.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.time_embedding.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.time_embedding.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.time_embedding.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.time_embedding.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.ego_pose_pe.reduce.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.ego_pose_pe.reduce.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.ego_pose_pe.gamma.weight: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.ego_pose_pe.gamma.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.ego_pose_pe.beta.weight: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - pts_bbox_head.ego_pose_pe.beta.bias: torch.float32, True, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - img_backbone.pos_embed: torch.float32, False, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - img_backbone.patch_embed.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - img_backbone.patch_embed.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,321 - mmdet - INFO - img_backbone.blocks.0.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.0.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.1.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.1.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.1.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.1.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.1.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.1.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,322 - mmdet - INFO - img_backbone.blocks.1.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.1.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,323 - mmdet - INFO - img_backbone.blocks.2.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.2.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.2.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.2.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.3.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.4.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.4.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.4.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,324 - mmdet - INFO - img_backbone.blocks.4.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.4.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,325 - mmdet - INFO - img_backbone.blocks.5.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.5.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.5.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.5.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.5.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.5.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.5.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.5.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,326 - mmdet - INFO - img_backbone.blocks.6.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.7.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.8.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.8.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.8.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.8.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.8.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.8.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,327 - mmdet - INFO - img_backbone.blocks.8.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.8.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,328 - mmdet - INFO - img_backbone.blocks.9.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.9.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.9.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.9.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.9.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.9.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.10.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.11.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,329 - mmdet - INFO - img_backbone.blocks.11.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.11.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.12.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.12.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.12.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.12.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.12.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.12.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.12.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.12.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.12.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,330 - mmdet - INFO - img_backbone.blocks.12.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.12.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.12.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.12.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.12.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.12.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.12.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.12.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.12.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.12.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,331 - mmdet - INFO - img_backbone.blocks.13.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.13.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.14.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.15.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.15.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.15.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.15.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.15.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,332 - mmdet - INFO - img_backbone.blocks.15.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.15.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.16.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,333 - mmdet - INFO - img_backbone.blocks.16.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.16.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.17.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.17.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.17.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.17.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,334 - mmdet - INFO - img_backbone.blocks.17.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.17.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.18.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.18.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.18.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.18.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.18.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.18.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.18.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.18.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,335 - mmdet - INFO - img_backbone.blocks.18.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.18.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.18.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.18.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.18.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.18.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.18.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.18.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.18.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.18.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.18.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,336 - mmdet - INFO - img_backbone.blocks.19.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.19.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.19.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.19.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.19.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.20.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.21.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.21.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,337 - mmdet - INFO - img_backbone.blocks.21.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.21.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.22.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.22.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.22.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.22.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.22.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.22.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.22.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.22.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,338 - mmdet - INFO - img_backbone.blocks.22.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.22.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.22.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.22.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.22.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.22.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.22.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.22.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.22.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.22.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.22.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.norm1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.norm1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.attn.q_bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.attn.v_bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.attn.q_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.attn.k_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.attn.v_proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.attn.proj.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.attn.proj.bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.norm2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.norm2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.mlp.w1.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.mlp.w1.bias: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.mlp.w2.weight: torch.float32, False, cpu
2025-03-03 17:09:23,339 - mmdet - INFO - img_backbone.blocks.23.mlp.w2.bias: torch.float32, False, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - img_backbone.blocks.23.mlp.ffn_ln.weight: torch.float32, False, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - img_backbone.blocks.23.mlp.ffn_ln.bias: torch.float32, False, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - img_backbone.blocks.23.mlp.w3.weight: torch.float32, False, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - img_backbone.blocks.23.mlp.w3.bias: torch.float32, False, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.code_weights: torch.float32, False, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.match_costs: torch.float32, False, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.pc_range: torch.float32, False, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.cls_branches.0.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.cls_branches.0.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.cls_branches.0.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.cls_branches.0.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.cls_branches.0.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.cls_branches.0.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.cls_branches.0.4.weight: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.cls_branches.0.4.bias: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.cls_branches.0.6.weight: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.cls_branches.0.6.bias: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.reg_branches.0.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.reg_branches.0.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.reg_branches.0.2.weight: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.reg_branches.0.2.bias: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.reg_branches.0.4.weight: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.reg_branches.0.4.bias: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.input_projection.weight: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.input_projection.bias: torch.float32, True, cpu
2025-03-03 17:09:23,340 - mmdet - INFO - map_head.output_projection.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.output_projection.bias: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.reference_points_lane.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.reference_points_lane.bias: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.points_embedding_lane.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.instance_embedding_lane.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.query_embedding.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,341 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,342 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,343 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-03 17:09:23,344 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - position_encoder.0.weight: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - position_encoder.0.bias: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - position_encoder.2.weight: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - position_encoder.2.bias: torch.float32, True, cpu
2025-03-03 17:09:23,345 - mmdet - INFO - lm_head.base_model.model.model.embed_tokens.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,345 - mmdet - INFO - torch.Size([32000, 4096])
2025-03-03 17:09:23,345 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,345 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,345 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,345 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,345 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,345 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,346 - mmdet - INFO - lm_head.base_model.model.model.layers.0.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,346 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.1.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,347 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.1.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,348 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.1.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,348 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.1.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,348 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,348 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,348 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,348 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,348 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,348 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,348 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,348 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,348 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,348 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.2.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.2.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.2.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.2.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.2.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,349 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,349 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.3.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.3.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.3.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.3.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.3.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,350 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,350 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.4.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.4.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.4.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.4.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.4.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,351 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,351 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,352 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,352 - mmdet - INFO - lm_head.base_model.model.model.layers.5.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.5.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.5.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,353 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,353 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.6.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.6.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.6.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.6.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.6.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,354 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,354 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.7.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.7.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.7.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.7.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.7.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,355 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,355 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.8.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.8.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.8.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.8.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.8.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,356 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.9.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,357 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,357 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.10.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.10.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,358 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.10.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.10.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.10.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,359 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,359 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.11.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.11.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.11.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.11.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.11.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,360 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,360 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.12.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.12.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.12.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.12.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.12.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,361 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,361 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.13.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.13.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.13.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.13.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.13.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,362 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,362 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,363 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,363 - mmdet - INFO - lm_head.base_model.model.model.layers.14.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,364 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.15.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.15.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.15.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.15.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,365 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,365 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.16.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.16.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.16.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.16.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.16.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,366 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,366 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.17.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.17.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.17.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.17.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.17.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,367 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,367 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.18.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.18.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.18.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.18.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.18.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,368 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,368 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,369 - mmdet - INFO - lm_head.base_model.model.model.layers.19.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,369 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.19.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,370 - mmdet - INFO - lm_head.base_model.model.model.layers.20.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,370 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.20.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.20.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.20.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,371 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,371 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.21.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.21.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.21.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.21.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.21.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,372 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,372 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.22.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.22.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.22.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.22.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.22.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,373 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.23.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.23.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.23.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.23.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.23.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,374 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,374 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,375 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.24.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,376 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,376 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,376 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,376 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,376 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,376 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,376 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,376 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,376 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,376 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,376 - mmdet - INFO - lm_head.base_model.model.model.layers.25.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,376 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.25.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.25.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.25.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.25.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,377 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,377 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.26.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.26.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.26.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.26.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.26.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,378 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,378 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.27.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.27.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.27.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.27.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.27.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,379 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,379 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.28.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.28.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.28.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.28.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.28.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,380 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,380 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.29.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,381 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.29.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,382 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,382 - mmdet - INFO - lm_head.base_model.model.model.layers.30.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.30.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.30.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.30.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([8388608, 1])
2025-03-03 17:09:23,383 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,383 - mmdet - INFO - torch.Size([8, 4096])
2025-03-03 17:09:23,384 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-03 17:09:23,384 - mmdet - INFO - torch.Size([4096, 8])
2025-03-03 17:09:23,384 - mmdet - INFO - lm_head.base_model.model.model.layers.31.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,384 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,384 - mmdet - INFO - lm_head.base_model.model.model.layers.31.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,384 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,384 - mmdet - INFO - lm_head.base_model.model.model.layers.31.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-03 17:09:23,384 - mmdet - INFO - torch.Size([22544384, 1])
2025-03-03 17:09:23,384 - mmdet - INFO - lm_head.base_model.model.model.layers.31.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,384 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,384 - mmdet - INFO - lm_head.base_model.model.model.layers.31.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,384 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,384 - mmdet - INFO - lm_head.base_model.model.model.norm.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,384 - mmdet - INFO - torch.Size([4096])
2025-03-03 17:09:23,384 - mmdet - INFO - lm_head.base_model.model.lm_head.weight: torch.float32, False, cuda:0
2025-03-03 17:09:23,384 - mmdet - INFO - torch.Size([32000, 4096])
2025-03-03 17:09:30,497 - mmdet - INFO - load checkpoint from local path: ckpts/eva02_petr_proj.pth
2025-03-03 17:09:31,658 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for img_backbone.rope_glb.freqs_cos: copying a param with shape torch.Size([9216, 64]) from checkpoint, the shape in current model is torch.Size([1600, 64]).
size mismatch for img_backbone.rope_glb.freqs_sin: copying a param with shape torch.Size([9216, 64]) from checkpoint, the shape in current model is torch.Size([1600, 64]).
missing keys in source state_dict: position_range, coords_d, pts_bbox_head.code_weights, pts_bbox_head.match_costs, pts_bbox_head.pc_range, pts_bbox_head.cls_branches.0.0.weight, pts_bbox_head.cls_branches.0.0.bias, pts_bbox_head.cls_branches.0.1.weight, pts_bbox_head.cls_branches.0.1.bias, pts_bbox_head.cls_branches.0.3.weight, pts_bbox_head.cls_branches.0.3.bias, pts_bbox_head.cls_branches.0.4.weight, pts_bbox_head.cls_branches.0.4.bias, pts_bbox_head.cls_branches.0.6.weight, pts_bbox_head.cls_branches.0.6.bias, pts_bbox_head.cls_branches.1.0.weight, pts_bbox_head.cls_branches.1.0.bias, pts_bbox_head.cls_branches.1.1.weight, pts_bbox_head.cls_branches.1.1.bias, pts_bbox_head.cls_branches.1.3.weight, pts_bbox_head.cls_branches.1.3.bias, pts_bbox_head.cls_branches.1.4.weight, pts_bbox_head.cls_branches.1.4.bias, pts_bbox_head.cls_branches.1.6.weight, pts_bbox_head.cls_branches.1.6.bias, pts_bbox_head.cls_branches.2.0.weight, pts_bbox_head.cls_branches.2.0.bias, pts_bbox_head.cls_branches.2.1.weight, pts_bbox_head.cls_branches.2.1.bias, pts_bbox_head.cls_branches.2.3.weight, pts_bbox_head.cls_branches.2.3.bias, pts_bbox_head.cls_branches.2.4.weight, pts_bbox_head.cls_branches.2.4.bias, pts_bbox_head.cls_branches.2.6.weight, pts_bbox_head.cls_branches.2.6.bias, pts_bbox_head.cls_branches.3.0.weight, pts_bbox_head.cls_branches.3.0.bias, pts_bbox_head.cls_branches.3.1.weight, pts_bbox_head.cls_branches.3.1.bias, pts_bbox_head.cls_branches.3.3.weight, pts_bbox_head.cls_branches.3.3.bias, pts_bbox_head.cls_branches.3.4.weight, pts_bbox_head.cls_branches.3.4.bias, pts_bbox_head.cls_branches.3.6.weight, pts_bbox_head.cls_branches.3.6.bias, pts_bbox_head.cls_branches.4.0.weight, pts_bbox_head.cls_branches.4.0.bias, pts_bbox_head.cls_branches.4.1.weight, pts_bbox_head.cls_branches.4.1.bias, pts_bbox_head.cls_branches.4.3.weight, pts_bbox_head.cls_branches.4.3.bias, pts_bbox_head.cls_branches.4.4.weight, pts_bbox_head.cls_branches.4.4.bias, pts_bbox_head.cls_branches.4.6.weight, pts_bbox_head.cls_branches.4.6.bias, pts_bbox_head.cls_branches.5.0.weight, pts_bbox_head.cls_branches.5.0.bias, pts_bbox_head.cls_branches.5.1.weight, pts_bbox_head.cls_branches.5.1.bias, pts_bbox_head.cls_branches.5.3.weight, pts_bbox_head.cls_branches.5.3.bias, pts_bbox_head.cls_branches.5.4.weight, pts_bbox_head.cls_branches.5.4.bias, pts_bbox_head.cls_branches.5.6.weight, pts_bbox_head.cls_branches.5.6.bias, pts_bbox_head.reg_branches.0.0.weight, pts_bbox_head.reg_branches.0.0.bias, pts_bbox_head.reg_branches.0.2.weight, pts_bbox_head.reg_branches.0.2.bias, pts_bbox_head.reg_branches.0.4.weight, pts_bbox_head.reg_branches.0.4.bias, pts_bbox_head.reg_branches.1.0.weight, pts_bbox_head.reg_branches.1.0.bias, pts_bbox_head.reg_branches.1.2.weight, pts_bbox_head.reg_branches.1.2.bias, pts_bbox_head.reg_branches.1.4.weight, pts_bbox_head.reg_branches.1.4.bias, pts_bbox_head.reg_branches.2.0.weight, pts_bbox_head.reg_branches.2.0.bias, pts_bbox_head.reg_branches.2.2.weight, pts_bbox_head.reg_branches.2.2.bias, pts_bbox_head.reg_branches.2.4.weight, pts_bbox_head.reg_branches.2.4.bias, pts_bbox_head.reg_branches.3.0.weight, pts_bbox_head.reg_branches.3.0.bias, pts_bbox_head.reg_branches.3.2.weight, pts_bbox_head.reg_branches.3.2.bias, pts_bbox_head.reg_branches.3.4.weight, pts_bbox_head.reg_branches.3.4.bias, pts_bbox_head.reg_branches.4.0.weight, pts_bbox_head.reg_branches.4.0.bias, pts_bbox_head.reg_branches.4.2.weight, pts_bbox_head.reg_branches.4.2.bias, pts_bbox_head.reg_branches.4.4.weight, pts_bbox_head.reg_branches.4.4.bias, pts_bbox_head.reg_branches.5.0.weight, pts_bbox_head.reg_branches.5.0.bias, pts_bbox_head.reg_branches.5.2.weight, pts_bbox_head.reg_branches.5.2.bias, pts_bbox_head.reg_branches.5.4.weight, pts_bbox_head.reg_branches.5.4.bias, pts_bbox_head.reference_points.weight, pts_bbox_head.pseudo_reference_points.weight, pts_bbox_head.can_bus_embed.0.weight, pts_bbox_head.can_bus_embed.0.bias, pts_bbox_head.can_bus_embed.2.weight, pts_bbox_head.can_bus_embed.2.bias, pts_bbox_head.query_pos.0.weight, pts_bbox_head.query_pos.0.bias, pts_bbox_head.query_pos.2.weight, pts_bbox_head.query_pos.2.bias, pts_bbox_head.time_embedding.0.weight, pts_bbox_head.time_embedding.0.bias, pts_bbox_head.time_embedding.1.weight, pts_bbox_head.time_embedding.1.bias, pts_bbox_head.ego_pose_pe.reduce.0.weight, pts_bbox_head.ego_pose_pe.reduce.0.bias, pts_bbox_head.ego_pose_pe.gamma.weight, pts_bbox_head.ego_pose_pe.gamma.bias, pts_bbox_head.ego_pose_pe.beta.weight, pts_bbox_head.ego_pose_pe.beta.bias, query_pos.0.weight, query_pos.0.bias, query_pos.2.weight, query_pos.2.bias, time_embedding.0.weight, time_embedding.0.bias, time_embedding.1.weight, time_embedding.1.bias, ego_pose_pe.reduce.0.weight, ego_pose_pe.reduce.0.bias, ego_pose_pe.gamma.weight, ego_pose_pe.gamma.bias, ego_pose_pe.beta.weight, ego_pose_pe.beta.bias, map_head.code_weights, map_head.match_costs, map_head.pc_range, map_head.cls_branches.0.0.weight, map_head.cls_branches.0.0.bias, map_head.cls_branches.0.1.weight, map_head.cls_branches.0.1.bias, map_head.cls_branches.0.3.weight, map_head.cls_branches.0.3.bias, map_head.cls_branches.0.4.weight, map_head.cls_branches.0.4.bias, map_head.cls_branches.0.6.weight, map_head.cls_branches.0.6.bias, map_head.cls_branches.1.0.weight, map_head.cls_branches.1.0.bias, map_head.cls_branches.1.1.weight, map_head.cls_branches.1.1.bias, map_head.cls_branches.1.3.weight, map_head.cls_branches.1.3.bias, map_head.cls_branches.1.4.weight, map_head.cls_branches.1.4.bias, map_head.cls_branches.1.6.weight, map_head.cls_branches.1.6.bias, map_head.cls_branches.2.0.weight, map_head.cls_branches.2.0.bias, map_head.cls_branches.2.1.weight, map_head.cls_branches.2.1.bias, map_head.cls_branches.2.3.weight, map_head.cls_branches.2.3.bias, map_head.cls_branches.2.4.weight, map_head.cls_branches.2.4.bias, map_head.cls_branches.2.6.weight, map_head.cls_branches.2.6.bias, map_head.cls_branches.3.0.weight, map_head.cls_branches.3.0.bias, map_head.cls_branches.3.1.weight, map_head.cls_branches.3.1.bias, map_head.cls_branches.3.3.weight, map_head.cls_branches.3.3.bias, map_head.cls_branches.3.4.weight, map_head.cls_branches.3.4.bias, map_head.cls_branches.3.6.weight, map_head.cls_branches.3.6.bias, map_head.cls_branches.4.0.weight, map_head.cls_branches.4.0.bias, map_head.cls_branches.4.1.weight, map_head.cls_branches.4.1.bias, map_head.cls_branches.4.3.weight, map_head.cls_branches.4.3.bias, map_head.cls_branches.4.4.weight, map_head.cls_branches.4.4.bias, map_head.cls_branches.4.6.weight, map_head.cls_branches.4.6.bias, map_head.cls_branches.5.0.weight, map_head.cls_branches.5.0.bias, map_head.cls_branches.5.1.weight, map_head.cls_branches.5.1.bias, map_head.cls_branches.5.3.weight, map_head.cls_branches.5.3.bias, map_head.cls_branches.5.4.weight, map_head.cls_branches.5.4.bias, map_head.cls_branches.5.6.weight, map_head.cls_branches.5.6.bias, map_head.reg_branches.0.0.weight, map_head.reg_branches.0.0.bias, map_head.reg_branches.0.2.weight, map_head.reg_branches.0.2.bias, map_head.reg_branches.0.4.weight, map_head.reg_branches.0.4.bias, map_head.reg_branches.1.0.weight, map_head.reg_branches.1.0.bias, map_head.reg_branches.1.2.weight, map_head.reg_branches.1.2.bias, map_head.reg_branches.1.4.weight, map_head.reg_branches.1.4.bias, map_head.reg_branches.2.0.weight, map_head.reg_branches.2.0.bias, map_head.reg_branches.2.2.weight, map_head.reg_branches.2.2.bias, map_head.reg_branches.2.4.weight, map_head.reg_branches.2.4.bias, map_head.reg_branches.3.0.weight, map_head.reg_branches.3.0.bias, map_head.reg_branches.3.2.weight, map_head.reg_branches.3.2.bias, map_head.reg_branches.3.4.weight, map_head.reg_branches.3.4.bias, map_head.reg_branches.4.0.weight, map_head.reg_branches.4.0.bias, map_head.reg_branches.4.2.weight, map_head.reg_branches.4.2.bias, map_head.reg_branches.4.4.weight, map_head.reg_branches.4.4.bias, map_head.reg_branches.5.0.weight, map_head.reg_branches.5.0.bias, map_head.reg_branches.5.2.weight, map_head.reg_branches.5.2.bias, map_head.reg_branches.5.4.weight, map_head.reg_branches.5.4.bias, map_head.reference_points_lane.weight, map_head.reference_points_lane.bias, map_head.points_embedding_lane.weight, map_head.instance_embedding_lane.weight, map_head.query_pos.0.weight, map_head.query_pos.0.bias, map_head.query_pos.2.weight, map_head.query_pos.2.bias, map_head.time_embedding.0.weight, map_head.time_embedding.0.bias, map_head.time_embedding.1.weight, map_head.time_embedding.1.bias, map_head.ego_pose_pe.reduce.0.weight, map_head.ego_pose_pe.reduce.0.bias, map_head.ego_pose_pe.gamma.weight, map_head.ego_pose_pe.gamma.bias, map_head.ego_pose_pe.beta.weight, map_head.ego_pose_pe.beta.bias, position_encoder.0.weight, position_encoder.0.bias, position_encoder.2.weight, position_encoder.2.bias, lm_head.base_model.model.weighted_mask, lm_head.base_model.model.model.embed_tokens.weight, lm_head.base_model.model.model.layers.0.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.0.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.0.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.0.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.0.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.0.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.0.mlp.up_proj.weight, lm_head.base_model.model.model.layers.0.mlp.down_proj.weight, lm_head.base_model.model.model.layers.0.input_layernorm.weight, lm_head.base_model.model.model.layers.0.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.1.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.1.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.1.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.1.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.1.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.1.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.1.mlp.up_proj.weight, lm_head.base_model.model.model.layers.1.mlp.down_proj.weight, lm_head.base_model.model.model.layers.1.input_layernorm.weight, lm_head.base_model.model.model.layers.1.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.2.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.2.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.2.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.2.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.2.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.2.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.2.mlp.up_proj.weight, lm_head.base_model.model.model.layers.2.mlp.down_proj.weight, lm_head.base_model.model.model.layers.2.input_layernorm.weight, lm_head.base_model.model.model.layers.2.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.3.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.3.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.3.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.3.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.3.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.3.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.3.mlp.up_proj.weight, lm_head.base_model.model.model.layers.3.mlp.down_proj.weight, lm_head.base_model.model.model.layers.3.input_layernorm.weight, lm_head.base_model.model.model.layers.3.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.4.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.4.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.4.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.4.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.4.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.4.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.4.mlp.up_proj.weight, lm_head.base_model.model.model.layers.4.mlp.down_proj.weight, lm_head.base_model.model.model.layers.4.input_layernorm.weight, lm_head.base_model.model.model.layers.4.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.5.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.5.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.5.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.5.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.5.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.5.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.5.mlp.up_proj.weight, lm_head.base_model.model.model.layers.5.mlp.down_proj.weight, lm_head.base_model.model.model.layers.5.input_layernorm.weight, lm_head.base_model.model.model.layers.5.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.6.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.6.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.6.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.6.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.6.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.6.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.6.mlp.up_proj.weight, lm_head.base_model.model.model.layers.6.mlp.down_proj.weight, lm_head.base_model.model.model.layers.6.input_layernorm.weight, lm_head.base_model.model.model.layers.6.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.7.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.7.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.7.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.7.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.7.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.7.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.7.mlp.up_proj.weight, lm_head.base_model.model.model.layers.7.mlp.down_proj.weight, lm_head.base_model.model.model.layers.7.input_layernorm.weight, lm_head.base_model.model.model.layers.7.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.8.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.8.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.8.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.8.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.8.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.8.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.8.mlp.up_proj.weight, lm_head.base_model.model.model.layers.8.mlp.down_proj.weight, lm_head.base_model.model.model.layers.8.input_layernorm.weight, lm_head.base_model.model.model.layers.8.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.9.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.9.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.9.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.9.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.9.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.9.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.9.mlp.up_proj.weight, lm_head.base_model.model.model.layers.9.mlp.down_proj.weight, lm_head.base_model.model.model.layers.9.input_layernorm.weight, lm_head.base_model.model.model.layers.9.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.10.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.10.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.10.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.10.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.10.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.10.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.10.mlp.up_proj.weight, lm_head.base_model.model.model.layers.10.mlp.down_proj.weight, lm_head.base_model.model.model.layers.10.input_layernorm.weight, lm_head.base_model.model.model.layers.10.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.11.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.11.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.11.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.11.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.11.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.11.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.11.mlp.up_proj.weight, lm_head.base_model.model.model.layers.11.mlp.down_proj.weight, lm_head.base_model.model.model.layers.11.input_layernorm.weight, lm_head.base_model.model.model.layers.11.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.12.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.12.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.12.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.12.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.12.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.12.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.12.mlp.up_proj.weight, lm_head.base_model.model.model.layers.12.mlp.down_proj.weight, lm_head.base_model.model.model.layers.12.input_layernorm.weight, lm_head.base_model.model.model.layers.12.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.13.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.13.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.13.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.13.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.13.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.13.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.13.mlp.up_proj.weight, lm_head.base_model.model.model.layers.13.mlp.down_proj.weight, lm_head.base_model.model.model.layers.13.input_layernorm.weight, lm_head.base_model.model.model.layers.13.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.14.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.14.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.14.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.14.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.14.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.14.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.14.mlp.up_proj.weight, lm_head.base_model.model.model.layers.14.mlp.down_proj.weight, lm_head.base_model.model.model.layers.14.input_layernorm.weight, lm_head.base_model.model.model.layers.14.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.15.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.15.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.15.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.15.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.15.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.15.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.15.mlp.up_proj.weight, lm_head.base_model.model.model.layers.15.mlp.down_proj.weight, lm_head.base_model.model.model.layers.15.input_layernorm.weight, lm_head.base_model.model.model.layers.15.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.16.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.16.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.16.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.16.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.16.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.16.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.16.mlp.up_proj.weight, lm_head.base_model.model.model.layers.16.mlp.down_proj.weight, lm_head.base_model.model.model.layers.16.input_layernorm.weight, lm_head.base_model.model.model.layers.16.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.17.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.17.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.17.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.17.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.17.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.17.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.17.mlp.up_proj.weight, lm_head.base_model.model.model.layers.17.mlp.down_proj.weight, lm_head.base_model.model.model.layers.17.input_layernorm.weight, lm_head.base_model.model.model.layers.17.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.18.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.18.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.18.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.18.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.18.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.18.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.18.mlp.up_proj.weight, lm_head.base_model.model.model.layers.18.mlp.down_proj.weight, lm_head.base_model.model.model.layers.18.input_layernorm.weight, lm_head.base_model.model.model.layers.18.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.19.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.19.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.19.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.19.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.19.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.19.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.19.mlp.up_proj.weight, lm_head.base_model.model.model.layers.19.mlp.down_proj.weight, lm_head.base_model.model.model.layers.19.input_layernorm.weight, lm_head.base_model.model.model.layers.19.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.20.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.20.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.20.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.20.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.20.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.20.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.20.mlp.up_proj.weight, lm_head.base_model.model.model.layers.20.mlp.down_proj.weight, lm_head.base_model.model.model.layers.20.input_layernorm.weight, lm_head.base_model.model.model.layers.20.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.21.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.21.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.21.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.21.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.21.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.21.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.21.mlp.up_proj.weight, lm_head.base_model.model.model.layers.21.mlp.down_proj.weight, lm_head.base_model.model.model.layers.21.input_layernorm.weight, lm_head.base_model.model.model.layers.21.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.22.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.22.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.22.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.22.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.22.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.22.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.22.mlp.up_proj.weight, lm_head.base_model.model.model.layers.22.mlp.down_proj.weight, lm_head.base_model.model.model.layers.22.input_layernorm.weight, lm_head.base_model.model.model.layers.22.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.23.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.23.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.23.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.23.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.23.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.23.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.23.mlp.up_proj.weight, lm_head.base_model.model.model.layers.23.mlp.down_proj.weight, lm_head.base_model.model.model.layers.23.input_layernorm.weight, lm_head.base_model.model.model.layers.23.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.24.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.24.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.24.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.24.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.24.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.24.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.24.mlp.up_proj.weight, lm_head.base_model.model.model.layers.24.mlp.down_proj.weight, lm_head.base_model.model.model.layers.24.input_layernorm.weight, lm_head.base_model.model.model.layers.24.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.25.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.25.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.25.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.25.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.25.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.25.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.25.mlp.up_proj.weight, lm_head.base_model.model.model.layers.25.mlp.down_proj.weight, lm_head.base_model.model.model.layers.25.input_layernorm.weight, lm_head.base_model.model.model.layers.25.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.26.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.26.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.26.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.26.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.26.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.26.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.26.mlp.up_proj.weight, lm_head.base_model.model.model.layers.26.mlp.down_proj.weight, lm_head.base_model.model.model.layers.26.input_layernorm.weight, lm_head.base_model.model.model.layers.26.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.27.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.27.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.27.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.27.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.27.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.27.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.27.mlp.up_proj.weight, lm_head.base_model.model.model.layers.27.mlp.down_proj.weight, lm_head.base_model.model.model.layers.27.input_layernorm.weight, lm_head.base_model.model.model.layers.27.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.28.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.28.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.28.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.28.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.28.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.28.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.28.mlp.up_proj.weight, lm_head.base_model.model.model.layers.28.mlp.down_proj.weight, lm_head.base_model.model.model.layers.28.input_layernorm.weight, lm_head.base_model.model.model.layers.28.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.29.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.29.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.29.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.29.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.29.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.29.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.29.mlp.up_proj.weight, lm_head.base_model.model.model.layers.29.mlp.down_proj.weight, lm_head.base_model.model.model.layers.29.input_layernorm.weight, lm_head.base_model.model.model.layers.29.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.30.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.30.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.30.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.30.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.30.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.30.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.30.mlp.up_proj.weight, lm_head.base_model.model.model.layers.30.mlp.down_proj.weight, lm_head.base_model.model.model.layers.30.input_layernorm.weight, lm_head.base_model.model.model.layers.30.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.31.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.31.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.31.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.31.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.31.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.31.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.31.mlp.up_proj.weight, lm_head.base_model.model.model.layers.31.mlp.down_proj.weight, lm_head.base_model.model.model.layers.31.input_layernorm.weight, lm_head.base_model.model.model.layers.31.post_attention_layernorm.weight, lm_head.base_model.model.model.norm.weight, lm_head.base_model.model.lm_head.weight

2025-03-03 17:09:31,681 - mmdet - INFO - Start running, host: mist_sophia@DESKTOP-FV3EM2A, work_dir: /home/mist_sophia/ad/test/OmniDrive/work_dirs/mask_eva_lane_det_vlm
2025-03-03 17:09:31,682 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) CustomDistEvalHook                 
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(NORMAL      ) CustomDistEvalHook                 
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(NORMAL      ) CustomDistEvalHook                 
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) CustomDistEvalHook                 
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) CustomDistEvalHook                 
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2025-03-03 17:09:31,682 - mmdet - INFO - workflow: [('train', 1)], max: 168780 iters
2025-03-03 17:09:31,687 - mmdet - INFO - Checkpoints will be saved to /home/mist_sophia/ad/test/OmniDrive/work_dirs/mask_eva_lane_det_vlm by HardDiskBackend.
