2025-03-02 06:16:39,194 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.9.21 (main, Dec 11 2024, 16:24:11) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.13.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.1
OpenCV: 4.11.0
MMCV: 1.6.2
MMCV Compiler: GCC 11.4
MMCV CUDA Compiler: 11.8
MMDetection: 2.28.2
MMSegmentation: 0.30.0
MMDetection3D: 1.0.0rc6+7175f0d
spconv2.0: True
------------------------------------------------------------

2025-03-02 06:16:40,178 - mmdet - INFO - Distributed training: True
2025-03-02 06:16:41,069 - mmdet - INFO - Config:
point_cloud_range = [-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]
class_names = [
    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',
    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
]
dataset_type = 'CustomNuScenesDataset'
data_root = './data/nuscenes/'
input_modality = dict(
    use_lidar=False,
    use_camera=True,
    use_radar=False,
    use_map=False,
    use_external=True)
file_client_args = dict(backend='disk')
train_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_bbox=True,
        with_label=True,
        with_bbox_depth=True),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),
    dict(
        type='ObjectNameFilter',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(
        type='ResizeCropFlipRotImage',
        data_aug_conf=dict(
            resize_lim=(0.37, 0.45),
            final_dim=(320, 640),
            bot_pct_lim=(0.0, 0.0),
            rot_lim=(0.0, 0.0),
            H=900,
            W=1600,
            rand_flip=False),
        training=True),
    dict(
        type='ResizeMultiview3D',
        img_scale=(640, 640),
        keep_ratio=False,
        multiscale_mode='value'),
    dict(
        type='LoadAnnoatationVQA',
        base_vqa_path='./data/nuscenes/vqa/train/',
        base_desc_path='./data/nuscenes/desc/train/',
        base_conv_path='./data/nuscenes/conv/train/',
        base_key_path='./data/nuscenes/keywords/train/',
        tokenizer='ckpts/pretrain_qformer/',
        max_length=2048,
        ignore_type=[],
        lane_objs_info='./data/nuscenes/lane_obj_train.pkl'),
    dict(
        type='NormalizeMultiviewImage',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='PadMultiViewImage', size_divisor=32),
    dict(
        type='PETRFormatBundle3D',
        class_names=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        collect_keys=[
            'lidar2img', 'intrinsics', 'extrinsics', 'timestamp',
            'img_timestamp', 'ego_pose', 'ego_pose_inv', 'command', 'can_bus',
            'prev_exists'
        ]),
    dict(
        type='Collect3D',
        keys=[
            'lane_pts', 'input_ids', 'vlm_labels', 'gt_bboxes_3d',
            'gt_labels_3d', 'img', 'gt_bboxes', 'gt_labels', 'centers2d',
            'depths', 'prev_exists', 'lidar2img', 'intrinsics', 'extrinsics',
            'timestamp', 'img_timestamp', 'ego_pose', 'ego_pose_inv',
            'command', 'can_bus'
        ],
        meta_keys=('filename', 'ori_shape', 'img_shape', 'pad_shape',
                   'scale_factor', 'flip', 'box_mode_3d', 'box_type_3d',
                   'img_norm_cfg', 'scene_token', 'gt_bboxes_3d',
                   'gt_labels_3d'))
]
test_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='ResizeCropFlipRotImage',
        data_aug_conf=dict(
            resize_lim=(0.37, 0.45),
            final_dim=(320, 640),
            bot_pct_lim=(0.0, 0.0),
            rot_lim=(0.0, 0.0),
            H=900,
            W=1600,
            rand_flip=False),
        training=False),
    dict(
        type='ResizeMultiview3D',
        img_scale=(640, 640),
        keep_ratio=False,
        multiscale_mode='value'),
    dict(
        type='NormalizeMultiviewImage',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='PadMultiViewImage', size_divisor=32),
    dict(
        type='LoadAnnoatationVQATest',
        base_vqa_path='./data/nuscenes/vqa/val/',
        base_conv_path='./data/nuscenes/conv/val/',
        base_counter_path='./data/nuscenes/eval_cf/',
        load_type=['planning'],
        tokenizer='ckpts/pretrain_qformer/',
        max_length=2048),
    dict(
        type='MultiScaleFlipAug3D',
        img_scale=(1333, 800),
        pts_scale_ratio=1,
        flip=False,
        transforms=[
            dict(
                type='PETRFormatBundle3D',
                collect_keys=[
                    'lidar2img', 'intrinsics', 'extrinsics', 'timestamp',
                    'img_timestamp', 'ego_pose', 'ego_pose_inv', 'command',
                    'can_bus'
                ],
                class_names=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ],
                with_label=False),
            dict(
                type='Collect3D',
                keys=[
                    'input_ids', 'img', 'lidar2img', 'intrinsics',
                    'extrinsics', 'timestamp', 'img_timestamp', 'ego_pose',
                    'ego_pose_inv', 'command', 'can_bus'
                ],
                meta_keys=('sample_idx', 'vlm_labels', 'filename', 'ori_shape',
                           'img_shape', 'pad_shape', 'scale_factor', 'flip',
                           'box_mode_3d', 'box_type_3d', 'img_norm_cfg',
                           'scene_token'))
        ])
]
eval_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        file_client_args=dict(backend='disk')),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=10,
        file_client_args=dict(backend='disk')),
    dict(
        type='DefaultFormatBundle3D',
        class_names=[
            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'
        ],
        with_label=False),
    dict(type='Collect3D', keys=['points'])
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=2,
    train=dict(
        type='CustomNuScenesDataset',
        data_root='./data/nuscenes/',
        ann_file='./data/nuscenes/nuscenes2d_ego_temporal_infos_train.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_bbox=True,
                with_label=True,
                with_bbox_depth=True),
            dict(
                type='ObjectRangeFilter',
                point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),
            dict(
                type='ObjectNameFilter',
                classes=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ]),
            dict(
                type='ResizeCropFlipRotImage',
                data_aug_conf=dict(
                    resize_lim=(0.37, 0.45),
                    final_dim=(320, 640),
                    bot_pct_lim=(0.0, 0.0),
                    rot_lim=(0.0, 0.0),
                    H=900,
                    W=1600,
                    rand_flip=False),
                training=True),
            dict(
                type='ResizeMultiview3D',
                img_scale=(640, 640),
                keep_ratio=False,
                multiscale_mode='value'),
            dict(
                type='LoadAnnoatationVQA',
                base_vqa_path='./data/nuscenes/vqa/train/',
                base_desc_path='./data/nuscenes/desc/train/',
                base_conv_path='./data/nuscenes/conv/train/',
                base_key_path='./data/nuscenes/keywords/train/',
                tokenizer='ckpts/pretrain_qformer/',
                max_length=2048,
                ignore_type=[],
                lane_objs_info='./data/nuscenes/lane_obj_train.pkl'),
            dict(
                type='NormalizeMultiviewImage',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='PadMultiViewImage', size_divisor=32),
            dict(
                type='PETRFormatBundle3D',
                class_names=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ],
                collect_keys=[
                    'lidar2img', 'intrinsics', 'extrinsics', 'timestamp',
                    'img_timestamp', 'ego_pose', 'ego_pose_inv', 'command',
                    'can_bus', 'prev_exists'
                ]),
            dict(
                type='Collect3D',
                keys=[
                    'lane_pts', 'input_ids', 'vlm_labels', 'gt_bboxes_3d',
                    'gt_labels_3d', 'img', 'gt_bboxes', 'gt_labels',
                    'centers2d', 'depths', 'prev_exists', 'lidar2img',
                    'intrinsics', 'extrinsics', 'timestamp', 'img_timestamp',
                    'ego_pose', 'ego_pose_inv', 'command', 'can_bus'
                ],
                meta_keys=('filename', 'ori_shape', 'img_shape', 'pad_shape',
                           'scale_factor', 'flip', 'box_mode_3d',
                           'box_type_3d', 'img_norm_cfg', 'scene_token',
                           'gt_bboxes_3d', 'gt_labels_3d'))
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=False,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=True),
        test_mode=False,
        box_type_3d='LiDAR',
        seq_split_num=1,
        seq_mode=True,
        use_valid_flag=True,
        filter_empty_gt=False),
    val=dict(
        type='CustomNuScenesDataset',
        data_root='data/nuscenes/',
        ann_file='./data/nuscenes/nuscenes2d_ego_temporal_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='ResizeCropFlipRotImage',
                data_aug_conf=dict(
                    resize_lim=(0.37, 0.45),
                    final_dim=(320, 640),
                    bot_pct_lim=(0.0, 0.0),
                    rot_lim=(0.0, 0.0),
                    H=900,
                    W=1600,
                    rand_flip=False),
                training=False),
            dict(
                type='ResizeMultiview3D',
                img_scale=(640, 640),
                keep_ratio=False,
                multiscale_mode='value'),
            dict(
                type='NormalizeMultiviewImage',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='PadMultiViewImage', size_divisor=32),
            dict(
                type='LoadAnnoatationVQATest',
                base_vqa_path='./data/nuscenes/vqa/val/',
                base_conv_path='./data/nuscenes/conv/val/',
                base_counter_path='./data/nuscenes/eval_cf/',
                load_type=['planning'],
                tokenizer='ckpts/pretrain_qformer/',
                max_length=2048),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(1333, 800),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='PETRFormatBundle3D',
                        collect_keys=[
                            'lidar2img', 'intrinsics', 'extrinsics',
                            'timestamp', 'img_timestamp', 'ego_pose',
                            'ego_pose_inv', 'command', 'can_bus'
                        ],
                        class_names=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        with_label=False),
                    dict(
                        type='Collect3D',
                        keys=[
                            'input_ids', 'img', 'lidar2img', 'intrinsics',
                            'extrinsics', 'timestamp', 'img_timestamp',
                            'ego_pose', 'ego_pose_inv', 'command', 'can_bus'
                        ],
                        meta_keys=('sample_idx', 'vlm_labels', 'filename',
                                   'ori_shape', 'img_shape', 'pad_shape',
                                   'scale_factor', 'flip', 'box_mode_3d',
                                   'box_type_3d', 'img_norm_cfg',
                                   'scene_token'))
                ])
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=False,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=True),
        test_mode=True,
        box_type_3d='LiDAR',
        eval_mode=['lane', 'det']),
    test=dict(
        type='CustomNuScenesDataset',
        data_root='data/nuscenes/',
        ann_file='./data/nuscenes/nuscenes2d_ego_temporal_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='ResizeCropFlipRotImage',
                data_aug_conf=dict(
                    resize_lim=(0.37, 0.45),
                    final_dim=(320, 640),
                    bot_pct_lim=(0.0, 0.0),
                    rot_lim=(0.0, 0.0),
                    H=900,
                    W=1600,
                    rand_flip=False),
                training=False),
            dict(
                type='ResizeMultiview3D',
                img_scale=(640, 640),
                keep_ratio=False,
                multiscale_mode='value'),
            dict(
                type='NormalizeMultiviewImage',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='PadMultiViewImage', size_divisor=32),
            dict(
                type='LoadAnnoatationVQATest',
                base_vqa_path='./data/nuscenes/vqa/val/',
                base_conv_path='./data/nuscenes/conv/val/',
                base_counter_path='./data/nuscenes/eval_cf/',
                load_type=['planning'],
                tokenizer='ckpts/pretrain_qformer/',
                max_length=2048),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(1333, 800),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='PETRFormatBundle3D',
                        collect_keys=[
                            'lidar2img', 'intrinsics', 'extrinsics',
                            'timestamp', 'img_timestamp', 'ego_pose',
                            'ego_pose_inv', 'command', 'can_bus'
                        ],
                        class_names=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        with_label=False),
                    dict(
                        type='Collect3D',
                        keys=[
                            'input_ids', 'img', 'lidar2img', 'intrinsics',
                            'extrinsics', 'timestamp', 'img_timestamp',
                            'ego_pose', 'ego_pose_inv', 'command', 'can_bus'
                        ],
                        meta_keys=('sample_idx', 'vlm_labels', 'filename',
                                   'ori_shape', 'img_shape', 'pad_shape',
                                   'scale_factor', 'flip', 'box_mode_3d',
                                   'box_type_3d', 'img_norm_cfg',
                                   'scene_token'))
                ])
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=False,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=True),
        test_mode=True,
        box_type_3d='LiDAR',
        eval_mode=['lane', 'det']),
    shuffler_sampler=dict(
        type='InfiniteGroupEachSampleInBatchSampler',
        seq_split_num=2,
        warmup_split_num=10,
        num_iters_to_seq=28130),
    nonshuffler_sampler=dict(type='DistributedSampler'))
evaluation = dict(
    interval=168780,
    pipeline=[
        dict(type='LoadMultiViewImageFromFiles', to_float32=True),
        dict(
            type='ResizeCropFlipRotImage',
            data_aug_conf=dict(
                resize_lim=(0.37, 0.45),
                final_dim=(320, 640),
                bot_pct_lim=(0.0, 0.0),
                rot_lim=(0.0, 0.0),
                H=900,
                W=1600,
                rand_flip=False),
            training=False),
        dict(
            type='ResizeMultiview3D',
            img_scale=(640, 640),
            keep_ratio=False,
            multiscale_mode='value'),
        dict(
            type='NormalizeMultiviewImage',
            mean=[123.675, 116.28, 103.53],
            std=[58.395, 57.12, 57.375],
            to_rgb=True),
        dict(type='PadMultiViewImage', size_divisor=32),
        dict(
            type='LoadAnnoatationVQATest',
            base_vqa_path='./data/nuscenes/vqa/val/',
            base_conv_path='./data/nuscenes/conv/val/',
            base_counter_path='./data/nuscenes/eval_cf/',
            load_type=['planning'],
            tokenizer='ckpts/pretrain_qformer/',
            max_length=2048),
        dict(
            type='MultiScaleFlipAug3D',
            img_scale=(1333, 800),
            pts_scale_ratio=1,
            flip=False,
            transforms=[
                dict(
                    type='PETRFormatBundle3D',
                    collect_keys=[
                        'lidar2img', 'intrinsics', 'extrinsics', 'timestamp',
                        'img_timestamp', 'ego_pose', 'ego_pose_inv', 'command',
                        'can_bus'
                    ],
                    class_names=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ],
                    with_label=False),
                dict(
                    type='Collect3D',
                    keys=[
                        'input_ids', 'img', 'lidar2img', 'intrinsics',
                        'extrinsics', 'timestamp', 'img_timestamp', 'ego_pose',
                        'ego_pose_inv', 'command', 'can_bus'
                    ],
                    meta_keys=('sample_idx', 'vlm_labels', 'filename',
                               'ori_shape', 'img_shape', 'pad_shape',
                               'scale_factor', 'flip', 'box_mode_3d',
                               'box_type_3d', 'img_norm_cfg', 'scene_token'))
            ])
    ])
checkpoint_config = dict(interval=14065, max_keep_ckpts=3)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
work_dir = 'work_dirs/mask_eva_lane_det_vlm/'
load_from = 'ckpts/eva02_petr_proj.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
backbone_norm_cfg = dict(type='LN', requires_grad=True)
plugin = True
plugin_dir = 'projects/mmdet3d_plugin/'
voxel_size = [0.2, 0.2, 8]
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
num_gpus = 1
batch_size = 1
num_iters_per_epoch = 28130
num_epochs = 6
llm_path = 'ckpts/pretrain_qformer/'
collect_keys = [
    'lidar2img', 'intrinsics', 'extrinsics', 'timestamp', 'img_timestamp',
    'ego_pose', 'ego_pose_inv', 'command', 'can_bus'
]
model = dict(
    type='Petr3D',
    save_path='./results_planning_only/',
    use_grid_mask=True,
    frozen=False,
    use_lora=True,
    tokenizer='ckpts/pretrain_qformer/',
    lm_head='ckpts/pretrain_qformer/',
    img_backbone=dict(
        type='EVAViT',
        img_size=640,
        patch_size=16,
        window_size=16,
        in_chans=3,
        embed_dim=1024,
        depth=24,
        num_heads=16,
        mlp_ratio=2.6666666666666665,
        window_block_indexes=[
            0, 1, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21, 22
        ],
        qkv_bias=True,
        drop_path_rate=0.3,
        flash_attn=True,
        with_cp=True,
        frozen=False),
    map_head=dict(
        type='PETRHeadM',
        num_classes=1,
        in_channels=1024,
        out_dims=4096,
        memory_len=600,
        with_mask=True,
        topk_proposals=300,
        num_lane=1800,
        num_lanes_one2one=300,
        k_one2many=5,
        lambda_one2many=1.0,
        num_extra=256,
        n_control=11,
        pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],
        code_weights=[1.0, 1.0],
        transformer=dict(
            type='PETRTemporalTransformer',
            input_dimension=256,
            output_dimension=256,
            num_layers=6,
            embed_dims=256,
            num_heads=8,
            feedforward_dims=2048,
            dropout=0.1,
            with_cp=True,
            flash_attn=True),
        train_cfg=dict(
            assigner=dict(
                type='LaneHungarianAssigner',
                cls_cost=dict(type='FocalLossCost', weight=1.5),
                reg_cost=dict(type='LaneL1Cost', weight=0.02),
                iou_cost=dict(type='IoUCost', weight=0.0))),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=1.5),
        loss_bbox=dict(type='L1Loss', loss_weight=0.02),
        loss_dir=dict(type='PtsDirCosLoss', loss_weight=0.0)),
    pts_bbox_head=dict(
        type='StreamPETRHead',
        num_classes=10,
        in_channels=1024,
        out_dims=4096,
        num_query=600,
        with_mask=True,
        memory_len=600,
        topk_proposals=300,
        num_propagated=300,
        num_extra=256,
        n_control=11,
        match_with_velo=False,
        scalar=10,
        noise_scale=1.0,
        dn_weight=1.0,
        split=0.75,
        code_weights=[2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
        transformer=dict(
            type='PETRTemporalTransformer',
            input_dimension=256,
            output_dimension=256,
            num_layers=6,
            embed_dims=256,
            num_heads=8,
            feedforward_dims=2048,
            dropout=0.1,
            with_cp=True,
            flash_attn=True),
        bbox_coder=dict(
            type='NMSFreeCoder',
            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],
            max_num=300,
            voxel_size=[0.2, 0.2, 8],
            num_classes=10),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=2.0),
        loss_bbox=dict(type='L1Loss', loss_weight=0.25),
        loss_iou=dict(type='GIoULoss', loss_weight=0.0)),
    train_cfg=dict(
        pts=dict(
            grid_size=[512, 512, 1],
            voxel_size=[0.2, 0.2, 8],
            point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],
            out_size_factor=4,
            assigner=dict(
                type='HungarianAssigner3D',
                cls_cost=dict(type='FocalLossCost', weight=2.0),
                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),
                iou_cost=dict(type='IoUCost', weight=0.0),
                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]))))
ida_aug_conf = dict(
    resize_lim=(0.37, 0.45),
    final_dim=(320, 640),
    bot_pct_lim=(0.0, 0.0),
    rot_lim=(0.0, 0.0),
    H=900,
    W=1600,
    rand_flip=False)
optimizer = dict(
    constructor='LearningRateDecayOptimizerConstructor',
    type='AdamW',
    lr=0.0001,
    betas=(0.9, 0.999),
    weight_decay=0.0001,
    paramwise_cfg=dict(
        decay_rate=0.9,
        head_decay_rate=4.0,
        lm_head_decay_rate=0.1,
        decay_type='vit_wise',
        num_layers=24))
optimizer_config = dict(
    type='Fp16OptimizerHook',
    loss_scale='dynamic',
    grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='CosineAnnealing',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.3333333333333333,
    min_lr_ratio=0.001)
find_unused_parameters = False
runner = dict(type='IterBasedRunner', max_iters=168780)
gpu_ids = range(0, 1)

2025-03-02 06:16:41,069 - mmdet - INFO - Set random seed to 0, deterministic: False
Name of parameter - Initialization information

position_range - torch.Size([6]): 
The value is the same before and after calling `init_weights` of Petr3D  

coords_d - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.code_weights - torch.Size([10]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.match_costs - torch.Size([10]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.pc_range - torch.Size([6]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.3.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.6.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.cls_branches.0.6.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.reg_branches.0.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reg_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reg_branches.0.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reg_branches.0.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reg_branches.0.4.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reg_branches.0.4.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.input_projection.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.input_projection.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.output_projection.weight - torch.Size([4096, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.output_projection.bias - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.reference_points.weight - torch.Size([600, 3]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.pseudo_reference_points.weight - torch.Size([300, 3]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.query_embedding.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.can_bus_embed.0.weight - torch.Size([1024, 74]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.can_bus_embed.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.can_bus_embed.2.weight - torch.Size([4096, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.can_bus_embed.2.bias - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in StreamPETRHead  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.query_pos.0.weight - torch.Size([256, 396]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.query_pos.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.query_pos.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.query_pos.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.time_embedding.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.time_embedding.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.time_embedding.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.time_embedding.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.reduce.0.weight - torch.Size([256, 156]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.reduce.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.gamma.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.gamma.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.beta.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

pts_bbox_head.ego_pose_pe.beta.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.pos_embed - torch.Size([1, 197, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.patch_embed.proj.weight - torch.Size([1024, 3, 16, 16]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.patch_embed.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.0.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.1.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.2.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.3.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.4.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.5.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.6.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.7.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.8.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.9.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.10.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.11.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.12.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.13.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.14.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.15.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.16.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.17.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.18.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.19.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.20.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.21.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.22.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.q_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.v_bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.q_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.k_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.v_proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w1.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w1.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w2.weight - torch.Size([2730, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w2.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.ffn_ln.weight - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.ffn_ln.bias - torch.Size([2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w3.weight - torch.Size([1024, 2730]): 
The value is the same before and after calling `init_weights` of Petr3D  

img_backbone.blocks.23.mlp.w3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.code_weights - torch.Size([2]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.match_costs - torch.Size([2]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.pc_range - torch.Size([6]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.3.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.6.weight - torch.Size([1, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.cls_branches.0.6.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.reg_branches.0.0.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.reg_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.reg_branches.0.2.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.reg_branches.0.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.reg_branches.0.4.weight - torch.Size([33, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.reg_branches.0.4.bias - torch.Size([33]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.input_projection.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.input_projection.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.output_projection.weight - torch.Size([4096, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.output_projection.bias - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.reference_points_lane.weight - torch.Size([3, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.reference_points_lane.bias - torch.Size([3]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.points_embedding_lane.weight - torch.Size([11, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.instance_embedding_lane.weight - torch.Size([1800, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.query_embedding.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.0.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.1.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.2.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.3.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.4.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in PETRHeadM  

map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

map_head.transformer.query_decoder._layers.5.transformer_layers.5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

position_encoder.0.weight - torch.Size([1024, 192]): 
The value is the same before and after calling `init_weights` of Petr3D  

position_encoder.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

position_encoder.2.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of Petr3D  

position_encoder.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.embed_tokens.weight - torch.Size([32000, 4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.0.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.0.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.1.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.1.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.2.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.2.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.3.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.3.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.4.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.4.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.5.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.5.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.6.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.6.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.7.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.7.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.8.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.8.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.9.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.9.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.10.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.10.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.11.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.11.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.12.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.12.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.13.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.13.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.14.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.14.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.15.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.15.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.16.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.16.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.17.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.17.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.18.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.18.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.19.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.19.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.20.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.20.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.21.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.21.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.22.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.22.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.23.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.23.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.24.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.24.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.25.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.25.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.26.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.26.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.27.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.27.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.28.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.28.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.29.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.29.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.30.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.30.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.self_attn.q_proj.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.self_attn.k_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.self_attn.v_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.self_attn.o_proj.base_layer.weight - torch.Size([8388608, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_A.default.weight - torch.Size([8, 4096]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_B.default.weight - torch.Size([4096, 8]): 
Initialized by user-defined `init_weights` in PeftModelForCausalLM  

lm_head.base_model.model.model.layers.31.mlp.gate_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.mlp.up_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.mlp.down_proj.weight - torch.Size([22544384, 1]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.input_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.layers.31.post_attention_layernorm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.model.norm.weight - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of Petr3D  

lm_head.base_model.model.lm_head.weight - torch.Size([32000, 4096]): 
The value is the same before and after calling `init_weights` of Petr3D  
2025-03-02 06:17:02,562 - mmdet - INFO - Model:
Petr3D(
  (pts_bbox_head): StreamPETRHead(
    (loss_cls): FocalLoss()
    (loss_bbox): L1Loss()
    (cls_branches): ModuleList(
      (0): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
      (1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
      (2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
      (3): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
      (4): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
      (5): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=10, bias=True)
      )
    )
    (reg_branches): ModuleList(
      (0): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (3): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (4): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (5): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
    )
    (input_projection): Linear(in_features=1024, out_features=256, bias=True)
    (output_projection): Linear(in_features=256, out_features=4096, bias=True)
    (reference_points): Embedding(600, 3)
    (pseudo_reference_points): Embedding(300, 3)
    (query_embedding): Embedding(256, 256)
    (can_bus_embed): Sequential(
      (0): Linear(in_features=74, out_features=1024, bias=True)
      (1): ReLU()
      (2): Linear(in_features=1024, out_features=4096, bias=True)
    )
    (loss_iou): GIoULoss()
    (transformer): PETRTemporalTransformer(
      (query_decoder): PETRTransformerDecoder(
        (_layers): ModuleList(
          (0): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (1): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (2): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (3): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (4): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (5): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
    )
    (query_pos): Sequential(
      (0): Linear(in_features=396, out_features=256, bias=True)
      (1): ReLU()
      (2): Linear(in_features=256, out_features=256, bias=True)
    )
    (time_embedding): Sequential(
      (0): Linear(in_features=256, out_features=256, bias=True)
      (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
    )
    (ego_pose_pe): MLN(
      (reduce): Sequential(
        (0): Linear(in_features=156, out_features=256, bias=True)
        (1): ReLU()
      )
      (gamma): Linear(in_features=256, out_features=256, bias=True)
      (beta): Linear(in_features=256, out_features=256, bias=True)
      (ln): LayerNorm((256,), eps=1e-05, elementwise_affine=False)
    )
  )
  (img_backbone): EVAViT(
    (patch_embed): PatchEmbed(
      (proj): Conv2d(3, 1024, kernel_size=(16, 16), stride=(16, 16))
    )
    (rope_win): VisionRotaryEmbeddingFast()
    (rope_glb): VisionRotaryEmbeddingFast()
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): Identity()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (6): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (7): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (8): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (9): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (10): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (11): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (12): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (13): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (14): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (15): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (16): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (17): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (18): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (19): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (20): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (21): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (22): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (23): Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rope): VisionRotaryEmbeddingFast()
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (inner_attn_ln): Identity()
          (inner_attn): FlashAttention()
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): SwiGLU(
          (w1): Linear(in_features=1024, out_features=2730, bias=True)
          (w2): Linear(in_features=1024, out_features=2730, bias=True)
          (act): SiLU()
          (ffn_ln): LayerNorm((2730,), eps=1e-06, elementwise_affine=True)
          (w3): Linear(in_features=2730, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (grid_mask): GridMask()
  (query_pos): Sequential(
    (0): Linear(in_features=396, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=256, bias=True)
  )
  (time_embedding): Sequential(
    (0): Linear(in_features=256, out_features=256, bias=True)
    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
  )
  (ego_pose_pe): MLN(
    (reduce): Sequential(
      (0): Linear(in_features=156, out_features=256, bias=True)
      (1): ReLU()
    )
    (gamma): Linear(in_features=256, out_features=256, bias=True)
    (beta): Linear(in_features=256, out_features=256, bias=True)
    (ln): LayerNorm((256,), eps=1e-05, elementwise_affine=False)
  )
  (map_head): PETRHeadM(
    (loss_cls): FocalLoss()
    (loss_bbox): L1Loss()
    (cls_branches): ModuleList(
      (0): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
      (1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
      (2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
      (3): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
      (4): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
      (5): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (5): ReLU(inplace=True)
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
    )
    (reg_branches): ModuleList(
      (0): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
      (1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
      (2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
      (3): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
      (4): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
      (5): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=33, bias=True)
      )
    )
    (input_projection): Linear(in_features=1024, out_features=256, bias=True)
    (output_projection): Linear(in_features=256, out_features=4096, bias=True)
    (reference_points_lane): Linear(in_features=256, out_features=3, bias=True)
    (points_embedding_lane): Embedding(11, 256)
    (instance_embedding_lane): Embedding(1800, 256)
    (query_embedding): Embedding(256, 256)
    (loss_dir): PtsDirCosLoss()
    (transformer): PETRTemporalTransformer(
      (query_decoder): PETRTransformerDecoder(
        (_layers): ModuleList(
          (0): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (1): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (2): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (3): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (4): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (5): PETRTransformerDecoderLayer(
            (transformer_layers): ModuleList(
              (0): MultiHeadAttentionwDropout(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): MultiHeadAttentionwDropout(
                (attn): FlashMHA(
                  (inner_attn): FlashAttention()
                  (out_proj): Linear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.1, inplace=False)
              )
              (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (4): FFN(
                (_layers): Sequential(
                  (0): Linear(in_features=256, out_features=2048, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=2048, out_features=256, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (5): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
    )
    (query_pos): Sequential(
      (0): Linear(in_features=396, out_features=256, bias=True)
      (1): ReLU()
      (2): Linear(in_features=256, out_features=256, bias=True)
    )
    (time_embedding): Sequential(
      (0): Linear(in_features=256, out_features=256, bias=True)
      (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
    )
    (ego_pose_pe): MLN(
      (reduce): Sequential(
        (0): Linear(in_features=156, out_features=256, bias=True)
        (1): ReLU()
      )
      (gamma): Linear(in_features=256, out_features=256, bias=True)
      (beta): Linear(in_features=256, out_features=256, bias=True)
      (ln): LayerNorm((256,), eps=1e-05, elementwise_affine=False)
    )
  )
  (position_encoder): Sequential(
    (0): Linear(in_features=192, out_features=1024, bias=True)
    (1): ReLU()
    (2): Linear(in_features=1024, out_features=256, bias=True)
  )
  (lm_head): PeftModelForCausalLM(
    (base_model): LoraModel(
      (model): LlavaLlamaForCausalLM(
        (model): LlavaLlamaModel(
          (embed_tokens): Embedding(32000, 4096, padding_idx=0)
          (layers): ModuleList(
            (0): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (1): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (2): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (3): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (4): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (5): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (6): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (7): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (8): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (9): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (10): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (11): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (12): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (13): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (14): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (15): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (16): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (17): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (18): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (19): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (20): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (21): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (22): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (23): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (24): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (25): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (26): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (27): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (28): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (29): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (30): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
            (31): LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear4bit(in_features=4096, out_features=4096, bias=False)
                (k_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (v_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (o_proj): lora.Linear4bit(
                  (base_layer): Linear4bit(in_features=4096, out_features=4096, bias=False)
                  (lora_dropout): ModuleDict(
                    (default): Dropout(p=0.05, inplace=False)
                  )
                  (lora_A): ModuleDict(
                    (default): Linear(in_features=4096, out_features=8, bias=False)
                  )
                  (lora_B): ModuleDict(
                    (default): Linear(in_features=8, out_features=4096, bias=False)
                  )
                  (lora_embedding_A): ParameterDict()
                  (lora_embedding_B): ParameterDict()
                  (lora_magnitude_vector): ModuleDict()
                )
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (up_proj): Linear4bit(in_features=4096, out_features=11008, bias=False)
                (down_proj): Linear4bit(in_features=11008, out_features=4096, bias=False)
                (act_fn): SiLUActivation()
              )
              (input_layernorm): LlamaRMSNorm()
              (post_attention_layernorm): LlamaRMSNorm()
            )
          )
          (norm): LlamaRMSNorm()
        )
        (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
      )
    )
  )
)
2025-03-02 06:17:02,605 - mmdet - INFO - Total parameters: 3,837,949,423
2025-03-02 06:17:02,605 - mmdet - INFO - Trainable parameters: 337,535,489
2025-03-02 06:17:02,605 - mmdet - INFO - pts_bbox_head: 15,805,882 parameters (0.41%)
2025-03-02 06:17:02,606 - mmdet - INFO - pts_bbox_head: 15,804,956 trainable parameters(4.68%)
2025-03-02 06:17:02,606 - mmdet - INFO -   pts_bbox_head breakdown:
2025-03-02 06:17:02,606 - mmdet - INFO -     cls_branches: 135,178 parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     cls_branches: 135,178 trainable parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     reg_branches: 134,154 parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     reg_branches: 134,154 trainable parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     input_projection: 262,400 parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     input_projection: 262,400 trainable parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     output_projection: 1,052,672 parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     output_projection: 1,052,672 trainable parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     reference_points: 1,800 parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     reference_points: 1,800 trainable parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     pseudo_reference_points: 900 parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     pseudo_reference_points: 0 trainable parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     query_embedding: 65,536 parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     query_embedding: 65,536 trainable parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     can_bus_embed: 4,275,200 parameters
2025-03-02 06:17:02,606 - mmdet - INFO -     can_bus_embed: 4,275,200 trainable parameters
2025-03-02 06:17:02,607 - mmdet - INFO -     transformer: 9,472,512 parameters
2025-03-02 06:17:02,607 - mmdet - INFO -     transformer: 9,472,512 trainable parameters
2025-03-02 06:17:02,607 - mmdet - INFO -     query_pos: 167,424 parameters
2025-03-02 06:17:02,607 - mmdet - INFO -     query_pos: 167,424 trainable parameters
2025-03-02 06:17:02,607 - mmdet - INFO -     time_embedding: 66,304 parameters
2025-03-02 06:17:02,607 - mmdet - INFO -     time_embedding: 66,304 trainable parameters
2025-03-02 06:17:02,607 - mmdet - INFO -     ego_pose_pe: 171,776 parameters
2025-03-02 06:17:02,607 - mmdet - INFO -     ego_pose_pe: 171,776 trainable parameters
2025-03-02 06:17:02,608 - mmdet - INFO - img_backbone: 303,388,608 parameters (7.90%)
2025-03-02 06:17:02,609 - mmdet - INFO - img_backbone: 303,388,608 trainable parameters(89.88%)
2025-03-02 06:17:02,609 - mmdet - INFO -   img_backbone breakdown:
2025-03-02 06:17:02,609 - mmdet - INFO -     patch_embed: 787,456 parameters
2025-03-02 06:17:02,609 - mmdet - INFO -     patch_embed: 787,456 trainable parameters
2025-03-02 06:17:02,609 - mmdet - INFO -     blocks: 302,399,424 parameters
2025-03-02 06:17:02,610 - mmdet - INFO -     blocks: 302,399,424 trainable parameters
2025-03-02 06:17:02,610 - mmdet - INFO - grid_mask: 0 parameters (0.00%)
2025-03-02 06:17:02,610 - mmdet - INFO - grid_mask: 0 trainable parameters(0.00%)
2025-03-02 06:17:02,610 - mmdet - INFO - query_pos: 167,424 parameters (0.00%)
2025-03-02 06:17:02,610 - mmdet - INFO - query_pos: 167,424 trainable parameters(0.05%)
2025-03-02 06:17:02,610 - mmdet - INFO - time_embedding: 66,304 parameters (0.00%)
2025-03-02 06:17:02,610 - mmdet - INFO - time_embedding: 66,304 trainable parameters(0.02%)
2025-03-02 06:17:02,610 - mmdet - INFO - ego_pose_pe: 171,776 parameters (0.00%)
2025-03-02 06:17:02,610 - mmdet - INFO - ego_pose_pe: 171,776 trainable parameters(0.05%)
2025-03-02 06:17:02,611 - mmdet - INFO - map_head: 11,995,951 parameters (0.31%)
2025-03-02 06:17:02,611 - mmdet - INFO - map_head: 11,995,941 trainable parameters(3.55%)
2025-03-02 06:17:02,611 - mmdet - INFO -   map_head breakdown:
2025-03-02 06:17:02,611 - mmdet - INFO -     cls_branches: 132,865 parameters
2025-03-02 06:17:02,611 - mmdet - INFO -     cls_branches: 132,865 trainable parameters
2025-03-02 06:17:02,611 - mmdet - INFO -     reg_branches: 140,065 parameters
2025-03-02 06:17:02,611 - mmdet - INFO -     reg_branches: 140,065 trainable parameters
2025-03-02 06:17:02,611 - mmdet - INFO -     input_projection: 262,400 parameters
2025-03-02 06:17:02,611 - mmdet - INFO -     input_projection: 262,400 trainable parameters
2025-03-02 06:17:02,611 - mmdet - INFO -     output_projection: 1,052,672 parameters
2025-03-02 06:17:02,611 - mmdet - INFO -     output_projection: 1,052,672 trainable parameters
2025-03-02 06:17:02,611 - mmdet - INFO -     reference_points_lane: 771 parameters
2025-03-02 06:17:02,611 - mmdet - INFO -     reference_points_lane: 771 trainable parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     points_embedding_lane: 2,816 parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     points_embedding_lane: 2,816 trainable parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     instance_embedding_lane: 460,800 parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     instance_embedding_lane: 460,800 trainable parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     query_embedding: 65,536 parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     query_embedding: 65,536 trainable parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     transformer: 9,472,512 parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     transformer: 9,472,512 trainable parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     query_pos: 167,424 parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     query_pos: 167,424 trainable parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     time_embedding: 66,304 parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     time_embedding: 66,304 trainable parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     ego_pose_pe: 171,776 parameters
2025-03-02 06:17:02,612 - mmdet - INFO -     ego_pose_pe: 171,776 trainable parameters
2025-03-02 06:17:02,612 - mmdet - INFO - position_encoder: 460,032 parameters (0.01%)
2025-03-02 06:17:02,612 - mmdet - INFO - position_encoder: 460,032 trainable parameters(0.14%)
2025-03-02 06:17:02,614 - mmdet - INFO - lm_head: 3,506,704,384 parameters (91.37%)
2025-03-02 06:17:02,617 - mmdet - INFO - lm_head: 6,291,456 trainable parameters(1.86%)
2025-03-02 06:17:02,617 - mmdet - INFO -   lm_head breakdown:
2025-03-02 06:17:02,619 - mmdet - INFO -     base_model: 3,506,704,384 parameters
2025-03-02 06:17:02,621 - mmdet - INFO -     base_model: 6,291,456 trainable parameters
2025-03-02 06:17:21,591 - mmdet - INFO - position_range: torch.float32, False, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - coords_d: torch.float32, False, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.code_weights: torch.float32, False, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.match_costs: torch.float32, False, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.pc_range: torch.float32, False, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.cls_branches.0.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.cls_branches.0.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.cls_branches.0.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.cls_branches.0.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.cls_branches.0.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.cls_branches.0.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.cls_branches.0.4.weight: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.cls_branches.0.4.bias: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.cls_branches.0.6.weight: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.cls_branches.0.6.bias: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.reg_branches.0.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.reg_branches.0.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.reg_branches.0.2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.reg_branches.0.2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.reg_branches.0.4.weight: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.reg_branches.0.4.bias: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.input_projection.weight: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.input_projection.bias: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.output_projection.weight: torch.float32, True, cpu
2025-03-02 06:17:21,592 - mmdet - INFO - pts_bbox_head.output_projection.bias: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.reference_points.weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.pseudo_reference_points.weight: torch.float32, False, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.query_embedding.weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.can_bus_embed.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.can_bus_embed.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.can_bus_embed.2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.can_bus_embed.2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,593 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.0.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.1.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,594 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.2.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,595 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.3.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.4.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,596 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.transformer.query_decoder._layers.5.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.query_pos.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.query_pos.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.query_pos.2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.query_pos.2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.time_embedding.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.time_embedding.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.time_embedding.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.time_embedding.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.ego_pose_pe.reduce.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.ego_pose_pe.reduce.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.ego_pose_pe.gamma.weight: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.ego_pose_pe.gamma.bias: torch.float32, True, cpu
2025-03-02 06:17:21,597 - mmdet - INFO - pts_bbox_head.ego_pose_pe.beta.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - pts_bbox_head.ego_pose_pe.beta.bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.pos_embed: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.patch_embed.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.patch_embed.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.0.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.1.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.1.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,598 - mmdet - INFO - img_backbone.blocks.1.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.1.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.2.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.2.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.2.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.2.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.2.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.2.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.2.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.2.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.2.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,599 - mmdet - INFO - img_backbone.blocks.2.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.2.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.2.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.2.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.2.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.2.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.2.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.2.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.2.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.2.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,600 - mmdet - INFO - img_backbone.blocks.3.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.3.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.4.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.5.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.5.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.5.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.5.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.5.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.5.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,601 - mmdet - INFO - img_backbone.blocks.5.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.5.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,602 - mmdet - INFO - img_backbone.blocks.6.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.6.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.6.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.6.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.6.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.6.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,603 - mmdet - INFO - img_backbone.blocks.7.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.7.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.7.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.7.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.8.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.9.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.9.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.9.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,604 - mmdet - INFO - img_backbone.blocks.9.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.9.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.10.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.10.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.10.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.10.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.10.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.10.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,605 - mmdet - INFO - img_backbone.blocks.10.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.10.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,606 - mmdet - INFO - img_backbone.blocks.11.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.11.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.11.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.11.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.11.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.11.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.11.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.11.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.12.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.13.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,607 - mmdet - INFO - img_backbone.blocks.13.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.13.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.14.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.14.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.14.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.14.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.14.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.14.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.14.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,608 - mmdet - INFO - img_backbone.blocks.14.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.14.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.14.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.14.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.14.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.14.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.14.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.14.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.14.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.14.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.14.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.14.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,609 - mmdet - INFO - img_backbone.blocks.15.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.15.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.15.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.15.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.15.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.16.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.17.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.17.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.17.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.17.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,610 - mmdet - INFO - img_backbone.blocks.17.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.17.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,611 - mmdet - INFO - img_backbone.blocks.18.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.18.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.18.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.18.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.18.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.18.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.18.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.18.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,612 - mmdet - INFO - img_backbone.blocks.19.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.19.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.20.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.21.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.21.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.21.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.21.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.21.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,613 - mmdet - INFO - img_backbone.blocks.21.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.21.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,614 - mmdet - INFO - img_backbone.blocks.22.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.22.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.22.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.22.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.22.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.22.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.22.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.norm1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.norm1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.attn.q_bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.attn.v_bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.attn.q_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.attn.k_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.attn.v_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.attn.proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.attn.proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.norm2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.norm2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.mlp.w1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.mlp.w1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.mlp.w2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.mlp.w2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.mlp.ffn_ln.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.mlp.ffn_ln.bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.mlp.w3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - img_backbone.blocks.23.mlp.w3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,615 - mmdet - INFO - map_head.code_weights: torch.float32, False, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.match_costs: torch.float32, False, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.pc_range: torch.float32, False, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.cls_branches.0.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.cls_branches.0.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.cls_branches.0.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.cls_branches.0.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.cls_branches.0.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.cls_branches.0.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.cls_branches.0.4.weight: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.cls_branches.0.4.bias: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.cls_branches.0.6.weight: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.cls_branches.0.6.bias: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.reg_branches.0.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.reg_branches.0.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.reg_branches.0.2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.reg_branches.0.2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.reg_branches.0.4.weight: torch.float32, True, cpu
2025-03-02 06:17:21,616 - mmdet - INFO - map_head.reg_branches.0.4.bias: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.input_projection.weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.input_projection.bias: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.output_projection.weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.output_projection.bias: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.reference_points_lane.weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.reference_points_lane.bias: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.points_embedding_lane.weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.instance_embedding_lane.weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.query_embedding.weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,617 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.0.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.1.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,618 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.2.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,619 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.3.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,620 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.4.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.0.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.1.weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.1.bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.in_proj_bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.2.attn.out_proj.bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.4._layers.3.bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.5.weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - map_head.transformer.query_decoder._layers.5.transformer_layers.5.bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - position_encoder.0.weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - position_encoder.0.bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - position_encoder.2.weight: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - position_encoder.2.bias: torch.float32, True, cpu
2025-03-02 06:17:21,621 - mmdet - INFO - lm_head.base_model.model.model.embed_tokens.weight: torch.float32, False, cuda:0
2025-03-02 06:17:21,621 - mmdet - INFO - tensor([[ 1.2517e-06, -1.7881e-06, -4.3511e-06,  ...,  8.9407e-07,
         -6.5565e-06,  8.9407e-07],
        [ 1.3672e-02,  2.6398e-03, -4.4250e-03,  ..., -2.1362e-03,
          7.2937e-03,  1.0071e-02],
        [ 1.2512e-02,  6.2866e-03, -4.7607e-03,  ...,  6.0425e-03,
         -1.7471e-03, -9.0408e-04],
        ...,
        [-1.6235e-02, -2.0447e-03, -1.9287e-02,  ..., -9.9487e-03,
          9.5825e-03, -1.9073e-04],
        [-1.0864e-02,  8.9111e-03,  1.3794e-02,  ..., -3.3203e-02,
         -1.6357e-02,  3.1738e-03],
        [-8.4229e-03, -4.5166e-03, -1.5945e-03,  ...,  3.2349e-03,
         -1.2146e-02,  3.8528e-04]], device='cuda:0')
2025-03-02 06:17:21,632 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,632 - mmdet - INFO - tensor([[ 83],
        [103],
        [ 74],
        ...,
        [114],
        [108],
        [197]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,635 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,635 - mmdet - INFO - tensor([[ 73],
        [120],
        [120],
        ...,
        [101],
        [104],
        [104]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,640 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,640 - mmdet - INFO - tensor([[-0.0185, -0.0085, -0.0529,  ...,  0.0321, -0.0214,  0.0320],
        [ 0.0458,  0.0030,  0.0413,  ..., -0.0087, -0.0161, -0.0019],
        [-0.0175,  0.0153,  0.0309,  ...,  0.0047, -0.0138,  0.0217],
        ...,
        [ 0.0148,  0.0429, -0.0150,  ...,  0.0194, -0.0169, -0.0223],
        [-0.0141, -0.0177, -0.0075,  ...,  0.0019,  0.0267, -0.0254],
        [ 0.0288, -0.0140,  0.0236,  ..., -0.0109, -0.0394,  0.0158]],
       device='cuda:0')
2025-03-02 06:17:21,648 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,648 - mmdet - INFO - tensor([[ 0.0036, -0.0110,  0.0185,  ...,  0.0174,  0.0026, -0.0188],
        [ 0.0162,  0.0176, -0.0203,  ...,  0.0084, -0.0138, -0.0027],
        [-0.0062,  0.0358, -0.0170,  ..., -0.0105,  0.0040, -0.0027],
        ...,
        [ 0.0439, -0.0258,  0.0256,  ..., -0.0067,  0.0348, -0.0009],
        [ 0.0234,  0.0043, -0.0200,  ..., -0.0082,  0.0272,  0.0288],
        [ 0.0093, -0.0235,  0.0107,  ...,  0.0188,  0.0021,  0.0160]],
       device='cuda:0')
2025-03-02 06:17:21,654 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,654 - mmdet - INFO - tensor([[134],
        [152],
        [152],
        ...,
        [221],
        [ 22],
        [120]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,657 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,657 - mmdet - INFO - tensor([[ 0.0509, -0.0143, -0.0099,  ..., -0.0325, -0.0082, -0.0013],
        [-0.0399, -0.0052, -0.0361,  ...,  0.0215, -0.0163,  0.0095],
        [-0.0191, -0.0106, -0.0123,  ...,  0.0024,  0.0068,  0.0061],
        ...,
        [-0.0295, -0.0060, -0.0097,  ..., -0.0030,  0.0110,  0.0102],
        [ 0.0489,  0.0132,  0.0322,  ..., -0.0055,  0.0227,  0.0248],
        [-0.0178, -0.0414, -0.0185,  ..., -0.0057,  0.0561,  0.0115]],
       device='cuda:0')
2025-03-02 06:17:21,663 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,663 - mmdet - INFO - tensor([[ 0.0070, -0.0283, -0.0167,  ...,  0.0145, -0.0089,  0.0082],
        [-0.0026, -0.0050, -0.0235,  ...,  0.0160, -0.0161,  0.0106],
        [ 0.0180,  0.0247, -0.0119,  ...,  0.0064,  0.0189, -0.0047],
        ...,
        [-0.0021,  0.0110, -0.0119,  ...,  0.0033, -0.0192, -0.0078],
        [-0.0249,  0.0343, -0.0035,  ..., -0.0222, -0.0075,  0.0181],
        [-0.0278, -0.0174, -0.0089,  ..., -0.0140, -0.0047,  0.0381]],
       device='cuda:0')
2025-03-02 06:17:21,675 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,675 - mmdet - INFO - tensor([[102],
        [195],
        [ 55],
        ...,
        [158],
        [204],
        [ 34]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,678 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,678 - mmdet - INFO - tensor([[-0.0069,  0.0125,  0.0114,  ...,  0.0183, -0.0262, -0.0159],
        [ 0.0077,  0.0030, -0.0154,  ...,  0.0460, -0.0084,  0.0181],
        [ 0.0209,  0.0151, -0.0150,  ...,  0.0096,  0.0254, -0.0033],
        ...,
        [-0.0049, -0.0237,  0.0085,  ...,  0.0124,  0.0238,  0.0073],
        [ 0.0372,  0.0178,  0.0084,  ...,  0.0084, -0.0160, -0.0418],
        [ 0.0181, -0.0330,  0.0003,  ...,  0.0081, -0.0288,  0.0127]],
       device='cuda:0')
2025-03-02 06:17:21,692 - mmdet - INFO - lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,692 - mmdet - INFO - tensor([[ 0.0044,  0.0107,  0.0083,  ...,  0.0170, -0.0056, -0.0225],
        [-0.0321,  0.0056, -0.0284,  ...,  0.0263,  0.0031,  0.0134],
        [ 0.0134, -0.0405,  0.0096,  ..., -0.0116,  0.0073,  0.0227],
        ...,
        [ 0.0094, -0.0118,  0.0050,  ..., -0.0049,  0.0135, -0.0142],
        [ 0.0021,  0.0214,  0.0383,  ...,  0.0012,  0.0283, -0.0160],
        [-0.0107, -0.0067,  0.0084,  ..., -0.0341, -0.0084, -0.0057]],
       device='cuda:0')
2025-03-02 06:17:21,699 - mmdet - INFO - lm_head.base_model.model.model.layers.0.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,699 - mmdet - INFO - tensor([[204],
        [228],
        [226],
        ...,
        [ 26],
        [ 24],
        [146]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,703 - mmdet - INFO - lm_head.base_model.model.model.layers.0.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,703 - mmdet - INFO - tensor([[ 97],
        [180],
        [ 20],
        ...,
        [ 57],
        [139],
        [ 64]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,707 - mmdet - INFO - lm_head.base_model.model.model.layers.0.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,707 - mmdet - INFO - tensor([[132],
        [164],
        [203],
        ...,
        [ 73],
        [103],
        [ 98]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,709 - mmdet - INFO - lm_head.base_model.model.model.layers.0.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:21,709 - mmdet - INFO - tensor([0.0280, 0.0105, 0.0025,  ..., 0.0103, 0.0109, 0.0067], device='cuda:0')
2025-03-02 06:17:21,712 - mmdet - INFO - lm_head.base_model.model.model.layers.0.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:21,712 - mmdet - INFO - tensor([0.0527, 0.0525, 0.0508,  ..., 0.0520, 0.0549, 0.0483], device='cuda:0')
2025-03-02 06:17:21,718 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,718 - mmdet - INFO - tensor([[ 88],
        [ 56],
        [155],
        ...,
        [ 72],
        [147],
        [ 98]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,722 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,722 - mmdet - INFO - tensor([[ 39],
        [228],
        [ 70],
        ...,
        [211],
        [ 40],
        [108]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,725 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,725 - mmdet - INFO - tensor([[-0.0154,  0.0315, -0.0140,  ...,  0.0006,  0.0183,  0.0338],
        [ 0.0009, -0.0046,  0.0081,  ..., -0.0110, -0.0250,  0.0364],
        [ 0.0076, -0.0054,  0.0015,  ..., -0.0129, -0.0161, -0.0038],
        ...,
        [-0.0213,  0.0370,  0.0185,  ..., -0.0098,  0.0284, -0.0035],
        [ 0.0096,  0.0075, -0.0016,  ..., -0.0025,  0.0261,  0.0274],
        [ 0.0102, -0.0069,  0.0170,  ..., -0.0242,  0.0039,  0.0044]],
       device='cuda:0')
2025-03-02 06:17:21,742 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,742 - mmdet - INFO - tensor([[ 0.0048,  0.0111, -0.0167,  ..., -0.0056,  0.0071, -0.0349],
        [ 0.0055,  0.0020, -0.0004,  ..., -0.0470,  0.0041,  0.0072],
        [ 0.0228,  0.0063, -0.0295,  ...,  0.0080,  0.0004,  0.0434],
        ...,
        [ 0.0097,  0.0109, -0.0029,  ...,  0.0407, -0.0090, -0.0227],
        [ 0.0020, -0.0066,  0.0131,  ...,  0.0120,  0.0110, -0.0060],
        [ 0.0399, -0.0024,  0.0242,  ..., -0.0232, -0.0226,  0.0074]],
       device='cuda:0')
2025-03-02 06:17:21,749 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,749 - mmdet - INFO - tensor([[150],
        [120],
        [154],
        ...,
        [227],
        [ 89],
        [ 45]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,753 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,753 - mmdet - INFO - tensor([[-0.0239,  0.0042, -0.0135,  ...,  0.0189, -0.0183, -0.0003],
        [ 0.0108,  0.0314,  0.0011,  ..., -0.0272, -0.0118,  0.0296],
        [-0.0272,  0.0183, -0.0114,  ..., -0.0169, -0.0282,  0.0118],
        ...,
        [-0.0127, -0.0180, -0.0042,  ...,  0.0354, -0.0068,  0.0041],
        [-0.0090, -0.0057,  0.0071,  ...,  0.0045, -0.0139, -0.0287],
        [-0.0224, -0.0198,  0.0016,  ..., -0.0131, -0.0064,  0.0079]],
       device='cuda:0')
2025-03-02 06:17:21,762 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,762 - mmdet - INFO - tensor([[ 0.0179, -0.0094, -0.0085,  ..., -0.0273,  0.0311,  0.0088],
        [-0.0007, -0.0012,  0.0307,  ...,  0.0118, -0.0077, -0.0440],
        [ 0.0018, -0.0051, -0.0375,  ...,  0.0003, -0.0190,  0.0113],
        ...,
        [ 0.0170, -0.0137,  0.0068,  ...,  0.0360,  0.0059,  0.0082],
        [ 0.0094, -0.0115, -0.0287,  ..., -0.0070,  0.0033,  0.0261],
        [-0.0042, -0.0035, -0.0128,  ..., -0.0066, -0.0365,  0.0112]],
       device='cuda:0')
2025-03-02 06:17:21,775 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,775 - mmdet - INFO - tensor([[145],
        [230],
        [197],
        ...,
        [ 88],
        [232],
        [ 25]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,778 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,778 - mmdet - INFO - tensor([[-0.0108,  0.0100, -0.0050,  ...,  0.0289,  0.0034,  0.0350],
        [ 0.0250, -0.0094, -0.0117,  ..., -0.0039, -0.0088, -0.0045],
        [-0.0014,  0.0401,  0.0158,  ...,  0.0143,  0.0564, -0.0294],
        ...,
        [ 0.0101, -0.0387,  0.0482,  ...,  0.0147, -0.0237,  0.0265],
        [-0.0055, -0.0028,  0.0166,  ...,  0.0036,  0.0005, -0.0042],
        [-0.0089, -0.0289,  0.0196,  ...,  0.0095,  0.0238, -0.0018]],
       device='cuda:0')
2025-03-02 06:17:21,792 - mmdet - INFO - lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,792 - mmdet - INFO - tensor([[ 4.5397e-03, -3.6783e-02,  1.7797e-02,  ...,  9.3453e-03,
          8.0781e-04,  3.9692e-02],
        [ 1.0944e-03,  9.7649e-05,  8.9477e-03,  ..., -1.9425e-02,
         -1.0506e-02, -2.1023e-02],
        [-9.6269e-03,  1.1667e-02,  3.9418e-03,  ..., -4.2783e-02,
          8.2453e-03, -2.3779e-02],
        ...,
        [ 3.9925e-02,  3.4897e-02, -1.0499e-02,  ...,  3.3980e-02,
          1.1495e-02, -1.5492e-02],
        [-8.9784e-04, -2.2153e-02, -2.7582e-02,  ...,  9.3634e-03,
          1.6200e-02, -2.4355e-03],
        [ 4.4659e-03,  2.1236e-02,  5.2920e-03,  ...,  1.4231e-02,
          1.5984e-02,  2.3152e-02]], device='cuda:0')
2025-03-02 06:17:21,808 - mmdet - INFO - lm_head.base_model.model.model.layers.1.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,808 - mmdet - INFO - tensor([[213],
        [247],
        [163],
        ...,
        [152],
        [ 94],
        [161]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,813 - mmdet - INFO - lm_head.base_model.model.model.layers.1.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,813 - mmdet - INFO - tensor([[127],
        [ 61],
        [150],
        ...,
        [106],
        [ 19],
        [108]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,815 - mmdet - INFO - lm_head.base_model.model.model.layers.1.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,815 - mmdet - INFO - tensor([[153],
        [248],
        [186],
        ...,
        [ 69],
        [131],
        [ 62]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,818 - mmdet - INFO - lm_head.base_model.model.model.layers.1.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:21,818 - mmdet - INFO - tensor([0.1128, 0.1094, 0.1016,  ..., 0.0635, 0.0933, 0.0757], device='cuda:0')
2025-03-02 06:17:21,827 - mmdet - INFO - lm_head.base_model.model.model.layers.1.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:21,827 - mmdet - INFO - tensor([0.0981, 0.1040, 0.0981,  ..., 0.1069, 0.1016, 0.1025], device='cuda:0')
2025-03-02 06:17:21,830 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,830 - mmdet - INFO - tensor([[  4],
        [172],
        [226],
        ...,
        [199],
        [ 62],
        [ 39]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,832 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,832 - mmdet - INFO - tensor([[108],
        [ 77],
        [107],
        ...,
        [125],
        [192],
        [ 79]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,835 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,835 - mmdet - INFO - tensor([[ 0.0187, -0.0179,  0.0082,  ..., -0.0087,  0.0159,  0.0054],
        [ 0.0103, -0.0012,  0.0064,  ...,  0.0004, -0.0281, -0.0337],
        [ 0.0470,  0.0400,  0.0011,  ...,  0.0372,  0.0081, -0.0016],
        ...,
        [ 0.0088,  0.0163,  0.0248,  ...,  0.0327,  0.0165,  0.0214],
        [-0.0383,  0.0086, -0.0063,  ..., -0.0013, -0.0057,  0.0096],
        [-0.0162, -0.0201, -0.0005,  ..., -0.0137, -0.0186, -0.0184]],
       device='cuda:0')
2025-03-02 06:17:21,846 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,846 - mmdet - INFO - tensor([[-0.0152, -0.0171, -0.0047,  ..., -0.0021, -0.0095, -0.0300],
        [ 0.0088, -0.0594,  0.0088,  ...,  0.0405, -0.0321,  0.0216],
        [ 0.0059, -0.0197, -0.0028,  ..., -0.0164,  0.0090, -0.0070],
        ...,
        [ 0.0174,  0.0025,  0.0030,  ..., -0.0041,  0.0114, -0.0042],
        [-0.0247, -0.0318,  0.0206,  ..., -0.0033, -0.0030,  0.0327],
        [ 0.0040,  0.0313, -0.0181,  ..., -0.0248,  0.0078, -0.0450]],
       device='cuda:0')
2025-03-02 06:17:21,867 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,868 - mmdet - INFO - tensor([[ 88],
        [230],
        [133],
        ...,
        [153],
        [165],
        [181]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,874 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,874 - mmdet - INFO - tensor([[ 0.0116, -0.0025,  0.0071,  ..., -0.0101, -0.0288,  0.0091],
        [ 0.0133, -0.0229,  0.0049,  ...,  0.0298,  0.0099,  0.0185],
        [-0.0339,  0.0046,  0.0145,  ..., -0.0122,  0.0128, -0.0122],
        ...,
        [ 0.0027, -0.0381, -0.0026,  ..., -0.0073, -0.0005,  0.0168],
        [-0.0137, -0.0364,  0.0187,  ...,  0.0363, -0.0181,  0.0314],
        [ 0.0100, -0.0027, -0.0216,  ..., -0.0165,  0.0109,  0.0083]],
       device='cuda:0')
2025-03-02 06:17:21,893 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,893 - mmdet - INFO - tensor([[-0.0123,  0.0167,  0.0152,  ...,  0.0255, -0.0292, -0.0173],
        [ 0.0080,  0.0005, -0.0315,  ...,  0.0080, -0.0520, -0.0007],
        [-0.0165,  0.0303, -0.0140,  ...,  0.0287,  0.0055, -0.0038],
        ...,
        [-0.0005,  0.0099, -0.0016,  ...,  0.0029, -0.0358, -0.0287],
        [ 0.0402, -0.0185, -0.0171,  ...,  0.0114,  0.0081, -0.0205],
        [-0.0165, -0.0100, -0.0244,  ...,  0.0188, -0.0085,  0.0315]],
       device='cuda:0')
2025-03-02 06:17:21,906 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,906 - mmdet - INFO - tensor([[107],
        [155],
        [ 38],
        ...,
        [120],
        [101],
        [179]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,910 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,910 - mmdet - INFO - tensor([[ 1.1779e-02,  1.7928e-02, -4.2718e-03,  ..., -6.3970e-03,
         -8.1732e-03, -1.4291e-02],
        [-1.7889e-03, -1.2127e-02, -1.5900e-02,  ...,  1.8189e-02,
          1.8216e-02, -1.3808e-02],
        [ 3.7494e-03, -8.7487e-05, -3.9547e-02,  ...,  1.9653e-02,
          4.1841e-03, -3.2479e-03],
        ...,
        [-1.6894e-02,  4.2190e-05,  1.4973e-02,  ..., -1.1392e-02,
          6.5249e-03, -1.5923e-02],
        [ 4.9135e-03, -6.7687e-03,  1.0261e-03,  ...,  7.1006e-03,
          4.1240e-02, -2.0562e-02],
        [-3.4824e-02,  6.0830e-03,  1.1698e-03,  ..., -2.2611e-02,
         -3.2719e-02, -1.2532e-02]], device='cuda:0')
2025-03-02 06:17:21,925 - mmdet - INFO - lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,925 - mmdet - INFO - tensor([[ 0.0158,  0.0174, -0.0002,  ...,  0.0253, -0.0063,  0.0176],
        [ 0.0120,  0.0120, -0.0344,  ..., -0.0084, -0.0171, -0.0114],
        [ 0.0183, -0.0117,  0.0096,  ...,  0.0070,  0.0066, -0.0220],
        ...,
        [ 0.0280, -0.0102,  0.0190,  ...,  0.0036,  0.0145, -0.0148],
        [ 0.0055,  0.0154, -0.0019,  ...,  0.0035,  0.0417,  0.0152],
        [ 0.0069, -0.0126,  0.0296,  ...,  0.0004,  0.0454,  0.0016]],
       device='cuda:0')
2025-03-02 06:17:21,941 - mmdet - INFO - lm_head.base_model.model.model.layers.2.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,941 - mmdet - INFO - tensor([[139],
        [ 88],
        [105],
        ...,
        [123],
        [244],
        [ 25]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,944 - mmdet - INFO - lm_head.base_model.model.model.layers.2.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,944 - mmdet - INFO - tensor([[119],
        [154],
        [139],
        ...,
        [168],
        [ 85],
        [133]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,946 - mmdet - INFO - lm_head.base_model.model.model.layers.2.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,946 - mmdet - INFO - tensor([[154],
        [213],
        [108],
        ...,
        [208],
        [125],
        [  5]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,949 - mmdet - INFO - lm_head.base_model.model.model.layers.2.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:21,949 - mmdet - INFO - tensor([0.1729, 0.1768, 0.1729,  ..., 0.1777, 0.1699, 0.1758], device='cuda:0')
2025-03-02 06:17:21,958 - mmdet - INFO - lm_head.base_model.model.model.layers.2.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:21,958 - mmdet - INFO - tensor([0.1348, 0.1377, 0.1367,  ..., 0.1357, 0.1416, 0.1377], device='cuda:0')
2025-03-02 06:17:21,962 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,962 - mmdet - INFO - tensor([[172],
        [116],
        [229],
        ...,
        [ 89],
        [197],
        [102]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,964 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,964 - mmdet - INFO - tensor([[149],
        [ 81],
        [189],
        ...,
        [ 89],
        [134],
        [134]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,968 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,968 - mmdet - INFO - tensor([[-0.0013, -0.0053,  0.0166,  ...,  0.0196,  0.0044, -0.0017],
        [-0.0231,  0.0376,  0.0266,  ..., -0.0116,  0.0004,  0.0214],
        [ 0.0289,  0.0360,  0.0012,  ...,  0.0068,  0.0337,  0.0119],
        ...,
        [-0.0172, -0.0001,  0.0055,  ..., -0.0058,  0.0019, -0.0011],
        [-0.0364,  0.0082, -0.0031,  ...,  0.0121,  0.0114, -0.0183],
        [ 0.0193,  0.0106,  0.0267,  ..., -0.0034, -0.0060,  0.0065]],
       device='cuda:0')
2025-03-02 06:17:21,980 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,980 - mmdet - INFO - tensor([[ 0.0190,  0.0269, -0.0035,  ...,  0.0066,  0.0056,  0.0095],
        [-0.0139, -0.0127,  0.0003,  ...,  0.0134, -0.0065,  0.0143],
        [-0.0070,  0.0132, -0.0058,  ..., -0.0158, -0.0043, -0.0044],
        ...,
        [ 0.0187, -0.0163, -0.0206,  ..., -0.0088, -0.0167, -0.0204],
        [ 0.0079, -0.0088, -0.0147,  ...,  0.0030, -0.0103,  0.0022],
        [ 0.0136, -0.0198,  0.0363,  ...,  0.0282, -0.0120,  0.0216]],
       device='cuda:0')
2025-03-02 06:17:21,994 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:21,994 - mmdet - INFO - tensor([[123],
        [ 87],
        [ 92],
        ...,
        [105],
        [ 88],
        [127]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:21,996 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:21,997 - mmdet - INFO - tensor([[-0.0228,  0.0022,  0.0037,  ...,  0.0107, -0.0213, -0.0310],
        [-0.0346, -0.0134,  0.0146,  ..., -0.0022, -0.0080,  0.0103],
        [ 0.0244, -0.0099, -0.0230,  ...,  0.0056, -0.0257,  0.0137],
        ...,
        [ 0.0232,  0.0248,  0.0302,  ..., -0.0251, -0.0212,  0.0118],
        [-0.0002, -0.0330,  0.0340,  ..., -0.0357,  0.0054,  0.0005],
        [ 0.0230, -0.0310, -0.0067,  ...,  0.0106, -0.0088,  0.0275]],
       device='cuda:0')
2025-03-02 06:17:22,011 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,011 - mmdet - INFO - tensor([[ 0.0166,  0.0166, -0.0107,  ...,  0.0069, -0.0161, -0.0315],
        [-0.0013, -0.0040,  0.0019,  ..., -0.0276, -0.0065,  0.0083],
        [ 0.0362, -0.0188,  0.0063,  ..., -0.0230,  0.0108, -0.0196],
        ...,
        [-0.0233, -0.0297, -0.0192,  ...,  0.0204,  0.0378, -0.0030],
        [-0.0250, -0.0295,  0.0111,  ..., -0.0128, -0.0393, -0.0014],
        [ 0.0259,  0.0013,  0.0097,  ...,  0.0067, -0.0193, -0.0150]],
       device='cuda:0')
2025-03-02 06:17:22,025 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,025 - mmdet - INFO - tensor([[ 26],
        [ 54],
        [ 85],
        ...,
        [131],
        [202],
        [155]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,028 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,028 - mmdet - INFO - tensor([[-0.0147, -0.0360,  0.0061,  ..., -0.0038,  0.0312,  0.0090],
        [-0.0083,  0.0144, -0.0371,  ...,  0.0216,  0.0055, -0.0189],
        [-0.0122,  0.0164,  0.0278,  ..., -0.0123, -0.0038, -0.0167],
        ...,
        [ 0.0101, -0.0045,  0.0052,  ...,  0.0165,  0.0021, -0.0201],
        [ 0.0010, -0.0056,  0.0050,  ...,  0.0346,  0.0159, -0.0110],
        [-0.0001, -0.0061, -0.0131,  ..., -0.0150,  0.0113, -0.0060]],
       device='cuda:0')
2025-03-02 06:17:22,042 - mmdet - INFO - lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,042 - mmdet - INFO - tensor([[-0.0149,  0.0088, -0.0138,  ..., -0.0224, -0.0147, -0.0157],
        [ 0.0267,  0.0236,  0.0045,  ..., -0.0021,  0.0066, -0.0021],
        [-0.0166, -0.0135, -0.0105,  ...,  0.0088,  0.0190,  0.0007],
        ...,
        [ 0.0299, -0.0169, -0.0301,  ...,  0.0244,  0.0175,  0.0194],
        [ 0.0195, -0.0275,  0.0002,  ...,  0.0054,  0.0118, -0.0133],
        [-0.0035,  0.0132, -0.0420,  ..., -0.0302,  0.0070,  0.0093]],
       device='cuda:0')
2025-03-02 06:17:22,052 - mmdet - INFO - lm_head.base_model.model.model.layers.3.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,052 - mmdet - INFO - tensor([[101],
        [ 68],
        [139],
        ...,
        [222],
        [172],
        [ 42]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,054 - mmdet - INFO - lm_head.base_model.model.model.layers.3.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,054 - mmdet - INFO - tensor([[ 75],
        [158],
        [108],
        ...,
        [ 59],
        [142],
        [152]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,057 - mmdet - INFO - lm_head.base_model.model.model.layers.3.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,057 - mmdet - INFO - tensor([[118],
        [149],
        [ 43],
        ...,
        [ 87],
        [166],
        [153]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,059 - mmdet - INFO - lm_head.base_model.model.model.layers.3.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,059 - mmdet - INFO - tensor([0.2832, 0.2812, 0.2832,  ..., 0.2793, 0.2891, 0.2910], device='cuda:0')
2025-03-02 06:17:22,062 - mmdet - INFO - lm_head.base_model.model.model.layers.3.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,062 - mmdet - INFO - tensor([0.1768, 0.1758, 0.1719,  ..., 0.1738, 0.1709, 0.1729], device='cuda:0')
2025-03-02 06:17:22,067 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,067 - mmdet - INFO - tensor([[ 40],
        [117],
        [101],
        ...,
        [179],
        [174],
        [210]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,070 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,070 - mmdet - INFO - tensor([[ 92],
        [ 73],
        [170],
        ...,
        [134],
        [151],
        [182]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,072 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,072 - mmdet - INFO - tensor([[-0.0168,  0.0193,  0.0485,  ..., -0.0222, -0.0135,  0.0261],
        [ 0.0030, -0.0316, -0.0007,  ...,  0.0486, -0.0235, -0.0225],
        [ 0.0252, -0.0190, -0.0194,  ..., -0.0146, -0.0040,  0.0061],
        ...,
        [ 0.0079,  0.0174,  0.0238,  ..., -0.0202, -0.0186,  0.0044],
        [-0.0144, -0.0043,  0.0220,  ..., -0.0168, -0.0132,  0.0038],
        [ 0.0187,  0.0083, -0.0045,  ..., -0.0244, -0.0308,  0.0519]],
       device='cuda:0')
2025-03-02 06:17:22,080 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,081 - mmdet - INFO - tensor([[ 0.0260,  0.0194,  0.0201,  ...,  0.0172,  0.0150, -0.0304],
        [ 0.0079,  0.0027,  0.0315,  ..., -0.0028, -0.0444,  0.0089],
        [ 0.0318, -0.0049, -0.0088,  ..., -0.0033, -0.0127, -0.0130],
        ...,
        [ 0.0054,  0.0294,  0.0364,  ..., -0.0016, -0.0332, -0.0060],
        [-0.0007,  0.0362,  0.0261,  ...,  0.0038, -0.0280, -0.0293],
        [-0.0059,  0.0144, -0.0220,  ...,  0.0248, -0.0164, -0.0039]],
       device='cuda:0')
2025-03-02 06:17:22,091 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,091 - mmdet - INFO - tensor([[135],
        [ 73],
        [164],
        ...,
        [ 99],
        [ 57],
        [107]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,094 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,094 - mmdet - INFO - tensor([[ 0.0018,  0.0104,  0.0353,  ...,  0.0363,  0.0387,  0.0251],
        [ 0.0097,  0.0069,  0.0257,  ..., -0.0436,  0.0007,  0.0070],
        [ 0.0174,  0.0162, -0.0149,  ...,  0.0301,  0.0006, -0.0354],
        ...,
        [-0.0242,  0.0050, -0.0356,  ...,  0.0044, -0.0032, -0.0099],
        [-0.0194,  0.0176, -0.0086,  ...,  0.0021,  0.0342, -0.0061],
        [-0.0357,  0.0242,  0.0008,  ...,  0.0116,  0.0185, -0.0019]],
       device='cuda:0')
2025-03-02 06:17:22,105 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,105 - mmdet - INFO - tensor([[ 0.0132, -0.0228,  0.0247,  ...,  0.0001,  0.0034, -0.0184],
        [ 0.0178, -0.0002,  0.0126,  ...,  0.0330, -0.0024,  0.0025],
        [-0.0063, -0.0150, -0.0082,  ..., -0.0101, -0.0020,  0.0084],
        ...,
        [-0.0005,  0.0136,  0.0142,  ..., -0.0180,  0.0095,  0.0085],
        [ 0.0076,  0.0067,  0.0081,  ..., -0.0253, -0.0076,  0.0175],
        [ 0.0248,  0.0138, -0.0018,  ...,  0.0223, -0.0041, -0.0197]],
       device='cuda:0')
2025-03-02 06:17:22,115 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,115 - mmdet - INFO - tensor([[250],
        [121],
        [ 52],
        ...,
        [198],
        [118],
        [199]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,118 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,118 - mmdet - INFO - tensor([[-0.0056,  0.0220,  0.0301,  ..., -0.0085, -0.0031,  0.0373],
        [ 0.0199, -0.0069, -0.0152,  ..., -0.0133, -0.0346, -0.0159],
        [ 0.0003, -0.0009, -0.0110,  ..., -0.0187,  0.0258, -0.0106],
        ...,
        [ 0.0255, -0.0091,  0.0165,  ...,  0.0281,  0.0074, -0.0075],
        [-0.0260, -0.0269, -0.0101,  ..., -0.0396,  0.0130,  0.0071],
        [-0.0141, -0.0141, -0.0105,  ..., -0.0067,  0.0229,  0.0198]],
       device='cuda:0')
2025-03-02 06:17:22,126 - mmdet - INFO - lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,126 - mmdet - INFO - tensor([[ 0.0283, -0.0367,  0.0121,  ...,  0.0233,  0.0234,  0.0230],
        [-0.0259, -0.0071, -0.0328,  ...,  0.0129, -0.0192,  0.0082],
        [ 0.0382,  0.0037, -0.0103,  ...,  0.0211, -0.0085,  0.0190],
        ...,
        [ 0.0144, -0.0047, -0.0251,  ...,  0.0068,  0.0361, -0.0401],
        [ 0.0007,  0.0035,  0.0227,  ...,  0.0176,  0.0317, -0.0041],
        [ 0.0017,  0.0318, -0.0192,  ..., -0.0117,  0.0079, -0.0142]],
       device='cuda:0')
2025-03-02 06:17:22,137 - mmdet - INFO - lm_head.base_model.model.model.layers.4.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,137 - mmdet - INFO - tensor([[121],
        [ 90],
        [123],
        ...,
        [ 67],
        [ 69],
        [186]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,140 - mmdet - INFO - lm_head.base_model.model.model.layers.4.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,140 - mmdet - INFO - tensor([[ 69],
        [  5],
        [ 76],
        ...,
        [ 54],
        [183],
        [102]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,142 - mmdet - INFO - lm_head.base_model.model.model.layers.4.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,142 - mmdet - INFO - tensor([[215],
        [210],
        [228],
        ...,
        [186],
        [230],
        [  2]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,144 - mmdet - INFO - lm_head.base_model.model.model.layers.4.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,144 - mmdet - INFO - tensor([0.2617, 0.2598, 0.2598,  ..., 0.2539, 0.2637, 0.2715], device='cuda:0')
2025-03-02 06:17:22,148 - mmdet - INFO - lm_head.base_model.model.model.layers.4.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,148 - mmdet - INFO - tensor([0.1885, 0.1885, 0.1807,  ..., 0.1875, 0.1855, 0.1885], device='cuda:0')
2025-03-02 06:17:22,155 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,155 - mmdet - INFO - tensor([[ 85],
        [ 58],
        [149],
        ...,
        [187],
        [195],
        [ 87]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,157 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,157 - mmdet - INFO - tensor([[ 63],
        [157],
        [ 92],
        ...,
        [178],
        [ 85],
        [ 56]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,160 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,160 - mmdet - INFO - tensor([[-0.0233,  0.0174,  0.0040,  ...,  0.0178,  0.0051,  0.0233],
        [-0.0351,  0.0017, -0.0348,  ..., -0.0187, -0.0035, -0.0296],
        [ 0.0170,  0.0280, -0.0138,  ..., -0.0093, -0.0092,  0.0371],
        ...,
        [ 0.0025, -0.0411,  0.0060,  ..., -0.0065, -0.0112, -0.0148],
        [ 0.0005, -0.0281,  0.0296,  ...,  0.0096, -0.0013,  0.0014],
        [ 0.0185,  0.0034, -0.0205,  ..., -0.0055,  0.0250, -0.0205]],
       device='cuda:0')
2025-03-02 06:17:22,170 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,170 - mmdet - INFO - tensor([[-0.0133,  0.0211,  0.0369,  ..., -0.0011,  0.0225, -0.0215],
        [-0.0021, -0.0038, -0.0284,  ...,  0.0246,  0.0002,  0.0225],
        [ 0.0016, -0.0542,  0.0167,  ...,  0.0040, -0.0159,  0.0178],
        ...,
        [ 0.0199, -0.0189,  0.0383,  ...,  0.0095,  0.0066,  0.0172],
        [ 0.0252, -0.0086,  0.0107,  ..., -0.0464,  0.0291,  0.0214],
        [-0.0030, -0.0083,  0.0003,  ..., -0.0252,  0.0127, -0.0234]],
       device='cuda:0')
2025-03-02 06:17:22,178 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,178 - mmdet - INFO - tensor([[ 10],
        [183],
        [ 73],
        ...,
        [199],
        [213],
        [ 81]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,181 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,181 - mmdet - INFO - tensor([[-0.0116,  0.0089, -0.0201,  ...,  0.0296, -0.0139, -0.0095],
        [-0.0378,  0.0035, -0.0039,  ..., -0.0020,  0.0199, -0.0012],
        [ 0.0014,  0.0203, -0.0073,  ..., -0.0216,  0.0123, -0.0028],
        ...,
        [ 0.0242,  0.0001,  0.0322,  ...,  0.0096,  0.0393, -0.0082],
        [ 0.0188, -0.0046, -0.0128,  ..., -0.0246, -0.0202,  0.0048],
        [ 0.0101,  0.0136,  0.0058,  ..., -0.0057,  0.0261, -0.0182]],
       device='cuda:0')
2025-03-02 06:17:22,193 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,193 - mmdet - INFO - tensor([[-0.0034, -0.0192, -0.0069,  ...,  0.0094, -0.0138, -0.0156],
        [-0.0026,  0.0047,  0.0136,  ...,  0.0051, -0.0232, -0.0275],
        [ 0.0024,  0.0109, -0.0435,  ...,  0.0054,  0.0078, -0.0180],
        ...,
        [-0.0084,  0.0089,  0.0232,  ..., -0.0129,  0.0607,  0.0185],
        [ 0.0115,  0.0057,  0.0056,  ..., -0.0273,  0.0015, -0.0034],
        [ 0.0177, -0.0180,  0.0039,  ..., -0.0215,  0.0035,  0.0154]],
       device='cuda:0')
2025-03-02 06:17:22,207 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,207 - mmdet - INFO - tensor([[ 37],
        [152],
        [117],
        ...,
        [101],
        [105],
        [ 83]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,210 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,210 - mmdet - INFO - tensor([[-0.0145, -0.0148, -0.0092,  ..., -0.0318, -0.0032,  0.0291],
        [ 0.0098, -0.0023, -0.0304,  ..., -0.0210, -0.0256, -0.0061],
        [ 0.0198, -0.0243,  0.0252,  ..., -0.0082,  0.0133,  0.0018],
        ...,
        [-0.0056,  0.0056, -0.0123,  ...,  0.0095, -0.0156, -0.0293],
        [ 0.0145,  0.0268,  0.0121,  ...,  0.0107,  0.0175,  0.0114],
        [ 0.0291,  0.0406, -0.0249,  ..., -0.0067, -0.0095,  0.0020]],
       device='cuda:0')
2025-03-02 06:17:22,221 - mmdet - INFO - lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,221 - mmdet - INFO - tensor([[-0.0030, -0.0156,  0.0001,  ..., -0.0449,  0.0233, -0.0006],
        [ 0.0124, -0.0009,  0.0216,  ...,  0.0019,  0.0465,  0.0070],
        [-0.0296,  0.0586,  0.0211,  ...,  0.0085,  0.0053, -0.0096],
        ...,
        [-0.0001,  0.0006,  0.0073,  ..., -0.0140,  0.0058, -0.0106],
        [-0.0208, -0.0188,  0.0085,  ...,  0.0565, -0.0276, -0.0200],
        [-0.0153,  0.0035,  0.0255,  ...,  0.0034, -0.0048, -0.0094]],
       device='cuda:0')
2025-03-02 06:17:22,229 - mmdet - INFO - lm_head.base_model.model.model.layers.5.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,229 - mmdet - INFO - tensor([[119],
        [ 27],
        [ 65],
        ...,
        [ 26],
        [ 86],
        [113]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,233 - mmdet - INFO - lm_head.base_model.model.model.layers.5.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,233 - mmdet - INFO - tensor([[100],
        [122],
        [169],
        ...,
        [ 33],
        [ 21],
        [ 98]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,236 - mmdet - INFO - lm_head.base_model.model.model.layers.5.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,236 - mmdet - INFO - tensor([[ 97],
        [106],
        [120],
        ...,
        [ 54],
        [142],
        [148]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,237 - mmdet - INFO - lm_head.base_model.model.model.layers.5.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,238 - mmdet - INFO - tensor([0.2617, 0.2617, 0.2578,  ..., 0.2500, 0.2656, 0.2695], device='cuda:0')
2025-03-02 06:17:22,240 - mmdet - INFO - lm_head.base_model.model.model.layers.5.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,241 - mmdet - INFO - tensor([0.2041, 0.1934, 0.1885,  ..., 0.2041, 0.1982, 0.2061], device='cuda:0')
2025-03-02 06:17:22,244 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,244 - mmdet - INFO - tensor([[102],
        [142],
        [ 81],
        ...,
        [ 56],
        [121],
        [121]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,246 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,246 - mmdet - INFO - tensor([[149],
        [162],
        [152],
        ...,
        [ 39],
        [ 74],
        [ 35]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,247 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,248 - mmdet - INFO - tensor([[-0.0056, -0.0212,  0.0268,  ..., -0.0096,  0.0197, -0.0110],
        [-0.0250, -0.0002,  0.0233,  ...,  0.0016, -0.0034, -0.0231],
        [ 0.0022,  0.0257, -0.0018,  ..., -0.0259,  0.0057, -0.0144],
        ...,
        [-0.0171, -0.0015,  0.0346,  ...,  0.0069, -0.0152,  0.0121],
        [ 0.0274,  0.0243, -0.0280,  ...,  0.0391, -0.0203, -0.0275],
        [-0.0030,  0.0012, -0.0080,  ..., -0.0196,  0.0096, -0.0120]],
       device='cuda:0')
2025-03-02 06:17:22,258 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,258 - mmdet - INFO - tensor([[-0.0001, -0.0288,  0.0164,  ..., -0.0091, -0.0177, -0.0096],
        [ 0.0200, -0.0200, -0.0096,  ...,  0.0007, -0.0006,  0.0055],
        [-0.0232,  0.0232, -0.0125,  ...,  0.0034, -0.0138,  0.0260],
        ...,
        [-0.0418, -0.0220,  0.0142,  ..., -0.0132, -0.0043, -0.0371],
        [-0.0191,  0.0071, -0.0165,  ..., -0.0229,  0.0098,  0.0015],
        [ 0.0024, -0.0014,  0.0265,  ...,  0.0310, -0.0196, -0.0071]],
       device='cuda:0')
2025-03-02 06:17:22,264 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,264 - mmdet - INFO - tensor([[191],
        [170],
        [207],
        ...,
        [183],
        [242],
        [134]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,267 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,267 - mmdet - INFO - tensor([[ 8.0411e-03,  9.8912e-05, -4.8083e-03,  ...,  1.9667e-02,
          1.2215e-02, -2.7678e-02],
        [-9.3238e-03,  1.0093e-02,  4.7579e-02,  ...,  2.4598e-02,
          1.9842e-02, -2.9647e-02],
        [-4.2957e-03,  8.7422e-03, -8.5297e-03,  ..., -7.6381e-03,
          5.1016e-02,  2.3499e-02],
        ...,
        [ 1.9395e-03, -2.6163e-02, -4.3139e-02,  ...,  6.1007e-03,
          3.4328e-02,  1.3875e-03],
        [-2.3757e-02, -1.5653e-02,  2.9580e-02,  ..., -2.7309e-02,
         -1.7156e-02,  2.3539e-02],
        [-5.3195e-03, -1.6813e-03,  1.4696e-02,  ..., -1.1939e-02,
         -2.4812e-02, -1.3812e-02]], device='cuda:0')
2025-03-02 06:17:22,275 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,275 - mmdet - INFO - tensor([[ 2.7850e-02, -5.0667e-02, -1.5769e-02,  ..., -5.3826e-03,
          1.1687e-02,  4.0942e-02],
        [-1.2433e-02,  5.5069e-03,  5.4338e-02,  ..., -1.8614e-02,
          9.8382e-03, -1.8531e-03],
        [-5.6329e-04, -1.8229e-02,  5.3426e-06,  ..., -9.3490e-03,
         -1.4938e-02, -3.9519e-03],
        ...,
        [-1.0438e-02, -3.7212e-02,  1.7955e-02,  ...,  7.7151e-03,
         -1.5602e-03,  1.6078e-02],
        [ 4.3057e-02,  2.9964e-03,  2.3844e-02,  ...,  1.1629e-04,
          2.4158e-03, -1.1890e-02],
        [ 8.9244e-04, -3.9013e-02, -1.9308e-02,  ..., -5.8923e-03,
         -4.9899e-03, -5.0155e-03]], device='cuda:0')
2025-03-02 06:17:22,281 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,281 - mmdet - INFO - tensor([[179],
        [  9],
        [119],
        ...,
        [ 19],
        [196],
        [170]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,284 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,284 - mmdet - INFO - tensor([[-0.0048, -0.0160,  0.0065,  ...,  0.0059,  0.0116, -0.0035],
        [ 0.0099,  0.0161,  0.0137,  ...,  0.0139, -0.0313,  0.0461],
        [ 0.0273,  0.0027,  0.0215,  ...,  0.0235, -0.0327,  0.0054],
        ...,
        [-0.0047, -0.0071, -0.0079,  ...,  0.0345,  0.0397,  0.0118],
        [ 0.0153, -0.0306,  0.0250,  ..., -0.0193,  0.0059,  0.0048],
        [ 0.0105, -0.0126,  0.0258,  ..., -0.0386, -0.0123, -0.0129]],
       device='cuda:0')
2025-03-02 06:17:22,293 - mmdet - INFO - lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,293 - mmdet - INFO - tensor([[ 0.0023,  0.0254, -0.0006,  ...,  0.0021, -0.0133,  0.0268],
        [-0.0087,  0.0010, -0.0146,  ...,  0.0091, -0.0100, -0.0278],
        [ 0.0012,  0.0323,  0.0170,  ..., -0.0126, -0.0107, -0.0110],
        ...,
        [-0.0019,  0.0077,  0.0136,  ...,  0.0419, -0.0225, -0.0070],
        [ 0.0127,  0.0003,  0.0120,  ..., -0.0236, -0.0060, -0.0086],
        [ 0.0307,  0.0230,  0.0111,  ...,  0.0292,  0.0207,  0.0205]],
       device='cuda:0')
2025-03-02 06:17:22,299 - mmdet - INFO - lm_head.base_model.model.model.layers.6.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,299 - mmdet - INFO - tensor([[221],
        [ 55],
        [231],
        ...,
        [161],
        [209],
        [123]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,302 - mmdet - INFO - lm_head.base_model.model.model.layers.6.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,302 - mmdet - INFO - tensor([[ 85],
        [ 73],
        [ 89],
        ...,
        [250],
        [184],
        [ 48]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,305 - mmdet - INFO - lm_head.base_model.model.model.layers.6.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,305 - mmdet - INFO - tensor([[ 92],
        [121],
        [161],
        ...,
        [226],
        [190],
        [ 89]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,307 - mmdet - INFO - lm_head.base_model.model.model.layers.6.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,307 - mmdet - INFO - tensor([0.3184, 0.3594, 0.3301,  ..., 0.3184, 0.3359, 0.3203], device='cuda:0')
2025-03-02 06:17:22,310 - mmdet - INFO - lm_head.base_model.model.model.layers.6.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,310 - mmdet - INFO - tensor([0.2158, 0.2041, 0.2031,  ..., 0.2188, 0.2119, 0.2139], device='cuda:0')
2025-03-02 06:17:22,313 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,313 - mmdet - INFO - tensor([[184],
        [131],
        [ 33],
        ...,
        [232],
        [158],
        [182]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,314 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,315 - mmdet - INFO - tensor([[ 85],
        [ 52],
        [102],
        ...,
        [182],
        [184],
        [132]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,317 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,317 - mmdet - INFO - tensor([[-0.0326,  0.0115, -0.0032,  ..., -0.0053,  0.0065, -0.0170],
        [ 0.0036, -0.0146, -0.0204,  ...,  0.0122, -0.0083,  0.0075],
        [ 0.0114, -0.0129, -0.0248,  ...,  0.0135,  0.0029,  0.0032],
        ...,
        [ 0.0051,  0.0040,  0.0291,  ...,  0.0121, -0.0237,  0.0010],
        [-0.0123, -0.0302,  0.0264,  ...,  0.0036, -0.0545, -0.0138],
        [ 0.0132, -0.0106,  0.0139,  ...,  0.0293, -0.0188,  0.0060]],
       device='cuda:0')
2025-03-02 06:17:22,325 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,325 - mmdet - INFO - tensor([[ 0.0030, -0.0305, -0.0079,  ..., -0.0018,  0.0125, -0.0077],
        [-0.0053,  0.0520,  0.0042,  ..., -0.0210,  0.0140, -0.0106],
        [-0.0286,  0.0106, -0.0014,  ..., -0.0009,  0.0005, -0.0014],
        ...,
        [ 0.0033, -0.0341, -0.0213,  ..., -0.0067, -0.0117, -0.0177],
        [-0.0050,  0.0263, -0.0006,  ..., -0.0131,  0.0234,  0.0249],
        [ 0.0202, -0.0070, -0.0020,  ..., -0.0127,  0.0071,  0.0277]],
       device='cuda:0')
2025-03-02 06:17:22,331 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,331 - mmdet - INFO - tensor([[ 56],
        [201],
        [ 58],
        ...,
        [123],
        [ 46],
        [171]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,334 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,334 - mmdet - INFO - tensor([[ 0.0050, -0.0143,  0.0212,  ...,  0.0295, -0.0064, -0.0320],
        [-0.0050,  0.0092, -0.0061,  ...,  0.0135, -0.0090,  0.0240],
        [ 0.0335, -0.0543,  0.0201,  ...,  0.0171,  0.0035,  0.0217],
        ...,
        [-0.0318, -0.0016, -0.0074,  ..., -0.0309, -0.0127,  0.0276],
        [ 0.0111,  0.0047, -0.0711,  ...,  0.0138,  0.0035,  0.0091],
        [-0.0064, -0.0044, -0.0172,  ..., -0.0164,  0.0064, -0.0104]],
       device='cuda:0')
2025-03-02 06:17:22,342 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,342 - mmdet - INFO - tensor([[ 0.0129,  0.0005,  0.0164,  ..., -0.0204, -0.0157, -0.0148],
        [ 0.0139, -0.0080,  0.0070,  ..., -0.0181,  0.0049, -0.0136],
        [ 0.0144, -0.0094,  0.0243,  ...,  0.0008,  0.0118,  0.0044],
        ...,
        [-0.0048,  0.0174,  0.0113,  ...,  0.0075, -0.0014,  0.0426],
        [ 0.0418,  0.0180,  0.0178,  ..., -0.0127, -0.0056, -0.0145],
        [ 0.0207, -0.0003, -0.0218,  ...,  0.0045, -0.0037, -0.0095]],
       device='cuda:0')
2025-03-02 06:17:22,349 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,349 - mmdet - INFO - tensor([[179],
        [101],
        [134],
        ...,
        [ 22],
        [ 73],
        [ 57]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,352 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,352 - mmdet - INFO - tensor([[-0.0473, -0.0088,  0.0082,  ...,  0.0313,  0.0009, -0.0403],
        [-0.0138, -0.0054,  0.0455,  ...,  0.0128, -0.0094, -0.0038],
        [-0.0035,  0.0136, -0.0024,  ...,  0.0190,  0.0021,  0.0067],
        ...,
        [-0.0177, -0.0067,  0.0394,  ..., -0.0202,  0.0136, -0.0107],
        [-0.0208, -0.0118,  0.0097,  ...,  0.0075,  0.0148,  0.0377],
        [-0.0200,  0.0165,  0.0250,  ..., -0.0049,  0.0170, -0.0067]],
       device='cuda:0')
2025-03-02 06:17:22,358 - mmdet - INFO - lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,359 - mmdet - INFO - tensor([[-0.0155, -0.0263, -0.0068,  ...,  0.0260,  0.0067, -0.0019],
        [ 0.0105, -0.0306, -0.0159,  ...,  0.0120, -0.0223, -0.0206],
        [-0.0174,  0.0176,  0.0052,  ...,  0.0072,  0.0247, -0.0169],
        ...,
        [-0.0258, -0.0237,  0.0167,  ..., -0.0247, -0.0133,  0.0318],
        [-0.0159,  0.0071,  0.0321,  ..., -0.0080, -0.0139, -0.0187],
        [-0.0400, -0.0056, -0.0099,  ...,  0.0477, -0.0015,  0.0034]],
       device='cuda:0')
2025-03-02 06:17:22,365 - mmdet - INFO - lm_head.base_model.model.model.layers.7.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,365 - mmdet - INFO - tensor([[134],
        [ 57],
        [177],
        ...,
        [133],
        [ 75],
        [199]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,368 - mmdet - INFO - lm_head.base_model.model.model.layers.7.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,368 - mmdet - INFO - tensor([[232],
        [ 97],
        [ 50],
        ...,
        [250],
        [187],
        [168]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,370 - mmdet - INFO - lm_head.base_model.model.model.layers.7.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,371 - mmdet - INFO - tensor([[ 84],
        [124],
        [ 89],
        ...,
        [125],
        [120],
        [ 55]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,372 - mmdet - INFO - lm_head.base_model.model.model.layers.7.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,372 - mmdet - INFO - tensor([0.3242, 0.3672, 0.3379,  ..., 0.3242, 0.3574, 0.3301], device='cuda:0')
2025-03-02 06:17:22,375 - mmdet - INFO - lm_head.base_model.model.model.layers.7.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,375 - mmdet - INFO - tensor([0.2344, 0.2168, 0.2178,  ..., 0.2256, 0.2266, 0.2217], device='cuda:0')
2025-03-02 06:17:22,378 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,378 - mmdet - INFO - tensor([[164],
        [ 18],
        [169],
        ...,
        [ 53],
        [130],
        [181]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,380 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,380 - mmdet - INFO - tensor([[ 89],
        [ 93],
        [181],
        ...,
        [ 36],
        [ 42],
        [149]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,381 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,381 - mmdet - INFO - tensor([[-0.0010, -0.0133,  0.0057,  ..., -0.0218,  0.0005, -0.0178],
        [-0.0049,  0.0053,  0.0110,  ..., -0.0082, -0.0141, -0.0231],
        [-0.0084, -0.0086, -0.0105,  ..., -0.0121,  0.0054, -0.0244],
        ...,
        [ 0.0147, -0.0180,  0.0135,  ...,  0.0140,  0.0063,  0.0069],
        [ 0.0018,  0.0428,  0.0242,  ...,  0.0309,  0.0008,  0.0074],
        [ 0.0079,  0.0290, -0.0118,  ...,  0.0369, -0.0085, -0.0012]],
       device='cuda:0')
2025-03-02 06:17:22,393 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,393 - mmdet - INFO - tensor([[ 0.0334,  0.0271,  0.0312,  ..., -0.0123,  0.0320, -0.0214],
        [-0.0021,  0.0003, -0.0052,  ..., -0.0245, -0.0169, -0.0328],
        [ 0.0189,  0.0167,  0.0060,  ..., -0.0254,  0.0388, -0.0322],
        ...,
        [ 0.0149,  0.0108, -0.0022,  ...,  0.0121,  0.0054,  0.0156],
        [ 0.0035, -0.0244,  0.0100,  ..., -0.0009,  0.0045,  0.0006],
        [ 0.0185,  0.0036,  0.0190,  ...,  0.0064,  0.0338, -0.0029]],
       device='cuda:0')
2025-03-02 06:17:22,400 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,400 - mmdet - INFO - tensor([[ 20],
        [149],
        [114],
        ...,
        [115],
        [ 38],
        [149]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,402 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,403 - mmdet - INFO - tensor([[ 0.0389, -0.0004,  0.0069,  ...,  0.0118, -0.0044,  0.0234],
        [ 0.0009,  0.0442,  0.0004,  ...,  0.0262,  0.0072, -0.0280],
        [ 0.0020,  0.0262, -0.0032,  ...,  0.0174,  0.0220,  0.0097],
        ...,
        [ 0.0191,  0.0299,  0.0199,  ...,  0.0031,  0.0102, -0.0005],
        [ 0.0055, -0.0283,  0.0015,  ..., -0.0282,  0.0031, -0.0148],
        [-0.0014, -0.0127, -0.0117,  ..., -0.0095,  0.0263,  0.0058]],
       device='cuda:0')
2025-03-02 06:17:22,409 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,409 - mmdet - INFO - tensor([[-0.0381,  0.0294, -0.0082,  ...,  0.0089, -0.0162,  0.0146],
        [ 0.0095, -0.0111,  0.0115,  ..., -0.0159, -0.0300, -0.0214],
        [ 0.0058,  0.0105,  0.0022,  ..., -0.0106,  0.0077, -0.0084],
        ...,
        [-0.0148,  0.0135,  0.0186,  ..., -0.0106,  0.0354,  0.0042],
        [ 0.0318,  0.0272, -0.0159,  ..., -0.0073,  0.0328, -0.0264],
        [ 0.0598, -0.0380, -0.0302,  ...,  0.0126,  0.0021,  0.0280]],
       device='cuda:0')
2025-03-02 06:17:22,420 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,420 - mmdet - INFO - tensor([[220],
        [ 61],
        [194],
        ...,
        [136],
        [126],
        [ 53]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,422 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,422 - mmdet - INFO - tensor([[ 0.0163,  0.0100,  0.0111,  ..., -0.0077,  0.0408, -0.0240],
        [-0.0066,  0.0312,  0.0282,  ...,  0.0170,  0.0177, -0.0135],
        [-0.0025,  0.0003,  0.0164,  ...,  0.0198,  0.0141, -0.0330],
        ...,
        [-0.0252,  0.0203, -0.0153,  ..., -0.0091,  0.0138, -0.0168],
        [ 0.0097,  0.0047, -0.0276,  ...,  0.0477,  0.0122, -0.0322],
        [ 0.0091, -0.0138, -0.0282,  ..., -0.0028,  0.0080,  0.0122]],
       device='cuda:0')
2025-03-02 06:17:22,428 - mmdet - INFO - lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,428 - mmdet - INFO - tensor([[-0.0037,  0.0271,  0.0126,  ...,  0.0281, -0.0479,  0.0425],
        [-0.0516, -0.0261,  0.0150,  ..., -0.0172,  0.0106,  0.0241],
        [ 0.0074,  0.0153,  0.0207,  ..., -0.0043,  0.0304, -0.0236],
        ...,
        [-0.0213, -0.0124, -0.0158,  ..., -0.0094,  0.0001, -0.0185],
        [ 0.0381, -0.0074,  0.0365,  ...,  0.0211,  0.0179,  0.0087],
        [-0.0261,  0.0237,  0.0076,  ..., -0.0097,  0.0050,  0.0183]],
       device='cuda:0')
2025-03-02 06:17:22,439 - mmdet - INFO - lm_head.base_model.model.model.layers.8.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,439 - mmdet - INFO - tensor([[152],
        [ 44],
        [153],
        ...,
        [ 52],
        [ 84],
        [182]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,441 - mmdet - INFO - lm_head.base_model.model.model.layers.8.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,441 - mmdet - INFO - tensor([[ 91],
        [ 70],
        [237],
        ...,
        [ 53],
        [148],
        [136]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,443 - mmdet - INFO - lm_head.base_model.model.model.layers.8.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,443 - mmdet - INFO - tensor([[ 86],
        [183],
        [184],
        ...,
        [147],
        [167],
        [120]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,445 - mmdet - INFO - lm_head.base_model.model.model.layers.8.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,445 - mmdet - INFO - tensor([0.3320, 0.3496, 0.3320,  ..., 0.3203, 0.3457, 0.3203], device='cuda:0')
2025-03-02 06:17:22,447 - mmdet - INFO - lm_head.base_model.model.model.layers.8.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,447 - mmdet - INFO - tensor([0.2412, 0.2227, 0.2158,  ..., 0.2354, 0.2275, 0.2246], device='cuda:0')
2025-03-02 06:17:22,454 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,454 - mmdet - INFO - tensor([[ 56],
        [201],
        [178],
        ...,
        [ 17],
        [130],
        [214]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,456 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,456 - mmdet - INFO - tensor([[ 26],
        [ 73],
        [ 98],
        ...,
        [ 58],
        [ 41],
        [179]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,458 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,458 - mmdet - INFO - tensor([[-3.0835e-03,  1.5414e-02, -6.8416e-03,  ..., -6.3995e-02,
          1.8932e-02,  7.9032e-03],
        [-6.3956e-05,  2.9580e-03, -5.8278e-03,  ..., -2.1561e-03,
         -5.8775e-03, -1.6416e-02],
        [ 1.5768e-02,  1.0672e-02,  3.0935e-02,  ...,  2.5292e-02,
          1.7926e-02, -1.0902e-02],
        ...,
        [ 9.2954e-03,  1.9655e-02,  9.3001e-03,  ..., -1.4200e-02,
         -2.3863e-02,  4.3622e-03],
        [ 5.7035e-03,  3.6334e-02,  2.1469e-02,  ...,  4.5389e-03,
         -3.0694e-02, -3.9756e-03],
        [-2.9687e-02,  4.1355e-03, -5.2496e-03,  ..., -1.7957e-02,
          1.1653e-02, -2.7298e-02]], device='cuda:0')
2025-03-02 06:17:22,463 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,463 - mmdet - INFO - tensor([[-0.0270,  0.0163,  0.0099,  ...,  0.0184,  0.0022,  0.0369],
        [-0.0138, -0.0157,  0.0068,  ..., -0.0351, -0.0186, -0.0087],
        [-0.0115, -0.0245, -0.0224,  ...,  0.0131,  0.0557,  0.0290],
        ...,
        [-0.0082, -0.0262, -0.0012,  ..., -0.0160, -0.0047, -0.0166],
        [-0.0055, -0.0149, -0.0136,  ..., -0.0077,  0.0027,  0.0230],
        [-0.0358,  0.0395,  0.0120,  ..., -0.0199,  0.0140,  0.0286]],
       device='cuda:0')
2025-03-02 06:17:22,472 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,472 - mmdet - INFO - tensor([[105],
        [120],
        [ 53],
        ...,
        [169],
        [147],
        [ 86]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,474 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,474 - mmdet - INFO - tensor([[ 0.0246,  0.0328,  0.0263,  ...,  0.0085,  0.0110, -0.0336],
        [ 0.0210,  0.0138,  0.0136,  ...,  0.0072, -0.0194, -0.0093],
        [-0.0230,  0.0055,  0.0234,  ..., -0.0220,  0.0136, -0.0143],
        ...,
        [ 0.0128,  0.0310, -0.0021,  ...,  0.0043, -0.0199, -0.0337],
        [ 0.0111,  0.0204,  0.0158,  ..., -0.0100,  0.0057,  0.0024],
        [ 0.0109, -0.0116,  0.0053,  ...,  0.0099,  0.0112, -0.0085]],
       device='cuda:0')
2025-03-02 06:17:22,482 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,482 - mmdet - INFO - tensor([[-0.0209, -0.0107,  0.0060,  ..., -0.0038,  0.0094,  0.0242],
        [ 0.0025,  0.0167, -0.0151,  ..., -0.0041, -0.0029, -0.0455],
        [-0.0188, -0.0218,  0.0162,  ..., -0.0023,  0.0037,  0.0094],
        ...,
        [-0.0172, -0.0209, -0.0125,  ...,  0.0270, -0.0404, -0.0466],
        [-0.0259,  0.0183, -0.0085,  ..., -0.0101, -0.0090,  0.0343],
        [ 0.0171, -0.0185, -0.0510,  ...,  0.0319,  0.0421,  0.0033]],
       device='cuda:0')
2025-03-02 06:17:22,494 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,494 - mmdet - INFO - tensor([[170],
        [145],
        [189],
        ...,
        [215],
        [213],
        [169]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,496 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,497 - mmdet - INFO - tensor([[ 0.0078, -0.0275, -0.0204,  ..., -0.0085, -0.0279,  0.0079],
        [ 0.0156, -0.0013,  0.0224,  ..., -0.0111, -0.0404,  0.0139],
        [-0.0085, -0.0167, -0.0070,  ..., -0.0132,  0.0070, -0.0237],
        ...,
        [-0.0031,  0.0227, -0.0059,  ..., -0.0314, -0.0087,  0.0027],
        [ 0.0081, -0.0214, -0.0130,  ..., -0.0117,  0.0100, -0.0256],
        [ 0.0271, -0.0018,  0.0234,  ...,  0.0128, -0.0409, -0.0402]],
       device='cuda:0')
2025-03-02 06:17:22,506 - mmdet - INFO - lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,506 - mmdet - INFO - tensor([[-0.0013,  0.0589, -0.0281,  ..., -0.0077,  0.0287,  0.0016],
        [-0.0025, -0.0065,  0.0211,  ..., -0.0334,  0.0447, -0.0216],
        [ 0.0040, -0.0233,  0.0251,  ...,  0.0093,  0.0244,  0.0037],
        ...,
        [-0.0315,  0.0231,  0.0026,  ..., -0.0296, -0.0084, -0.0186],
        [-0.0043,  0.0095,  0.0279,  ..., -0.0382, -0.0044, -0.0336],
        [ 0.0120, -0.0154, -0.0182,  ...,  0.0039,  0.0124, -0.0317]],
       device='cuda:0')
2025-03-02 06:17:22,516 - mmdet - INFO - lm_head.base_model.model.model.layers.9.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,516 - mmdet - INFO - tensor([[109],
        [ 88],
        [245],
        ...,
        [ 85],
        [ 58],
        [ 73]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,519 - mmdet - INFO - lm_head.base_model.model.model.layers.9.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,519 - mmdet - INFO - tensor([[ 89],
        [168],
        [116],
        ...,
        [ 67],
        [179],
        [232]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,521 - mmdet - INFO - lm_head.base_model.model.model.layers.9.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,521 - mmdet - INFO - tensor([[109],
        [  3],
        [231],
        ...,
        [165],
        [174],
        [171]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,523 - mmdet - INFO - lm_head.base_model.model.model.layers.9.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,523 - mmdet - INFO - tensor([0.3516, 0.3613, 0.3242,  ..., 0.3516, 0.3457, 0.3398], device='cuda:0')
2025-03-02 06:17:22,526 - mmdet - INFO - lm_head.base_model.model.model.layers.9.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,526 - mmdet - INFO - tensor([0.2432, 0.2295, 0.2217,  ..., 0.2393, 0.2363, 0.2324], device='cuda:0')
2025-03-02 06:17:22,529 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,529 - mmdet - INFO - tensor([[105],
        [103],
        [233],
        ...,
        [197],
        [166],
        [ 53]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,531 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,531 - mmdet - INFO - tensor([[ 11],
        [ 74],
        [122],
        ...,
        [ 20],
        [ 42],
        [229]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,534 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,534 - mmdet - INFO - tensor([[-0.0252, -0.0116, -0.0022,  ...,  0.0406, -0.0184, -0.0463],
        [ 0.0294,  0.0116, -0.0553,  ...,  0.0257,  0.0228,  0.0068],
        [ 0.0199, -0.0130, -0.0091,  ..., -0.0031, -0.0005, -0.0113],
        ...,
        [-0.0066, -0.0235,  0.0054,  ..., -0.0070,  0.0135,  0.0133],
        [-0.0076, -0.0199, -0.0099,  ..., -0.0201,  0.0137,  0.0444],
        [-0.0094,  0.0139, -0.0268,  ..., -0.0327,  0.0227,  0.0300]],
       device='cuda:0')
2025-03-02 06:17:22,543 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,543 - mmdet - INFO - tensor([[-0.0453, -0.0177,  0.0024,  ..., -0.0324,  0.0034,  0.0540],
        [ 0.0064, -0.0037, -0.0274,  ..., -0.0226,  0.0510, -0.0121],
        [-0.0125,  0.0112,  0.0043,  ...,  0.0057,  0.0241, -0.0095],
        ...,
        [-0.0151, -0.0121, -0.0069,  ...,  0.0175,  0.0192,  0.0058],
        [-0.0139,  0.0252, -0.0142,  ..., -0.0154, -0.0015, -0.0139],
        [-0.0127, -0.0024,  0.0174,  ...,  0.0168,  0.0092,  0.0048]],
       device='cuda:0')
2025-03-02 06:17:22,552 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,552 - mmdet - INFO - tensor([[ 24],
        [106],
        [215],
        ...,
        [ 57],
        [197],
        [ 78]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,554 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,554 - mmdet - INFO - tensor([[ 0.0143, -0.0251, -0.0054,  ...,  0.0471, -0.0021, -0.0018],
        [-0.0043, -0.0174,  0.0403,  ...,  0.0349, -0.0090,  0.0083],
        [ 0.0218,  0.0042,  0.0090,  ..., -0.0298,  0.0083,  0.0188],
        ...,
        [ 0.0429,  0.0278,  0.0385,  ..., -0.0029,  0.0093,  0.0032],
        [ 0.0131, -0.0038,  0.0123,  ..., -0.0096,  0.0062, -0.0115],
        [ 0.0197,  0.0143,  0.0252,  ..., -0.0120,  0.0004, -0.0085]],
       device='cuda:0')
2025-03-02 06:17:22,561 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,561 - mmdet - INFO - tensor([[-0.0511,  0.0213,  0.0098,  ...,  0.0302,  0.0138,  0.0019],
        [ 0.0052,  0.0341,  0.0068,  ..., -0.0055, -0.0053, -0.0100],
        [ 0.0078, -0.0217,  0.0389,  ...,  0.0196,  0.0034,  0.0073],
        ...,
        [-0.0334, -0.0123, -0.0180,  ...,  0.0111,  0.0091, -0.0159],
        [-0.0218,  0.0249,  0.0034,  ..., -0.0039, -0.0089, -0.0145],
        [-0.0008, -0.0288, -0.0179,  ..., -0.0072,  0.0219, -0.0110]],
       device='cuda:0')
2025-03-02 06:17:22,571 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,571 - mmdet - INFO - tensor([[103],
        [ 30],
        [ 72],
        ...,
        [177],
        [138],
        [119]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,573 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,573 - mmdet - INFO - tensor([[ 0.0147, -0.0057,  0.0091,  ..., -0.0353, -0.0108, -0.0215],
        [-0.0252, -0.0261, -0.0183,  ...,  0.0280, -0.0346,  0.0182],
        [-0.0029, -0.0033,  0.0089,  ..., -0.0097,  0.0046,  0.0030],
        ...,
        [-0.0289, -0.0570, -0.0160,  ...,  0.0043, -0.0042,  0.0018],
        [ 0.0306, -0.0037, -0.0088,  ...,  0.0201,  0.0264,  0.0034],
        [ 0.0049, -0.0170, -0.0449,  ...,  0.0196, -0.0065, -0.0042]],
       device='cuda:0')
2025-03-02 06:17:22,581 - mmdet - INFO - lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,581 - mmdet - INFO - tensor([[ 0.0028, -0.0486,  0.0039,  ...,  0.0222,  0.0033,  0.0016],
        [ 0.0131,  0.0054, -0.0269,  ...,  0.0131, -0.0005, -0.0050],
        [ 0.0253,  0.0108, -0.0393,  ...,  0.0355, -0.0018,  0.0071],
        ...,
        [-0.0116, -0.0489, -0.0337,  ..., -0.0119, -0.0022,  0.0297],
        [ 0.0057,  0.0057, -0.0231,  ..., -0.0252,  0.0097, -0.0193],
        [ 0.0100, -0.0132, -0.0406,  ..., -0.0155,  0.0081, -0.0110]],
       device='cuda:0')
2025-03-02 06:17:22,591 - mmdet - INFO - lm_head.base_model.model.model.layers.10.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,591 - mmdet - INFO - tensor([[ 16],
        [ 41],
        [ 93],
        ...,
        [163],
        [181],
        [132]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,593 - mmdet - INFO - lm_head.base_model.model.model.layers.10.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,593 - mmdet - INFO - tensor([[ 22],
        [ 21],
        [ 87],
        ...,
        [  4],
        [232],
        [171]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,595 - mmdet - INFO - lm_head.base_model.model.model.layers.10.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,595 - mmdet - INFO - tensor([[ 82],
        [109],
        [166],
        ...,
        [ 58],
        [179],
        [ 74]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,596 - mmdet - INFO - lm_head.base_model.model.model.layers.10.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,596 - mmdet - INFO - tensor([0.3633, 0.3594, 0.3223,  ..., 0.3398, 0.3496, 0.3379], device='cuda:0')
2025-03-02 06:17:22,599 - mmdet - INFO - lm_head.base_model.model.model.layers.10.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,599 - mmdet - INFO - tensor([0.2451, 0.2334, 0.2227,  ..., 0.2441, 0.2393, 0.2393], device='cuda:0')
2025-03-02 06:17:22,604 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,604 - mmdet - INFO - tensor([[205],
        [ 83],
        [ 50],
        ...,
        [156],
        [244],
        [222]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,606 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,606 - mmdet - INFO - tensor([[140],
        [117],
        [139],
        ...,
        [187],
        [166],
        [251]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,607 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,607 - mmdet - INFO - tensor([[-0.0018,  0.0012,  0.0101,  ..., -0.0192, -0.0189, -0.0253],
        [ 0.0031, -0.0068, -0.0058,  ...,  0.0074, -0.0080, -0.0334],
        [-0.0013,  0.0374,  0.0333,  ...,  0.0074, -0.0061, -0.0066],
        ...,
        [-0.0108, -0.0006, -0.0067,  ...,  0.0108, -0.0026, -0.0125],
        [ 0.0144,  0.0023, -0.0119,  ..., -0.0327, -0.0220, -0.0217],
        [-0.0445,  0.0048,  0.0112,  ...,  0.0004,  0.0127,  0.0180]],
       device='cuda:0')
2025-03-02 06:17:22,614 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,614 - mmdet - INFO - tensor([[ 6.4909e-03,  9.9645e-03, -4.4967e-04,  ...,  2.0455e-02,
          1.3466e-02,  7.1254e-04],
        [-9.0144e-03, -4.6811e-03,  8.3670e-03,  ...,  1.3043e-02,
         -1.1090e-02, -9.9527e-03],
        [-3.0169e-02,  1.6746e-02, -2.2656e-02,  ..., -1.2946e-02,
          7.3545e-03,  2.1366e-02],
        ...,
        [-1.1818e-02,  2.0574e-02,  2.2222e-02,  ...,  3.2705e-02,
          8.3078e-03, -2.7622e-03],
        [ 3.4362e-04,  2.6468e-02, -9.8856e-04,  ...,  2.4256e-02,
          1.2240e-03, -2.0366e-02],
        [ 9.2514e-03,  8.7457e-05, -1.4669e-03,  ...,  1.3214e-02,
          2.4743e-02, -2.5264e-02]], device='cuda:0')
2025-03-02 06:17:22,624 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,624 - mmdet - INFO - tensor([[136],
        [ 68],
        [149],
        ...,
        [103],
        [144],
        [100]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,626 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,626 - mmdet - INFO - tensor([[-2.1839e-02,  2.3267e-02,  4.4389e-02,  ...,  5.6824e-05,
         -7.7112e-03,  5.1195e-03],
        [-9.2128e-03,  3.1369e-02, -3.5687e-02,  ..., -5.6124e-03,
          1.1447e-02, -7.6705e-03],
        [ 9.4776e-03, -5.3196e-03,  9.0528e-04,  ..., -2.0026e-02,
         -1.0218e-02,  2.1243e-02],
        ...,
        [ 2.2433e-02,  3.0672e-03,  9.2372e-03,  ...,  3.5220e-02,
          4.7263e-03, -9.6738e-03],
        [ 2.2999e-02,  2.6220e-02, -1.3700e-02,  ...,  2.2914e-02,
          9.9000e-03, -1.5449e-02],
        [ 4.1708e-04, -2.0746e-02,  2.0618e-02,  ...,  1.1853e-03,
          1.8975e-02, -1.3809e-02]], device='cuda:0')
2025-03-02 06:17:22,631 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,631 - mmdet - INFO - tensor([[ 0.0175,  0.0090,  0.0362,  ...,  0.0091, -0.0231, -0.0233],
        [-0.0171, -0.0063, -0.0041,  ...,  0.0050, -0.0273, -0.0318],
        [ 0.0047, -0.0119,  0.0172,  ..., -0.0192, -0.0132, -0.0076],
        ...,
        [ 0.0024, -0.0150,  0.0191,  ...,  0.0014, -0.0128, -0.0219],
        [ 0.0178, -0.0251, -0.0116,  ...,  0.0168,  0.0090,  0.0169],
        [-0.0153,  0.0078,  0.0004,  ..., -0.0010, -0.0093,  0.0148]],
       device='cuda:0')
2025-03-02 06:17:22,639 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,639 - mmdet - INFO - tensor([[ 24],
        [176],
        [ 16],
        ...,
        [193],
        [ 86],
        [116]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,640 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,640 - mmdet - INFO - tensor([[ 2.4226e-02,  1.4518e-03, -1.4889e-02,  ..., -3.1339e-02,
          2.1428e-02, -3.3803e-02],
        [ 2.4760e-02, -1.3474e-02,  1.0276e-02,  ...,  3.9484e-04,
         -6.5568e-03,  6.3499e-03],
        [-7.7124e-03,  2.8257e-02,  1.9649e-02,  ...,  1.2682e-02,
         -2.7861e-02, -9.0086e-03],
        ...,
        [-1.0369e-03,  2.5809e-05,  2.8949e-02,  ...,  3.8288e-02,
          3.1518e-02, -7.2392e-03],
        [-3.2879e-02, -3.1998e-02, -9.8077e-03,  ..., -2.2046e-02,
          8.4653e-03, -4.7431e-03],
        [ 2.8260e-02,  2.8975e-02, -3.2450e-02,  ...,  1.5940e-02,
          2.0251e-03,  1.1697e-02]], device='cuda:0')
2025-03-02 06:17:22,645 - mmdet - INFO - lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,645 - mmdet - INFO - tensor([[-1.7227e-03, -5.1867e-03, -3.9502e-02,  ..., -1.4248e-03,
          3.6292e-02, -3.7538e-02],
        [ 1.1695e-03,  1.8893e-03, -4.6379e-03,  ...,  4.7110e-03,
          2.5033e-02,  1.2489e-03],
        [-2.4589e-02,  1.8800e-02,  1.7514e-02,  ..., -1.0051e-02,
         -1.1302e-02, -2.3780e-02],
        ...,
        [-2.0393e-02,  1.6247e-02, -1.0629e-02,  ..., -6.9009e-03,
         -2.9384e-03,  2.9257e-03],
        [ 3.4712e-03,  2.0967e-02, -6.0258e-05,  ...,  1.9401e-02,
         -1.6381e-02, -6.7504e-03],
        [ 1.5727e-02, -1.1022e-03, -2.6155e-02,  ..., -1.7345e-02,
         -1.5899e-03,  7.6214e-03]], device='cuda:0')
2025-03-02 06:17:22,654 - mmdet - INFO - lm_head.base_model.model.model.layers.11.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,655 - mmdet - INFO - tensor([[  5],
        [135],
        [185],
        ...,
        [ 72],
        [141],
        [100]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,656 - mmdet - INFO - lm_head.base_model.model.model.layers.11.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,656 - mmdet - INFO - tensor([[ 87],
        [ 45],
        [ 57],
        ...,
        [187],
        [ 68],
        [157]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,658 - mmdet - INFO - lm_head.base_model.model.model.layers.11.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,658 - mmdet - INFO - tensor([[ 47],
        [183],
        [150],
        ...,
        [182],
        [  8],
        [ 79]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,659 - mmdet - INFO - lm_head.base_model.model.model.layers.11.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,659 - mmdet - INFO - tensor([0.3945, 0.3906, 0.3594,  ..., 0.3828, 0.3770, 0.3652], device='cuda:0')
2025-03-02 06:17:22,661 - mmdet - INFO - lm_head.base_model.model.model.layers.11.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,661 - mmdet - INFO - tensor([0.2559, 0.2373, 0.2334,  ..., 0.2500, 0.2500, 0.2480], device='cuda:0')
2025-03-02 06:17:22,663 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,663 - mmdet - INFO - tensor([[ 81],
        [200],
        [211],
        ...,
        [165],
        [116],
        [188]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,665 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,665 - mmdet - INFO - tensor([[198],
        [103],
        [ 80],
        ...,
        [169],
        [105],
        [ 35]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,666 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,666 - mmdet - INFO - tensor([[-0.0098, -0.0165, -0.0428,  ...,  0.0146, -0.0211, -0.0144],
        [ 0.0027, -0.0042, -0.0194,  ...,  0.0166, -0.0041, -0.0293],
        [ 0.0072, -0.0072,  0.0048,  ..., -0.0261, -0.0105, -0.0146],
        ...,
        [ 0.0166,  0.0093,  0.0131,  ..., -0.0197, -0.0540, -0.0163],
        [-0.0098, -0.0081,  0.0018,  ..., -0.0299, -0.0171,  0.0322],
        [-0.0137,  0.0064,  0.0491,  ..., -0.0108,  0.0010, -0.0274]],
       device='cuda:0')
2025-03-02 06:17:22,675 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,675 - mmdet - INFO - tensor([[-0.0270,  0.0163,  0.0273,  ..., -0.0068,  0.0247,  0.0093],
        [-0.0123,  0.0235,  0.0089,  ..., -0.0063, -0.0147,  0.0234],
        [ 0.0313,  0.0041, -0.0069,  ..., -0.0047,  0.0186, -0.0104],
        ...,
        [-0.0416, -0.0063, -0.0245,  ..., -0.0104, -0.0229, -0.0432],
        [ 0.0090,  0.0212, -0.0006,  ...,  0.0101,  0.0315,  0.0040],
        [-0.0316, -0.0140, -0.0189,  ..., -0.0186,  0.0336, -0.0231]],
       device='cuda:0')
2025-03-02 06:17:22,681 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,681 - mmdet - INFO - tensor([[152],
        [137],
        [117],
        ...,
        [201],
        [ 77],
        [163]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,684 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,684 - mmdet - INFO - tensor([[-0.0279, -0.0243, -0.0096,  ..., -0.0108, -0.0243, -0.0140],
        [ 0.0226, -0.0342, -0.0209,  ...,  0.0012,  0.0033, -0.0206],
        [-0.0088,  0.0413,  0.0095,  ..., -0.0216, -0.0058,  0.0144],
        ...,
        [ 0.0113, -0.0223, -0.0026,  ...,  0.0087,  0.0096, -0.0153],
        [-0.0261, -0.0296, -0.0250,  ..., -0.0122,  0.0053, -0.0278],
        [ 0.0531, -0.0038,  0.0051,  ...,  0.0096,  0.0195,  0.0143]],
       device='cuda:0')
2025-03-02 06:17:22,691 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,692 - mmdet - INFO - tensor([[ 0.0236,  0.0487, -0.0176,  ...,  0.0181, -0.0013, -0.0040],
        [ 0.0058,  0.0270, -0.0425,  ..., -0.0147, -0.0195,  0.0296],
        [ 0.0336,  0.0350, -0.0022,  ...,  0.0214,  0.0203,  0.0111],
        ...,
        [-0.0069,  0.0060,  0.0129,  ..., -0.0090, -0.0106,  0.0106],
        [ 0.0136,  0.0115, -0.0112,  ..., -0.0192,  0.0289,  0.0075],
        [ 0.0128, -0.0428, -0.0096,  ...,  0.0321, -0.0208, -0.0073]],
       device='cuda:0')
2025-03-02 06:17:22,698 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,698 - mmdet - INFO - tensor([[233],
        [116],
        [217],
        ...,
        [197],
        [237],
        [ 66]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,701 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,701 - mmdet - INFO - tensor([[ 4.5966e-03, -1.8046e-02,  4.1514e-02,  ...,  2.6857e-02,
         -2.2623e-02,  4.3142e-03],
        [-2.8298e-02, -2.7189e-02, -1.8630e-02,  ...,  8.1429e-03,
         -8.5140e-03, -1.0056e-03],
        [-1.0420e-02, -2.0273e-02,  2.0904e-02,  ..., -2.2093e-02,
          4.5599e-02, -3.3831e-02],
        ...,
        [ 1.3431e-05,  4.8984e-03, -3.0939e-02,  ...,  2.5902e-02,
          1.0828e-02,  3.1344e-03],
        [ 1.6928e-02, -2.4511e-02,  1.4931e-02,  ...,  3.8815e-02,
         -8.9519e-03,  3.1542e-03],
        [ 3.3452e-04,  2.1697e-03, -8.5919e-03,  ..., -1.7235e-02,
         -1.1182e-02, -2.4441e-03]], device='cuda:0')
2025-03-02 06:17:22,708 - mmdet - INFO - lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,708 - mmdet - INFO - tensor([[ 0.0126, -0.0036,  0.0176,  ...,  0.0070,  0.0244,  0.0025],
        [-0.0004,  0.0168,  0.0088,  ..., -0.0052, -0.0081,  0.0177],
        [ 0.0157, -0.0238,  0.0084,  ...,  0.0118, -0.0178, -0.0053],
        ...,
        [ 0.0164,  0.0016, -0.0266,  ..., -0.0065,  0.0393,  0.0262],
        [ 0.0218,  0.0043, -0.0099,  ..., -0.0089,  0.0122,  0.0107],
        [-0.0120,  0.0115, -0.0087,  ..., -0.0072,  0.0049,  0.0188]],
       device='cuda:0')
2025-03-02 06:17:22,717 - mmdet - INFO - lm_head.base_model.model.model.layers.12.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,717 - mmdet - INFO - tensor([[147],
        [147],
        [179],
        ...,
        [116],
        [198],
        [ 83]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,720 - mmdet - INFO - lm_head.base_model.model.model.layers.12.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,720 - mmdet - INFO - tensor([[139],
        [155],
        [153],
        ...,
        [ 91],
        [ 78],
        [ 97]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,721 - mmdet - INFO - lm_head.base_model.model.model.layers.12.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,721 - mmdet - INFO - tensor([[133],
        [ 26],
        [139],
        ...,
        [202],
        [ 64],
        [198]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,723 - mmdet - INFO - lm_head.base_model.model.model.layers.12.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,723 - mmdet - INFO - tensor([0.4043, 0.4023, 0.3691,  ..., 0.3770, 0.3848, 0.3828], device='cuda:0')
2025-03-02 06:17:22,725 - mmdet - INFO - lm_head.base_model.model.model.layers.12.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,725 - mmdet - INFO - tensor([0.2578, 0.2432, 0.2363,  ..., 0.2578, 0.2520, 0.2559], device='cuda:0')
2025-03-02 06:17:22,727 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,727 - mmdet - INFO - tensor([[101],
        [ 63],
        [160],
        ...,
        [166],
        [133],
        [166]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,729 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,729 - mmdet - INFO - tensor([[185],
        [108],
        [ 91],
        ...,
        [136],
        [ 85],
        [ 88]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,730 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,730 - mmdet - INFO - tensor([[-0.0187, -0.0039,  0.0019,  ..., -0.0115,  0.0518,  0.0017],
        [-0.0162,  0.0170, -0.0023,  ...,  0.0002, -0.0096, -0.0017],
        [-0.0124,  0.0160, -0.0285,  ..., -0.0101, -0.0328,  0.0095],
        ...,
        [-0.0207, -0.0065,  0.0022,  ...,  0.0301,  0.0336,  0.0270],
        [-0.0021,  0.0174,  0.0165,  ..., -0.0234,  0.0142,  0.0062],
        [ 0.0303,  0.0150,  0.0048,  ..., -0.0323, -0.0099,  0.0103]],
       device='cuda:0')
2025-03-02 06:17:22,738 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,738 - mmdet - INFO - tensor([[-0.0387,  0.0374,  0.0254,  ...,  0.0057, -0.0046, -0.0170],
        [-0.0093,  0.0064, -0.0186,  ..., -0.0333, -0.0146,  0.0113],
        [-0.0234, -0.0378, -0.0310,  ...,  0.0012, -0.0148,  0.0361],
        ...,
        [-0.0019, -0.0485,  0.0093,  ..., -0.0117, -0.0198, -0.0404],
        [-0.0001,  0.0324,  0.0077,  ...,  0.0438,  0.0293, -0.0286],
        [ 0.0098,  0.0075, -0.0085,  ..., -0.0260, -0.0004, -0.0052]],
       device='cuda:0')
2025-03-02 06:17:22,745 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,745 - mmdet - INFO - tensor([[200],
        [ 77],
        [ 86],
        ...,
        [ 39],
        [ 74],
        [126]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,746 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,746 - mmdet - INFO - tensor([[-8.7343e-03,  1.8884e-03,  2.0315e-02,  ..., -1.8858e-02,
          1.9341e-02,  2.2802e-02],
        [ 3.5626e-02, -3.7907e-03, -1.6462e-02,  ...,  8.8764e-03,
         -1.5826e-02,  5.5534e-02],
        [ 2.3079e-02,  1.7504e-02, -1.5291e-03,  ...,  2.9040e-05,
          4.7731e-03,  2.0304e-02],
        ...,
        [-1.0189e-02, -3.1576e-02, -6.1346e-03,  ...,  2.3340e-02,
          1.4326e-02, -3.3719e-03],
        [ 1.9342e-02, -1.0056e-02,  7.9998e-03,  ..., -2.3177e-03,
          1.8277e-02, -8.5348e-03],
        [ 6.7305e-03,  3.6074e-03, -1.2720e-02,  ..., -7.4736e-03,
          1.4855e-02,  1.7197e-02]], device='cuda:0')
2025-03-02 06:17:22,754 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,754 - mmdet - INFO - tensor([[-0.0009,  0.0230,  0.0036,  ...,  0.0170,  0.0136,  0.0111],
        [ 0.0004, -0.0174,  0.0255,  ...,  0.0181, -0.0004,  0.0072],
        [-0.0274, -0.0008, -0.0128,  ..., -0.0128, -0.0203, -0.0151],
        ...,
        [ 0.0180,  0.0145,  0.0002,  ..., -0.0171, -0.0036, -0.0264],
        [-0.0076, -0.0411,  0.0260,  ...,  0.0098,  0.0324,  0.0326],
        [ 0.0060, -0.0308,  0.0405,  ..., -0.0150, -0.0004,  0.0217]],
       device='cuda:0')
2025-03-02 06:17:22,760 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,760 - mmdet - INFO - tensor([[104],
        [ 99],
        [ 86],
        ...,
        [ 73],
        [109],
        [ 81]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,762 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,762 - mmdet - INFO - tensor([[-0.0187, -0.0141, -0.0024,  ...,  0.0534, -0.0273,  0.0080],
        [-0.0279,  0.0066,  0.0051,  ...,  0.0095, -0.0174, -0.0183],
        [ 0.0101, -0.0031, -0.0165,  ...,  0.0055,  0.0188,  0.0142],
        ...,
        [ 0.0010,  0.0058,  0.0046,  ...,  0.0096,  0.0119, -0.0049],
        [-0.0020, -0.0098, -0.0077,  ...,  0.0158,  0.0270, -0.0158],
        [-0.0046,  0.0406,  0.0179,  ..., -0.0106,  0.0107,  0.0112]],
       device='cuda:0')
2025-03-02 06:17:22,771 - mmdet - INFO - lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,771 - mmdet - INFO - tensor([[-0.0173,  0.0170, -0.0012,  ...,  0.0068, -0.0124, -0.0119],
        [ 0.0051, -0.0032,  0.0262,  ...,  0.0072,  0.0023, -0.0076],
        [ 0.0001,  0.0416, -0.0086,  ..., -0.0184,  0.0293,  0.0065],
        ...,
        [-0.0145, -0.0119,  0.0082,  ..., -0.0052,  0.0102,  0.0124],
        [ 0.0031,  0.0178,  0.0122,  ...,  0.0436, -0.0027,  0.0042],
        [-0.0273, -0.0098,  0.0081,  ..., -0.0122,  0.0127, -0.0028]],
       device='cuda:0')
2025-03-02 06:17:22,778 - mmdet - INFO - lm_head.base_model.model.model.layers.13.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,778 - mmdet - INFO - tensor([[218],
        [ 84],
        [ 57],
        ...,
        [198],
        [ 22],
        [222]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,780 - mmdet - INFO - lm_head.base_model.model.model.layers.13.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,780 - mmdet - INFO - tensor([[ 29],
        [ 86],
        [ 38],
        ...,
        [  3],
        [115],
        [108]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,781 - mmdet - INFO - lm_head.base_model.model.model.layers.13.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,781 - mmdet - INFO - tensor([[ 87],
        [ 88],
        [158],
        ...,
        [ 85],
        [136],
        [141]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,782 - mmdet - INFO - lm_head.base_model.model.model.layers.13.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,782 - mmdet - INFO - tensor([0.4121, 0.4023, 0.3711,  ..., 0.3867, 0.3809, 0.3906], device='cuda:0')
2025-03-02 06:17:22,787 - mmdet - INFO - lm_head.base_model.model.model.layers.13.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,788 - mmdet - INFO - tensor([0.2637, 0.2500, 0.2461,  ..., 0.2637, 0.2656, 0.2598], device='cuda:0')
2025-03-02 06:17:22,790 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,790 - mmdet - INFO - tensor([[ 87],
        [214],
        [ 82],
        ...,
        [125],
        [201],
        [161]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,791 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,791 - mmdet - INFO - tensor([[ 70],
        [168],
        [ 74],
        ...,
        [ 87],
        [175],
        [162]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,792 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,792 - mmdet - INFO - tensor([[-0.0053, -0.0020,  0.0100,  ..., -0.0086,  0.0111, -0.0354],
        [-0.0238,  0.0228,  0.0058,  ...,  0.0151,  0.0328,  0.0222],
        [-0.0400, -0.0079,  0.0148,  ..., -0.0025,  0.0028, -0.0157],
        ...,
        [-0.0047, -0.0223,  0.0247,  ...,  0.0057, -0.0037,  0.0269],
        [ 0.0214,  0.0185, -0.0090,  ...,  0.0145, -0.0205,  0.0084],
        [-0.0515, -0.0223, -0.0134,  ...,  0.0117,  0.0223,  0.0141]],
       device='cuda:0')
2025-03-02 06:17:22,798 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,798 - mmdet - INFO - tensor([[ 0.0189, -0.0059,  0.0062,  ...,  0.0372,  0.0159, -0.0341],
        [-0.0194,  0.0094, -0.0009,  ...,  0.0089,  0.0089, -0.0065],
        [-0.0093,  0.0071, -0.0047,  ..., -0.0076,  0.0046, -0.0209],
        ...,
        [-0.0263,  0.0114, -0.0010,  ...,  0.0183, -0.0012,  0.0164],
        [ 0.0656,  0.0060,  0.0122,  ...,  0.0151, -0.0091,  0.0270],
        [-0.0193,  0.0185,  0.0023,  ...,  0.0312, -0.0071, -0.0109]],
       device='cuda:0')
2025-03-02 06:17:22,808 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,808 - mmdet - INFO - tensor([[152],
        [  5],
        [103],
        ...,
        [182],
        [101],
        [ 92]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,811 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,811 - mmdet - INFO - tensor([[-2.0161e-02,  8.2433e-05, -2.8389e-02,  ..., -6.1467e-03,
          1.2985e-02, -3.8020e-02],
        [ 1.7835e-02, -1.9630e-02,  6.5372e-03,  ...,  9.4888e-03,
         -1.7143e-02, -7.6269e-03],
        [ 2.0647e-02, -2.5559e-02, -2.3357e-02,  ...,  7.7320e-04,
         -3.7964e-02,  2.1743e-02],
        ...,
        [ 1.5573e-02, -2.6253e-02, -1.0057e-02,  ...,  1.8683e-03,
         -1.0164e-02, -4.7795e-03],
        [-4.6642e-03, -1.1826e-02, -2.1450e-04,  ...,  1.3145e-02,
          4.8846e-03,  8.7147e-03],
        [-3.0349e-02, -2.2303e-02, -3.4583e-03,  ...,  1.8689e-02,
          1.5292e-02,  1.3162e-02]], device='cuda:0')
2025-03-02 06:17:22,817 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,817 - mmdet - INFO - tensor([[ 0.0141,  0.0401,  0.0047,  ...,  0.0194,  0.0260, -0.0129],
        [-0.0102,  0.0155, -0.0052,  ...,  0.0116,  0.0078, -0.0001],
        [-0.0282, -0.0199, -0.0089,  ...,  0.0217,  0.0008,  0.0115],
        ...,
        [ 0.0263,  0.0442, -0.0070,  ..., -0.0223, -0.0005,  0.0045],
        [-0.0173,  0.0059,  0.0104,  ...,  0.0135,  0.0168,  0.0081],
        [-0.0142, -0.0241, -0.0179,  ...,  0.0147, -0.0049, -0.0510]],
       device='cuda:0')
2025-03-02 06:17:22,826 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,826 - mmdet - INFO - tensor([[ 73],
        [ 20],
        [156],
        ...,
        [ 45],
        [198],
        [135]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,827 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,828 - mmdet - INFO - tensor([[ 0.0152, -0.0175,  0.0329,  ..., -0.0023, -0.0003, -0.0386],
        [-0.0316, -0.0334, -0.0079,  ...,  0.0035,  0.0210,  0.0035],
        [ 0.0017,  0.0065,  0.0006,  ..., -0.0374,  0.0047,  0.0024],
        ...,
        [-0.0248, -0.0111,  0.0607,  ...,  0.0256, -0.0069, -0.0093],
        [-0.0058, -0.0185, -0.0144,  ..., -0.0015, -0.0059, -0.0080],
        [-0.0337,  0.0136,  0.0264,  ..., -0.0004,  0.0076,  0.0089]],
       device='cuda:0')
2025-03-02 06:17:22,834 - mmdet - INFO - lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,834 - mmdet - INFO - tensor([[ 7.2707e-03,  6.5291e-03, -6.7822e-03,  ...,  3.9543e-03,
         -1.5644e-02, -1.0548e-02],
        [ 3.4444e-02,  1.4318e-02, -1.6216e-02,  ..., -1.5142e-02,
          2.1589e-03, -2.0976e-02],
        [ 1.9930e-02,  1.0078e-02,  1.9028e-02,  ...,  1.2830e-02,
         -1.3992e-02,  1.1762e-02],
        ...,
        [ 2.3724e-02,  9.3579e-03, -2.6837e-02,  ..., -9.5672e-03,
         -4.5485e-03,  5.4586e-03],
        [-3.2353e-03,  1.1286e-02, -4.6147e-05,  ..., -2.5491e-02,
         -2.0966e-02,  4.3168e-02],
        [-1.1324e-02, -3.8435e-02, -5.2347e-03,  ..., -1.8873e-02,
         -2.0927e-02, -3.9338e-02]], device='cuda:0')
2025-03-02 06:17:22,843 - mmdet - INFO - lm_head.base_model.model.model.layers.14.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,843 - mmdet - INFO - tensor([[58],
        [72],
        [35],
        ...,
        [54],
        [37],
        [29]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,845 - mmdet - INFO - lm_head.base_model.model.model.layers.14.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,845 - mmdet - INFO - tensor([[121],
        [168],
        [ 87],
        ...,
        [ 34],
        [ 91],
        [ 58]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,846 - mmdet - INFO - lm_head.base_model.model.model.layers.14.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,846 - mmdet - INFO - tensor([[155],
        [133],
        [201],
        ...,
        [  2],
        [ 65],
        [171]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,847 - mmdet - INFO - lm_head.base_model.model.model.layers.14.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,847 - mmdet - INFO - tensor([0.4160, 0.4297, 0.3789,  ..., 0.4062, 0.3984, 0.3887], device='cuda:0')
2025-03-02 06:17:22,853 - mmdet - INFO - lm_head.base_model.model.model.layers.14.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,853 - mmdet - INFO - tensor([0.2734, 0.2617, 0.2598,  ..., 0.2773, 0.2734, 0.2695], device='cuda:0')
2025-03-02 06:17:22,855 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,855 - mmdet - INFO - tensor([[ 82],
        [ 88],
        [210],
        ...,
        [ 93],
        [183],
        [ 69]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,857 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,857 - mmdet - INFO - tensor([[214],
        [ 79],
        [244],
        ...,
        [121],
        [ 39],
        [ 87]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,858 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,858 - mmdet - INFO - tensor([[-0.0277,  0.0235, -0.0254,  ...,  0.0202,  0.0416,  0.0003],
        [-0.0313,  0.0025, -0.0191,  ..., -0.0135,  0.0024, -0.0009],
        [ 0.0453,  0.0003,  0.0195,  ..., -0.0113, -0.0189,  0.0489],
        ...,
        [-0.0226, -0.0452, -0.0119,  ...,  0.0301, -0.0078, -0.0234],
        [ 0.0148, -0.0269, -0.0174,  ...,  0.0518,  0.0370,  0.0034],
        [-0.0083, -0.0345, -0.0079,  ...,  0.0254,  0.0200,  0.0079]],
       device='cuda:0')
2025-03-02 06:17:22,864 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,864 - mmdet - INFO - tensor([[ 0.0146,  0.0139,  0.0183,  ...,  0.0135,  0.0191,  0.0181],
        [ 0.0238,  0.0067, -0.0461,  ..., -0.0231, -0.0069,  0.0002],
        [ 0.0001,  0.0192, -0.0052,  ..., -0.0066,  0.0398,  0.0211],
        ...,
        [ 0.0113,  0.0399, -0.0011,  ..., -0.0110,  0.0257, -0.0061],
        [ 0.0189,  0.0245, -0.0218,  ..., -0.0012, -0.0039,  0.0051],
        [ 0.0202, -0.0144,  0.0091,  ...,  0.0447, -0.0169, -0.0032]],
       device='cuda:0')
2025-03-02 06:17:22,872 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,872 - mmdet - INFO - tensor([[151],
        [150],
        [158],
        ...,
        [199],
        [178],
        [121]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,874 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,874 - mmdet - INFO - tensor([[-0.0290,  0.0170, -0.0306,  ...,  0.0144, -0.0043, -0.0018],
        [ 0.0163, -0.0191, -0.0276,  ..., -0.0076,  0.0179,  0.0063],
        [ 0.0396,  0.0067,  0.0366,  ...,  0.0010,  0.0056, -0.0072],
        ...,
        [-0.0081,  0.0242,  0.0112,  ...,  0.0294,  0.0185,  0.0228],
        [-0.0073, -0.0066, -0.0186,  ..., -0.0299, -0.0114,  0.0257],
        [-0.0055,  0.0113, -0.0001,  ...,  0.0088,  0.0061,  0.0235]],
       device='cuda:0')
2025-03-02 06:17:22,879 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,879 - mmdet - INFO - tensor([[ 0.0148,  0.0080, -0.0283,  ..., -0.0054,  0.0022, -0.0230],
        [ 0.0104, -0.0062, -0.0286,  ...,  0.0139, -0.0191,  0.0019],
        [-0.0213,  0.0159,  0.0147,  ...,  0.0386,  0.0013, -0.0090],
        ...,
        [-0.0016,  0.0081, -0.0001,  ..., -0.0105, -0.0021, -0.0097],
        [-0.0053, -0.0660, -0.0125,  ...,  0.0277, -0.0106,  0.0027],
        [-0.0111,  0.0117, -0.0148,  ..., -0.0244,  0.0004,  0.0034]],
       device='cuda:0')
2025-03-02 06:17:22,888 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,888 - mmdet - INFO - tensor([[137],
        [ 48],
        [ 45],
        ...,
        [135],
        [149],
        [ 17]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,890 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,890 - mmdet - INFO - tensor([[-3.2997e-04, -1.1082e-02,  8.1512e-03,  ..., -3.7611e-02,
         -8.3959e-03,  5.6606e-03],
        [ 3.6505e-03, -1.5731e-02,  1.6860e-02,  ...,  1.1641e-02,
         -1.8465e-03, -3.8187e-02],
        [-8.4017e-03,  2.3620e-03,  2.3864e-02,  ..., -5.2810e-02,
          4.5733e-02, -6.3167e-05],
        ...,
        [ 1.1705e-02, -4.0119e-03,  2.0899e-03,  ..., -4.2346e-03,
          4.6106e-02,  2.5789e-03],
        [ 1.8941e-03,  1.4938e-02, -1.8305e-02,  ..., -1.1376e-02,
         -4.1446e-03, -8.6377e-03],
        [ 2.0463e-02,  2.1601e-02,  9.7303e-03,  ...,  2.3696e-02,
          1.2498e-02,  3.6692e-03]], device='cuda:0')
2025-03-02 06:17:22,896 - mmdet - INFO - lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,896 - mmdet - INFO - tensor([[ 4.8011e-03,  2.8167e-02,  1.6829e-02,  ..., -2.0142e-02,
          1.4431e-02, -2.4424e-02],
        [-1.8867e-02, -2.5077e-02, -2.2080e-02,  ...,  1.2305e-02,
          3.4292e-02,  3.8093e-03],
        [-2.5905e-05, -1.2697e-02, -9.1066e-03,  ...,  3.3258e-02,
          2.1444e-02,  1.2386e-02],
        ...,
        [-3.9268e-02, -1.9701e-02, -5.4354e-02,  ..., -1.8434e-02,
         -6.8706e-03, -3.4508e-02],
        [-1.6819e-02, -1.0787e-02,  1.1390e-02,  ...,  4.4081e-02,
          3.8004e-03, -1.2750e-02],
        [-4.5341e-03,  4.1576e-03, -2.0525e-02,  ..., -7.5408e-03,
         -1.2146e-02,  2.6220e-02]], device='cuda:0')
2025-03-02 06:17:22,904 - mmdet - INFO - lm_head.base_model.model.model.layers.15.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,904 - mmdet - INFO - tensor([[ 78],
        [ 68],
        [106],
        ...,
        [  7],
        [ 87],
        [121]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,906 - mmdet - INFO - lm_head.base_model.model.model.layers.15.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,906 - mmdet - INFO - tensor([[ 84],
        [199],
        [ 34],
        ...,
        [ 52],
        [216],
        [ 70]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,907 - mmdet - INFO - lm_head.base_model.model.model.layers.15.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,907 - mmdet - INFO - tensor([[ 67],
        [ 21],
        [105],
        ...,
        [196],
        [132],
        [ 34]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,908 - mmdet - INFO - lm_head.base_model.model.model.layers.15.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,908 - mmdet - INFO - tensor([0.4082, 0.4023, 0.3770,  ..., 0.3848, 0.3848, 0.3906], device='cuda:0')
2025-03-02 06:17:22,910 - mmdet - INFO - lm_head.base_model.model.model.layers.15.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,910 - mmdet - INFO - tensor([0.2852, 0.2715, 0.2734,  ..., 0.2852, 0.2832, 0.2812], device='cuda:0')
2025-03-02 06:17:22,913 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,913 - mmdet - INFO - tensor([[153],
        [ 34],
        [224],
        ...,
        [122],
        [ 54],
        [ 53]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,914 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,914 - mmdet - INFO - tensor([[ 59],
        [167],
        [125],
        ...,
        [ 71],
        [119],
        [ 92]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,915 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,916 - mmdet - INFO - tensor([[ 2.2682e-02,  2.0369e-02,  4.0904e-03,  ...,  6.5547e-03,
          7.8538e-03, -4.8652e-03],
        [-1.2752e-02,  1.3139e-02, -1.3820e-02,  ..., -4.3662e-03,
          1.8511e-02, -1.6008e-02],
        [ 1.0656e-02, -1.5929e-02, -1.7399e-02,  ..., -7.4338e-03,
         -9.7683e-03, -2.7784e-02],
        ...,
        [ 7.2887e-03, -2.3380e-02, -1.6018e-02,  ...,  5.4883e-03,
         -2.4834e-02, -1.6302e-02],
        [ 7.5400e-03,  2.1681e-02,  3.2365e-02,  ..., -2.5774e-05,
         -2.5234e-02, -1.3058e-02],
        [ 8.8826e-03,  2.1034e-02, -4.0401e-02,  ..., -1.1039e-02,
          2.1699e-03, -8.2025e-03]], device='cuda:0')
2025-03-02 06:17:22,924 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,924 - mmdet - INFO - tensor([[ 0.0016, -0.0030, -0.0211,  ...,  0.0141,  0.0131, -0.0365],
        [-0.0105, -0.0168, -0.0379,  ...,  0.0417, -0.0460,  0.0083],
        [-0.0326, -0.0124,  0.0186,  ...,  0.0237, -0.0187, -0.0169],
        ...,
        [ 0.0110, -0.0090, -0.0257,  ...,  0.0051, -0.0457, -0.0078],
        [ 0.0110, -0.0267, -0.0036,  ...,  0.0197,  0.0077, -0.0341],
        [ 0.0166, -0.0039, -0.0093,  ..., -0.0070,  0.0110, -0.0121]],
       device='cuda:0')
2025-03-02 06:17:22,930 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,930 - mmdet - INFO - tensor([[ 88],
        [ 83],
        [ 77],
        ...,
        [126],
        [165],
        [113]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,932 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,932 - mmdet - INFO - tensor([[ 0.0155, -0.0105, -0.0005,  ..., -0.0178, -0.0219,  0.0200],
        [ 0.0074,  0.0069,  0.0010,  ...,  0.0049,  0.0081,  0.0373],
        [ 0.0064,  0.0114,  0.0092,  ..., -0.0094,  0.0359, -0.0069],
        ...,
        [ 0.0252, -0.0221, -0.0002,  ..., -0.0021,  0.0283, -0.0173],
        [-0.0444, -0.0128,  0.0008,  ..., -0.0049, -0.0179,  0.0015],
        [ 0.0020,  0.0345,  0.0229,  ..., -0.0104,  0.0058,  0.0044]],
       device='cuda:0')
2025-03-02 06:17:22,941 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,941 - mmdet - INFO - tensor([[ 0.0068, -0.0085, -0.0040,  ...,  0.0062, -0.0010,  0.0167],
        [ 0.0175,  0.0098, -0.0429,  ..., -0.0144, -0.0053, -0.0050],
        [ 0.0241, -0.0058,  0.0095,  ...,  0.0308, -0.0213, -0.0154],
        ...,
        [-0.0293, -0.0012, -0.0069,  ..., -0.0205,  0.0099,  0.0254],
        [-0.0028,  0.0126, -0.0399,  ..., -0.0013,  0.0252,  0.0159],
        [-0.0024, -0.0246,  0.0068,  ...,  0.0080,  0.0026, -0.0366]],
       device='cuda:0')
2025-03-02 06:17:22,947 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,947 - mmdet - INFO - tensor([[231],
        [ 70],
        [ 57],
        ...,
        [ 88],
        [214],
        [104]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,950 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,950 - mmdet - INFO - tensor([[-1.3665e-02, -1.3803e-02,  1.0805e-02,  ..., -4.6052e-02,
         -1.2156e-03, -7.2877e-03],
        [-8.4401e-03, -1.4268e-03,  1.1764e-02,  ..., -2.5782e-03,
         -1.9565e-02, -6.5650e-03],
        [ 2.2255e-02,  5.2713e-03,  2.8044e-03,  ...,  1.4184e-03,
         -1.8218e-02, -1.2173e-02],
        ...,
        [ 4.9133e-03, -4.8130e-03, -2.7909e-03,  ...,  6.3635e-03,
         -2.3406e-02, -1.6606e-02],
        [-1.7343e-02, -4.5587e-03, -2.4119e-02,  ..., -3.6539e-02,
         -1.4433e-02,  1.6136e-02],
        [-1.6462e-02, -6.5225e-05,  4.5035e-03,  ...,  3.1542e-03,
          1.6506e-02, -4.1096e-02]], device='cuda:0')
2025-03-02 06:17:22,959 - mmdet - INFO - lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,959 - mmdet - INFO - tensor([[-0.0253, -0.0298,  0.0162,  ...,  0.0058,  0.0212,  0.0165],
        [ 0.0317,  0.0285,  0.0120,  ..., -0.0092,  0.0045, -0.0141],
        [ 0.0355, -0.0570,  0.0426,  ..., -0.0103,  0.0004, -0.0093],
        ...,
        [ 0.0031, -0.0211, -0.0461,  ...,  0.0122,  0.0097, -0.0308],
        [ 0.0042,  0.0315,  0.0126,  ..., -0.0128, -0.0109,  0.0070],
        [-0.0262,  0.0306,  0.0061,  ...,  0.0172, -0.0009,  0.0037]],
       device='cuda:0')
2025-03-02 06:17:22,966 - mmdet - INFO - lm_head.base_model.model.model.layers.16.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,966 - mmdet - INFO - tensor([[ 51],
        [ 46],
        [ 45],
        ...,
        [120],
        [ 97],
        [197]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,969 - mmdet - INFO - lm_head.base_model.model.model.layers.16.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,969 - mmdet - INFO - tensor([[ 26],
        [141],
        [111],
        ...,
        [125],
        [183],
        [ 51]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,971 - mmdet - INFO - lm_head.base_model.model.model.layers.16.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,971 - mmdet - INFO - tensor([[ 54],
        [188],
        [ 53],
        ...,
        [135],
        [141],
        [132]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,972 - mmdet - INFO - lm_head.base_model.model.model.layers.16.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,972 - mmdet - INFO - tensor([0.4102, 0.4180, 0.3867,  ..., 0.3867, 0.4023, 0.4023], device='cuda:0')
2025-03-02 06:17:22,976 - mmdet - INFO - lm_head.base_model.model.model.layers.16.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:22,976 - mmdet - INFO - tensor([0.3027, 0.2891, 0.2930,  ..., 0.3008, 0.3086, 0.2969], device='cuda:0')
2025-03-02 06:17:22,980 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,980 - mmdet - INFO - tensor([[ 34],
        [199],
        [166],
        ...,
        [216],
        [219],
        [125]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,983 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:22,983 - mmdet - INFO - tensor([[ 57],
        [153],
        [194],
        ...,
        [182],
        [ 58],
        [166]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:22,986 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,986 - mmdet - INFO - tensor([[ 0.0241, -0.0255,  0.0453,  ..., -0.0007, -0.0109, -0.0342],
        [-0.0058, -0.0035, -0.0053,  ...,  0.0397, -0.0251, -0.0008],
        [-0.0076, -0.0081,  0.0028,  ...,  0.0254,  0.0018,  0.0175],
        ...,
        [ 0.0200, -0.0065,  0.0056,  ...,  0.0040,  0.0097, -0.0265],
        [-0.0393, -0.0167,  0.0057,  ...,  0.0061, -0.0048, -0.0034],
        [ 0.0335,  0.0120, -0.0054,  ...,  0.0020,  0.0140,  0.0044]],
       device='cuda:0')
2025-03-02 06:17:22,997 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:22,997 - mmdet - INFO - tensor([[-0.0363,  0.0029,  0.0116,  ..., -0.0356,  0.0158, -0.0360],
        [-0.0299,  0.0064, -0.0117,  ...,  0.0279, -0.0374, -0.0137],
        [ 0.0229,  0.0073, -0.0235,  ..., -0.0324, -0.0140,  0.0079],
        ...,
        [ 0.0003, -0.0096, -0.0027,  ..., -0.0292,  0.0213,  0.0190],
        [ 0.0296,  0.0099, -0.0130,  ...,  0.0234, -0.0047, -0.0255],
        [ 0.0003,  0.0031,  0.0465,  ..., -0.0391, -0.0123, -0.0246]],
       device='cuda:0')
2025-03-02 06:17:23,007 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,007 - mmdet - INFO - tensor([[ 73],
        [155],
        [ 86],
        ...,
        [141],
        [170],
        [170]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,009 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,009 - mmdet - INFO - tensor([[-0.0221,  0.0195, -0.0082,  ...,  0.0002,  0.0350,  0.0064],
        [ 0.0118, -0.0344, -0.0130,  ...,  0.0075,  0.0254,  0.0091],
        [-0.0185,  0.0013,  0.0015,  ...,  0.0072,  0.0164, -0.0333],
        ...,
        [ 0.0068,  0.0551,  0.0315,  ...,  0.0120, -0.0143,  0.0149],
        [-0.0117,  0.0056,  0.0022,  ..., -0.0098,  0.0362,  0.0127],
        [ 0.0016, -0.0099,  0.0060,  ..., -0.0166,  0.0193,  0.0160]],
       device='cuda:0')
2025-03-02 06:17:23,017 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,017 - mmdet - INFO - tensor([[ 0.0178,  0.0228, -0.0180,  ...,  0.0057,  0.0011,  0.0193],
        [-0.0222,  0.0036,  0.0012,  ..., -0.0124, -0.0162,  0.0103],
        [-0.0205, -0.0410, -0.0170,  ...,  0.0302,  0.0181, -0.0086],
        ...,
        [ 0.0006,  0.0056, -0.0141,  ..., -0.0329, -0.0154, -0.0248],
        [-0.0067, -0.0022,  0.0368,  ..., -0.0290, -0.0223, -0.0050],
        [-0.0115, -0.0231,  0.0060,  ..., -0.0006, -0.0310,  0.0138]],
       device='cuda:0')
2025-03-02 06:17:23,027 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,027 - mmdet - INFO - tensor([[101],
        [148],
        [ 87],
        ...,
        [ 38],
        [ 47],
        [ 28]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,029 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,029 - mmdet - INFO - tensor([[-0.0512,  0.0013, -0.0069,  ..., -0.0198,  0.0315, -0.0139],
        [ 0.0179,  0.0379,  0.0061,  ..., -0.0050,  0.0170, -0.0235],
        [ 0.0209,  0.0109, -0.0019,  ..., -0.0201, -0.0191,  0.0225],
        ...,
        [-0.0100,  0.0076,  0.0127,  ...,  0.0157, -0.0038, -0.0186],
        [-0.0003,  0.0004, -0.0154,  ..., -0.0013,  0.0554,  0.0338],
        [-0.0130, -0.0083,  0.0089,  ...,  0.0099,  0.0022, -0.0266]],
       device='cuda:0')
2025-03-02 06:17:23,039 - mmdet - INFO - lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,039 - mmdet - INFO - tensor([[ 0.0006, -0.0127, -0.0254,  ...,  0.0120, -0.0036, -0.0266],
        [ 0.0102, -0.0293, -0.0028,  ...,  0.0275,  0.0133, -0.0040],
        [-0.0046, -0.0329, -0.0117,  ..., -0.0150, -0.0123, -0.0014],
        ...,
        [ 0.0056,  0.0063,  0.0277,  ...,  0.0150, -0.0511,  0.0136],
        [ 0.0040, -0.0182,  0.0221,  ..., -0.0151, -0.0093, -0.0224],
        [-0.0526,  0.0339, -0.0342,  ..., -0.0120,  0.0261, -0.0087]],
       device='cuda:0')
2025-03-02 06:17:23,047 - mmdet - INFO - lm_head.base_model.model.model.layers.17.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,047 - mmdet - INFO - tensor([[ 44],
        [171],
        [169],
        ...,
        [ 87],
        [ 84],
        [150]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,050 - mmdet - INFO - lm_head.base_model.model.model.layers.17.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,050 - mmdet - INFO - tensor([[ 82],
        [ 84],
        [ 55],
        ...,
        [ 81],
        [184],
        [  3]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,053 - mmdet - INFO - lm_head.base_model.model.model.layers.17.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,053 - mmdet - INFO - tensor([[195],
        [157],
        [244],
        ...,
        [104],
        [ 65],
        [ 88]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,055 - mmdet - INFO - lm_head.base_model.model.model.layers.17.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,055 - mmdet - INFO - tensor([0.4258, 0.4238, 0.4023,  ..., 0.4199, 0.4219, 0.4062], device='cuda:0')
2025-03-02 06:17:23,057 - mmdet - INFO - lm_head.base_model.model.model.layers.17.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,057 - mmdet - INFO - tensor([0.3203, 0.3145, 0.3105,  ..., 0.3203, 0.3223, 0.3145], device='cuda:0')
2025-03-02 06:17:23,060 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,060 - mmdet - INFO - tensor([[153],
        [141],
        [  8],
        ...,
        [ 67],
        [203],
        [209]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,061 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,061 - mmdet - INFO - tensor([[ 78],
        [ 66],
        [ 70],
        ...,
        [145],
        [156],
        [ 83]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,063 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,063 - mmdet - INFO - tensor([[ 0.0252,  0.0173,  0.0066,  ..., -0.0009, -0.0029, -0.0114],
        [-0.0131,  0.0108, -0.0005,  ...,  0.0275, -0.0012,  0.0092],
        [-0.0161, -0.0010,  0.0122,  ..., -0.0196,  0.0219, -0.0167],
        ...,
        [-0.0279, -0.0088,  0.0124,  ..., -0.0162,  0.0148,  0.0082],
        [-0.0089,  0.0153, -0.0118,  ...,  0.0093,  0.0128,  0.0047],
        [ 0.0133,  0.0065,  0.0183,  ..., -0.0254,  0.0076,  0.0378]],
       device='cuda:0')
2025-03-02 06:17:23,073 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,073 - mmdet - INFO - tensor([[-1.5357e-02, -5.4909e-04,  2.3493e-02,  ..., -6.1874e-04,
          5.5087e-04,  1.4760e-02],
        [ 4.2919e-02,  6.2399e-03, -5.9892e-03,  ..., -1.4205e-02,
          2.4292e-02,  1.3272e-02],
        [-4.0170e-02,  4.5514e-03, -1.6174e-03,  ..., -1.9925e-02,
          4.5045e-03,  1.7839e-02],
        ...,
        [-2.8821e-02, -7.2159e-03, -9.0292e-03,  ..., -1.6019e-02,
         -5.2819e-03, -1.0625e-02],
        [-5.1322e-02, -1.3044e-02, -2.7377e-03,  ..., -2.8282e-02,
          3.3784e-03,  2.9675e-04],
        [-6.9154e-03,  1.1092e-05,  3.6639e-02,  ..., -1.3615e-02,
          1.1349e-02, -1.1959e-02]], device='cuda:0')
2025-03-02 06:17:23,081 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,081 - mmdet - INFO - tensor([[ 43],
        [ 53],
        [119],
        ...,
        [ 44],
        [150],
        [ 54]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,083 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,084 - mmdet - INFO - tensor([[ 0.0001,  0.0249,  0.0216,  ...,  0.0254, -0.0305,  0.0180],
        [-0.0149,  0.0046, -0.0228,  ..., -0.0137, -0.0107, -0.0234],
        [-0.0125, -0.0225, -0.0089,  ...,  0.0132, -0.0234,  0.0082],
        ...,
        [-0.0326,  0.0126,  0.0226,  ..., -0.0083, -0.0220,  0.0383],
        [ 0.0467, -0.0023, -0.0011,  ..., -0.0043,  0.0152, -0.0057],
        [ 0.0111, -0.0222,  0.0233,  ...,  0.0037,  0.0042,  0.0101]],
       device='cuda:0')
2025-03-02 06:17:23,094 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,094 - mmdet - INFO - tensor([[-0.0050,  0.0133,  0.0289,  ...,  0.0052, -0.0120,  0.0118],
        [-0.0033, -0.0025, -0.0102,  ...,  0.0091,  0.0217, -0.0176],
        [ 0.0216,  0.0067,  0.0027,  ...,  0.0019, -0.0018, -0.0052],
        ...,
        [-0.0053,  0.0062,  0.0022,  ...,  0.0104,  0.0038, -0.0014],
        [ 0.0076, -0.0092, -0.0110,  ...,  0.0092,  0.0085,  0.0024],
        [-0.0156, -0.0193,  0.0164,  ...,  0.0101,  0.0086,  0.0361]],
       device='cuda:0')
2025-03-02 06:17:23,104 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,104 - mmdet - INFO - tensor([[ 58],
        [ 68],
        [206],
        ...,
        [ 64],
        [211],
        [162]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,107 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,107 - mmdet - INFO - tensor([[ 0.0098,  0.0129, -0.0204,  ...,  0.0142, -0.0276, -0.0054],
        [-0.0053, -0.0124,  0.0062,  ...,  0.0533, -0.0036,  0.0300],
        [-0.0037,  0.0248,  0.0146,  ..., -0.0021, -0.0041, -0.0173],
        ...,
        [-0.0025,  0.0243,  0.0074,  ..., -0.0144,  0.0150,  0.0170],
        [-0.0226, -0.0120, -0.0129,  ...,  0.0106, -0.0159, -0.0225],
        [-0.0216, -0.0555,  0.0328,  ..., -0.0173,  0.0158, -0.0225]],
       device='cuda:0')
2025-03-02 06:17:23,114 - mmdet - INFO - lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,114 - mmdet - INFO - tensor([[-0.0148, -0.0271,  0.0047,  ..., -0.0174, -0.0665, -0.0309],
        [ 0.0167,  0.0324,  0.0157,  ..., -0.0278,  0.0245,  0.0084],
        [ 0.0163,  0.0405, -0.0194,  ...,  0.0045,  0.0257, -0.0296],
        ...,
        [ 0.0106,  0.0160, -0.0127,  ...,  0.0347, -0.0526,  0.0139],
        [-0.0192, -0.0193,  0.0036,  ..., -0.0263, -0.0040,  0.0105],
        [-0.0124,  0.0130, -0.0191,  ..., -0.0088,  0.0302, -0.0080]],
       device='cuda:0')
2025-03-02 06:17:23,123 - mmdet - INFO - lm_head.base_model.model.model.layers.18.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,123 - mmdet - INFO - tensor([[166],
        [166],
        [115],
        ...,
        [ 22],
        [105],
        [104]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,125 - mmdet - INFO - lm_head.base_model.model.model.layers.18.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,125 - mmdet - INFO - tensor([[153],
        [236],
        [179],
        ...,
        [ 98],
        [164],
        [186]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,127 - mmdet - INFO - lm_head.base_model.model.model.layers.18.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,127 - mmdet - INFO - tensor([[218],
        [ 31],
        [127],
        ...,
        [106],
        [213],
        [186]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,128 - mmdet - INFO - lm_head.base_model.model.model.layers.18.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,128 - mmdet - INFO - tensor([0.4492, 0.4492, 0.4297,  ..., 0.4336, 0.4414, 0.4258], device='cuda:0')
2025-03-02 06:17:23,131 - mmdet - INFO - lm_head.base_model.model.model.layers.18.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,131 - mmdet - INFO - tensor([0.3398, 0.3340, 0.3301,  ..., 0.3359, 0.3398, 0.3359], device='cuda:0')
2025-03-02 06:17:23,136 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,136 - mmdet - INFO - tensor([[137],
        [ 66],
        [154],
        ...,
        [200],
        [214],
        [ 37]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,138 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,138 - mmdet - INFO - tensor([[219],
        [133],
        [ 53],
        ...,
        [200],
        [ 85],
        [156]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,140 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,140 - mmdet - INFO - tensor([[-0.0202,  0.0203,  0.0273,  ..., -0.0045,  0.0181, -0.0002],
        [-0.0054,  0.0379, -0.0102,  ..., -0.0277,  0.0039,  0.0004],
        [ 0.0014,  0.0023,  0.0345,  ..., -0.0085,  0.0111,  0.0218],
        ...,
        [ 0.0183, -0.0322,  0.0444,  ...,  0.0128,  0.0083, -0.0072],
        [ 0.0069,  0.0212, -0.0105,  ...,  0.0163,  0.0024,  0.0166],
        [ 0.0347,  0.0047,  0.0244,  ..., -0.0225, -0.0323, -0.0301]],
       device='cuda:0')
2025-03-02 06:17:23,147 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,148 - mmdet - INFO - tensor([[-0.0113,  0.0272,  0.0060,  ..., -0.0246, -0.0272,  0.0322],
        [ 0.0117,  0.0188, -0.0126,  ...,  0.0085,  0.0371,  0.0014],
        [ 0.0328,  0.0091,  0.0075,  ..., -0.0068, -0.0066, -0.0219],
        ...,
        [ 0.0185, -0.0045, -0.0026,  ...,  0.0116, -0.0005,  0.0212],
        [ 0.0020, -0.0018, -0.0052,  ...,  0.0292, -0.0042, -0.0073],
        [ 0.0055, -0.0223,  0.0065,  ..., -0.0200,  0.0101,  0.0048]],
       device='cuda:0')
2025-03-02 06:17:23,159 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,159 - mmdet - INFO - tensor([[134],
        [102],
        [154],
        ...,
        [121],
        [130],
        [ 75]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,161 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,161 - mmdet - INFO - tensor([[-0.0151,  0.0097, -0.0106,  ..., -0.0259, -0.0059,  0.0041],
        [ 0.0105, -0.0009,  0.0025,  ..., -0.0142, -0.0310, -0.0125],
        [ 0.0158,  0.0117, -0.0176,  ..., -0.0105,  0.0024,  0.0570],
        ...,
        [ 0.0089, -0.0246,  0.0188,  ...,  0.0286, -0.0097, -0.0105],
        [-0.0011,  0.0080, -0.0047,  ..., -0.0267,  0.0023,  0.0006],
        [ 0.0007,  0.0127, -0.0083,  ..., -0.0084, -0.0066,  0.0164]],
       device='cuda:0')
2025-03-02 06:17:23,171 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,171 - mmdet - INFO - tensor([[-0.0014, -0.0069, -0.0128,  ...,  0.0348, -0.0094,  0.0169],
        [-0.0045,  0.0235,  0.0028,  ..., -0.0068, -0.0128, -0.0189],
        [ 0.0033, -0.0086, -0.0199,  ...,  0.0092,  0.0068, -0.0070],
        ...,
        [ 0.0103,  0.0312, -0.0041,  ...,  0.0050, -0.0083,  0.0203],
        [ 0.0218,  0.0264, -0.0159,  ..., -0.0150,  0.0327,  0.0205],
        [ 0.0114,  0.0078,  0.0098,  ...,  0.0223,  0.0129, -0.0132]],
       device='cuda:0')
2025-03-02 06:17:23,178 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,178 - mmdet - INFO - tensor([[176],
        [195],
        [109],
        ...,
        [212],
        [195],
        [ 75]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,180 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,180 - mmdet - INFO - tensor([[-0.0103, -0.0144,  0.0261,  ...,  0.0090,  0.0075, -0.0250],
        [-0.0217, -0.0005,  0.0139,  ...,  0.0064,  0.0109, -0.0068],
        [-0.0019,  0.0185, -0.0048,  ...,  0.0266, -0.0256,  0.0228],
        ...,
        [-0.0292, -0.0491, -0.0229,  ..., -0.0182, -0.0099,  0.0188],
        [ 0.0450, -0.0221, -0.0160,  ..., -0.0120,  0.0226, -0.0195],
        [-0.0110,  0.0205,  0.0180,  ..., -0.0367, -0.0231, -0.0245]],
       device='cuda:0')
2025-03-02 06:17:23,190 - mmdet - INFO - lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,190 - mmdet - INFO - tensor([[-0.0233,  0.0109,  0.0047,  ...,  0.0138,  0.0114, -0.0140],
        [-0.0035, -0.0146, -0.0151,  ...,  0.0191, -0.0202,  0.0343],
        [-0.0005,  0.0018, -0.0165,  ..., -0.0015,  0.0017, -0.0141],
        ...,
        [-0.0078,  0.0012,  0.0342,  ...,  0.0123, -0.0216,  0.0161],
        [-0.0032,  0.0110,  0.0025,  ..., -0.0092, -0.0052,  0.0022],
        [-0.0302, -0.0229, -0.0065,  ...,  0.0062, -0.0030, -0.0008]],
       device='cuda:0')
2025-03-02 06:17:23,198 - mmdet - INFO - lm_head.base_model.model.model.layers.19.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,198 - mmdet - INFO - tensor([[ 73],
        [153],
        [163],
        ...,
        [135],
        [ 87],
        [152]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,201 - mmdet - INFO - lm_head.base_model.model.model.layers.19.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,201 - mmdet - INFO - tensor([[114],
        [216],
        [ 59],
        ...,
        [  6],
        [102],
        [121]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,204 - mmdet - INFO - lm_head.base_model.model.model.layers.19.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,204 - mmdet - INFO - tensor([[ 98],
        [150],
        [118],
        ...,
        [236],
        [ 87],
        [153]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,206 - mmdet - INFO - lm_head.base_model.model.model.layers.19.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,206 - mmdet - INFO - tensor([0.4531, 0.4551, 0.4395,  ..., 0.4297, 0.4316, 0.4395], device='cuda:0')
2025-03-02 06:17:23,208 - mmdet - INFO - lm_head.base_model.model.model.layers.19.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,208 - mmdet - INFO - tensor([0.3555, 0.3398, 0.3438,  ..., 0.3496, 0.3516, 0.3477], device='cuda:0')
2025-03-02 06:17:23,210 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,210 - mmdet - INFO - tensor([[133],
        [226],
        [228],
        ...,
        [159],
        [181],
        [102]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,212 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,212 - mmdet - INFO - tensor([[ 91],
        [178],
        [101],
        ...,
        [135],
        [ 27],
        [ 62]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,213 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,213 - mmdet - INFO - tensor([[ 0.0365, -0.0009,  0.0139,  ..., -0.0177, -0.0352, -0.0032],
        [-0.0210, -0.0103, -0.0153,  ...,  0.0192, -0.0180,  0.0015],
        [ 0.0285,  0.0030, -0.0067,  ...,  0.0172, -0.0051,  0.0111],
        ...,
        [ 0.0004,  0.0247, -0.0240,  ..., -0.0250,  0.0162,  0.0149],
        [-0.0070, -0.0057,  0.0219,  ...,  0.0003, -0.0159, -0.0081],
        [-0.0409, -0.0101,  0.0101,  ...,  0.0301,  0.0291, -0.0184]],
       device='cuda:0')
2025-03-02 06:17:23,222 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,222 - mmdet - INFO - tensor([[-3.0422e-02, -1.0847e-02, -2.7125e-02,  ...,  2.8046e-05,
         -2.0310e-02,  2.2154e-02],
        [ 1.0504e-02, -1.9267e-02,  1.5509e-02,  ..., -1.9455e-02,
          1.4529e-02, -1.6719e-02],
        [-1.7306e-02,  1.1101e-03, -1.1782e-02,  ..., -1.4297e-02,
          1.6662e-02, -7.4202e-03],
        ...,
        [-2.8650e-03,  1.3502e-02, -1.5371e-02,  ..., -1.3768e-02,
         -9.8251e-03,  1.9341e-02],
        [ 2.0351e-02,  1.6566e-02, -3.6330e-03,  ...,  2.5142e-02,
          2.9352e-02,  1.2131e-02],
        [-3.3409e-02, -3.0304e-02,  1.4724e-02,  ..., -1.3606e-02,
          4.3539e-02, -5.4603e-03]], device='cuda:0')
2025-03-02 06:17:23,228 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,228 - mmdet - INFO - tensor([[100],
        [199],
        [ 39],
        ...,
        [172],
        [ 85],
        [ 64]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,230 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,230 - mmdet - INFO - tensor([[ 0.0302,  0.0146,  0.0058,  ..., -0.0015,  0.0007, -0.0136],
        [-0.0115, -0.0114,  0.0114,  ..., -0.0130,  0.0113,  0.0021],
        [-0.0335, -0.0099, -0.0084,  ...,  0.0307,  0.0365,  0.0070],
        ...,
        [-0.0324,  0.0095, -0.0248,  ..., -0.0037, -0.0115,  0.0059],
        [-0.0358,  0.0016,  0.0155,  ...,  0.0072, -0.0186, -0.0009],
        [-0.0129,  0.0385,  0.0002,  ..., -0.0024,  0.0702,  0.0006]],
       device='cuda:0')
2025-03-02 06:17:23,239 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,239 - mmdet - INFO - tensor([[ 0.0154,  0.0015, -0.0020,  ...,  0.0081,  0.0139,  0.0059],
        [ 0.0092, -0.0020,  0.0187,  ...,  0.0363,  0.0345, -0.0036],
        [ 0.0040, -0.0237,  0.0281,  ...,  0.0303,  0.0270,  0.0256],
        ...,
        [-0.0013,  0.0017,  0.0078,  ...,  0.0036, -0.0114, -0.0104],
        [ 0.0453,  0.0394, -0.0035,  ...,  0.0005,  0.0248, -0.0145],
        [ 0.0232, -0.0080, -0.0062,  ...,  0.0065, -0.0421, -0.0209]],
       device='cuda:0')
2025-03-02 06:17:23,246 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,246 - mmdet - INFO - tensor([[152],
        [214],
        [153],
        ...,
        [117],
        [ 43],
        [ 58]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,247 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,248 - mmdet - INFO - tensor([[ 1.1688e-02,  3.3390e-02, -7.9172e-03,  ..., -9.3477e-03,
         -1.8870e-02, -1.3066e-02],
        [ 1.7952e-02, -2.3601e-02, -1.6706e-02,  ...,  2.1825e-02,
          7.3142e-04,  3.6247e-02],
        [ 2.3839e-02,  1.8487e-02, -2.7246e-02,  ...,  2.2698e-03,
         -2.2913e-02, -2.0675e-02],
        ...,
        [ 2.8626e-02, -1.6016e-03,  7.3293e-05,  ..., -7.6067e-03,
          4.3710e-03, -1.2889e-03],
        [ 8.1275e-03,  7.5597e-03,  2.4793e-02,  ...,  5.2075e-03,
          1.6886e-02,  2.4527e-02],
        [-2.8399e-02,  3.3986e-03, -6.5429e-03,  ..., -5.1757e-03,
          1.1715e-02, -1.7774e-02]], device='cuda:0')
2025-03-02 06:17:23,256 - mmdet - INFO - lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,256 - mmdet - INFO - tensor([[ 0.0100, -0.0071,  0.0189,  ..., -0.0077, -0.0070, -0.0328],
        [ 0.0503,  0.0217, -0.0210,  ..., -0.0268, -0.0081,  0.0345],
        [ 0.0318,  0.0462,  0.0195,  ..., -0.0348, -0.0208,  0.0007],
        ...,
        [-0.0261,  0.0015, -0.0580,  ..., -0.0051,  0.0205,  0.0018],
        [-0.0198, -0.0135, -0.0018,  ..., -0.0120, -0.0142, -0.0046],
        [ 0.0183, -0.0178,  0.0350,  ..., -0.0182, -0.0073,  0.0188]],
       device='cuda:0')
2025-03-02 06:17:23,263 - mmdet - INFO - lm_head.base_model.model.model.layers.20.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,263 - mmdet - INFO - tensor([[134],
        [ 57],
        [107],
        ...,
        [ 17],
        [119],
        [ 38]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,265 - mmdet - INFO - lm_head.base_model.model.model.layers.20.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,265 - mmdet - INFO - tensor([[  6],
        [120],
        [103],
        ...,
        [ 66],
        [245],
        [ 53]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,267 - mmdet - INFO - lm_head.base_model.model.model.layers.20.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,267 - mmdet - INFO - tensor([[124],
        [101],
        [150],
        ...,
        [149],
        [247],
        [ 86]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,270 - mmdet - INFO - lm_head.base_model.model.model.layers.20.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,270 - mmdet - INFO - tensor([0.4512, 0.4688, 0.4414,  ..., 0.4355, 0.4375, 0.4473], device='cuda:0')
2025-03-02 06:17:23,272 - mmdet - INFO - lm_head.base_model.model.model.layers.20.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,272 - mmdet - INFO - tensor([0.3613, 0.3594, 0.3535,  ..., 0.3652, 0.3613, 0.3574], device='cuda:0')
2025-03-02 06:17:23,274 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,274 - mmdet - INFO - tensor([[ 37],
        [202],
        [ 81],
        ...,
        [ 73],
        [ 70],
        [162]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,275 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,276 - mmdet - INFO - tensor([[155],
        [157],
        [231],
        ...,
        [149],
        [199],
        [ 79]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,277 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,277 - mmdet - INFO - tensor([[-0.0072,  0.0108, -0.0244,  ...,  0.0380,  0.0308, -0.0016],
        [-0.0117, -0.0113,  0.0239,  ..., -0.0087, -0.0360, -0.0153],
        [-0.0003, -0.0336,  0.0305,  ..., -0.0118,  0.0168, -0.0135],
        ...,
        [ 0.0004, -0.0087,  0.0071,  ..., -0.0074, -0.0037,  0.0175],
        [ 0.0258,  0.0155,  0.0085,  ..., -0.0107, -0.0126, -0.0222],
        [-0.0330,  0.0309, -0.0067,  ..., -0.0248,  0.0340, -0.0074]],
       device='cuda:0')
2025-03-02 06:17:23,282 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,282 - mmdet - INFO - tensor([[-1.1050e-02,  3.5025e-03,  9.6936e-03,  ...,  6.5446e-03,
          2.6899e-02, -1.2114e-02],
        [-1.5010e-02,  3.9006e-03, -9.1162e-03,  ..., -2.8932e-03,
         -2.4231e-02, -2.5407e-03],
        [-2.1521e-02,  2.8908e-02, -1.2169e-02,  ...,  1.7902e-05,
          5.6972e-03,  1.4164e-02],
        ...,
        [ 2.1722e-02,  6.2202e-03,  7.4279e-03,  ..., -1.3401e-02,
         -4.5747e-02, -5.0299e-03],
        [ 1.5144e-02, -5.6037e-03,  4.2105e-03,  ...,  2.1292e-02,
          1.7819e-02,  1.1647e-02],
        [ 1.5410e-02,  3.0876e-03,  4.5667e-03,  ..., -6.2223e-03,
         -3.0200e-03,  2.9449e-02]], device='cuda:0')
2025-03-02 06:17:23,291 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,291 - mmdet - INFO - tensor([[121],
        [117],
        [ 83],
        ...,
        [ 36],
        [136],
        [ 71]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,292 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,292 - mmdet - INFO - tensor([[ 0.0103,  0.0138,  0.0063,  ..., -0.0405, -0.0364,  0.0011],
        [-0.0004,  0.0340,  0.0083,  ...,  0.0074,  0.0193, -0.0110],
        [ 0.0017, -0.0025,  0.0190,  ...,  0.0080,  0.0223, -0.0107],
        ...,
        [ 0.0204, -0.0113,  0.0194,  ...,  0.0116, -0.0027,  0.0562],
        [ 0.0112,  0.0154,  0.0002,  ..., -0.0022,  0.0248,  0.0038],
        [-0.0028, -0.0284, -0.0010,  ..., -0.0144, -0.0143, -0.0366]],
       device='cuda:0')
2025-03-02 06:17:23,298 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,298 - mmdet - INFO - tensor([[-0.0140, -0.0022, -0.0153,  ...,  0.0251, -0.0217,  0.0166],
        [ 0.0091, -0.0141,  0.0007,  ..., -0.0588,  0.0057, -0.0206],
        [-0.0001, -0.0031, -0.0148,  ...,  0.0255,  0.0145,  0.0052],
        ...,
        [-0.0285, -0.0037, -0.0104,  ..., -0.0189, -0.0036,  0.0185],
        [-0.0266,  0.0076, -0.0233,  ..., -0.0153,  0.0130,  0.0038],
        [ 0.0137,  0.0223,  0.0213,  ...,  0.0219, -0.0011,  0.0015]],
       device='cuda:0')
2025-03-02 06:17:23,307 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,307 - mmdet - INFO - tensor([[ 71],
        [166],
        [124],
        ...,
        [ 36],
        [174],
        [ 56]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,311 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,311 - mmdet - INFO - tensor([[-0.0166,  0.0284, -0.0071,  ...,  0.0007, -0.0449,  0.0096],
        [-0.0160,  0.0140,  0.0133,  ..., -0.0067, -0.0100,  0.0323],
        [ 0.0190, -0.0089, -0.0304,  ..., -0.0095, -0.0085,  0.0068],
        ...,
        [ 0.0279,  0.0028, -0.0270,  ...,  0.0186,  0.0265,  0.0018],
        [-0.0214, -0.0264,  0.0177,  ...,  0.0097, -0.0083, -0.0047],
        [ 0.0050, -0.0137,  0.0162,  ...,  0.0040,  0.0169,  0.0093]],
       device='cuda:0')
2025-03-02 06:17:23,318 - mmdet - INFO - lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,318 - mmdet - INFO - tensor([[-0.0214, -0.0126, -0.0360,  ..., -0.0239,  0.0153,  0.0013],
        [-0.0037,  0.0180, -0.0062,  ..., -0.0062, -0.0010,  0.0176],
        [-0.0088, -0.0245, -0.0164,  ..., -0.0202, -0.0176,  0.0187],
        ...,
        [ 0.0050,  0.0250, -0.0011,  ...,  0.0149,  0.0308,  0.0183],
        [-0.0194, -0.0005,  0.0218,  ...,  0.0258,  0.0419,  0.0320],
        [-0.0196, -0.0037,  0.0131,  ..., -0.0226,  0.0152, -0.0026]],
       device='cuda:0')
2025-03-02 06:17:23,326 - mmdet - INFO - lm_head.base_model.model.model.layers.21.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,326 - mmdet - INFO - tensor([[ 98],
        [162],
        [166],
        ...,
        [  7],
        [ 35],
        [137]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,328 - mmdet - INFO - lm_head.base_model.model.model.layers.21.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,328 - mmdet - INFO - tensor([[209],
        [ 54],
        [217],
        ...,
        [ 21],
        [133],
        [ 97]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,329 - mmdet - INFO - lm_head.base_model.model.model.layers.21.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,329 - mmdet - INFO - tensor([[171],
        [103],
        [157],
        ...,
        [ 58],
        [116],
        [179]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,330 - mmdet - INFO - lm_head.base_model.model.model.layers.21.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,330 - mmdet - INFO - tensor([0.4805, 0.4824, 0.4688,  ..., 0.4570, 0.4707, 0.4766], device='cuda:0')
2025-03-02 06:17:23,333 - mmdet - INFO - lm_head.base_model.model.model.layers.21.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,333 - mmdet - INFO - tensor([0.3730, 0.3711, 0.3672,  ..., 0.3809, 0.3711, 0.3730], device='cuda:0')
2025-03-02 06:17:23,338 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,338 - mmdet - INFO - tensor([[ 52],
        [ 84],
        [ 26],
        ...,
        [153],
        [146],
        [154]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,339 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,339 - mmdet - INFO - tensor([[ 55],
        [ 86],
        [ 88],
        ...,
        [241],
        [107],
        [ 57]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,341 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,341 - mmdet - INFO - tensor([[ 0.0128, -0.0026, -0.0012,  ..., -0.0019, -0.0210,  0.0195],
        [-0.0127,  0.0234,  0.0047,  ...,  0.0022,  0.0299,  0.0323],
        [ 0.0095,  0.0189, -0.0098,  ...,  0.0285, -0.0173,  0.0441],
        ...,
        [-0.0161, -0.0395, -0.0097,  ..., -0.0025, -0.0014, -0.0180],
        [ 0.0295,  0.0151,  0.0080,  ..., -0.0296,  0.0005, -0.0344],
        [ 0.0453,  0.0148, -0.0103,  ...,  0.0323, -0.0220,  0.0315]],
       device='cuda:0')
2025-03-02 06:17:23,347 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,347 - mmdet - INFO - tensor([[-0.0081, -0.0297, -0.0065,  ..., -0.0300, -0.0163, -0.0200],
        [ 0.0076, -0.0335, -0.0168,  ...,  0.0537,  0.0015,  0.0140],
        [-0.0290, -0.0215,  0.0098,  ...,  0.0069, -0.0140,  0.0014],
        ...,
        [-0.0137, -0.0333, -0.0160,  ..., -0.0282,  0.0015,  0.0463],
        [ 0.0190, -0.0274, -0.0146,  ...,  0.0327,  0.0125,  0.0182],
        [-0.0268, -0.0006, -0.0004,  ..., -0.0006, -0.0139,  0.0130]],
       device='cuda:0')
2025-03-02 06:17:23,356 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,356 - mmdet - INFO - tensor([[ 56],
        [106],
        [251],
        ...,
        [153],
        [169],
        [125]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,358 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,358 - mmdet - INFO - tensor([[ 0.0081,  0.0149, -0.0203,  ...,  0.0172, -0.0173,  0.0156],
        [ 0.0187,  0.0105,  0.0033,  ...,  0.0171, -0.0061,  0.0040],
        [-0.0024,  0.0090, -0.0174,  ...,  0.0097,  0.0112, -0.0316],
        ...,
        [-0.0244,  0.0183,  0.0045,  ..., -0.0314,  0.0026, -0.0355],
        [-0.0150,  0.0110, -0.0087,  ..., -0.0025,  0.0117,  0.0163],
        [-0.0108, -0.0097,  0.0389,  ...,  0.0011,  0.0189, -0.0286]],
       device='cuda:0')
2025-03-02 06:17:23,364 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,364 - mmdet - INFO - tensor([[-0.0142,  0.0050, -0.0045,  ..., -0.0004, -0.0486,  0.0209],
        [-0.0161, -0.0070,  0.0008,  ..., -0.0151,  0.0018, -0.0086],
        [ 0.0012, -0.0010,  0.0329,  ...,  0.0014,  0.0022, -0.0407],
        ...,
        [ 0.0115, -0.0539, -0.0032,  ..., -0.0128,  0.0134,  0.0152],
        [-0.0136, -0.0114, -0.0305,  ..., -0.0146,  0.0056,  0.0300],
        [-0.0076,  0.0080,  0.0163,  ...,  0.0026,  0.0109, -0.0191]],
       device='cuda:0')
2025-03-02 06:17:23,373 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,373 - mmdet - INFO - tensor([[203],
        [ 53],
        [170],
        ...,
        [136],
        [169],
        [153]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,375 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,375 - mmdet - INFO - tensor([[ 0.0495,  0.0077,  0.0180,  ..., -0.0180,  0.0229, -0.0474],
        [ 0.0110, -0.0069, -0.0105,  ...,  0.0056,  0.0043,  0.0113],
        [ 0.0246, -0.0253,  0.0127,  ...,  0.0177,  0.0009,  0.0253],
        ...,
        [-0.0120, -0.0154,  0.0233,  ...,  0.0123, -0.0002, -0.0320],
        [-0.0226,  0.0161, -0.0310,  ..., -0.0160, -0.0455, -0.0059],
        [ 0.0043,  0.0067, -0.0147,  ..., -0.0399, -0.0090,  0.0383]],
       device='cuda:0')
2025-03-02 06:17:23,381 - mmdet - INFO - lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,381 - mmdet - INFO - tensor([[ 0.0175,  0.0032, -0.0063,  ..., -0.0187, -0.0023, -0.0107],
        [ 0.0440, -0.0097,  0.0256,  ...,  0.0058, -0.0059,  0.0154],
        [-0.0111, -0.0043, -0.0220,  ..., -0.0110, -0.0135,  0.0071],
        ...,
        [ 0.0488,  0.0330, -0.0201,  ..., -0.0300,  0.0116,  0.0090],
        [-0.0212,  0.0010,  0.0198,  ..., -0.0254,  0.0048, -0.0030],
        [-0.0281,  0.0216,  0.0119,  ...,  0.0103, -0.0063, -0.0133]],
       device='cuda:0')
2025-03-02 06:17:23,390 - mmdet - INFO - lm_head.base_model.model.model.layers.22.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,390 - mmdet - INFO - tensor([[ 84],
        [179],
        [ 68],
        ...,
        [102],
        [133],
        [186]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,392 - mmdet - INFO - lm_head.base_model.model.model.layers.22.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,392 - mmdet - INFO - tensor([[237],
        [147],
        [222],
        ...,
        [ 83],
        [ 49],
        [ 10]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,393 - mmdet - INFO - lm_head.base_model.model.model.layers.22.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,393 - mmdet - INFO - tensor([[165],
        [169],
        [ 61],
        ...,
        [218],
        [ 55],
        [ 42]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,394 - mmdet - INFO - lm_head.base_model.model.model.layers.22.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,394 - mmdet - INFO - tensor([0.4863, 0.4844, 0.4766,  ..., 0.4688, 0.4883, 0.4863], device='cuda:0')
2025-03-02 06:17:23,396 - mmdet - INFO - lm_head.base_model.model.model.layers.22.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,396 - mmdet - INFO - tensor([0.3848, 0.3828, 0.3828,  ..., 0.3906, 0.3887, 0.3906], device='cuda:0')
2025-03-02 06:17:23,398 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,398 - mmdet - INFO - tensor([[115],
        [126],
        [172],
        ...,
        [165],
        [ 89],
        [214]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,400 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,400 - mmdet - INFO - tensor([[ 89],
        [154],
        [157],
        ...,
        [192],
        [232],
        [117]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,403 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,403 - mmdet - INFO - tensor([[-0.0110, -0.0034,  0.0094,  ..., -0.0262, -0.0192,  0.0013],
        [ 0.0259,  0.0087,  0.0612,  ..., -0.0025, -0.0106,  0.0201],
        [-0.0201, -0.0333, -0.0197,  ..., -0.0184, -0.0156, -0.0035],
        ...,
        [-0.0030, -0.0085, -0.0290,  ...,  0.0113,  0.0094, -0.0131],
        [ 0.0122,  0.0321,  0.0116,  ..., -0.0061, -0.0084, -0.0036],
        [-0.0064, -0.0094,  0.0231,  ..., -0.0219,  0.0053,  0.0037]],
       device='cuda:0')
2025-03-02 06:17:23,409 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,409 - mmdet - INFO - tensor([[-0.0057, -0.0155,  0.0109,  ..., -0.0300,  0.0291, -0.0107],
        [ 0.0089, -0.0012, -0.0096,  ...,  0.0243, -0.0127, -0.0025],
        [ 0.0020, -0.0099,  0.0072,  ...,  0.0024,  0.0124,  0.0240],
        ...,
        [-0.0464, -0.0236,  0.0014,  ...,  0.0367, -0.0307, -0.0019],
        [ 0.0302,  0.0080, -0.0223,  ..., -0.0232, -0.0071, -0.0108],
        [-0.0303, -0.0106, -0.0250,  ...,  0.0274,  0.0172,  0.0041]],
       device='cuda:0')
2025-03-02 06:17:23,415 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,416 - mmdet - INFO - tensor([[141],
        [103],
        [138],
        ...,
        [151],
        [ 26],
        [145]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,419 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,419 - mmdet - INFO - tensor([[ 0.0152, -0.0093,  0.0089,  ...,  0.0128, -0.0102,  0.0188],
        [-0.0196, -0.0232, -0.0307,  ...,  0.0302, -0.0088, -0.0003],
        [-0.0082,  0.0367, -0.0186,  ..., -0.0198,  0.0064, -0.0135],
        ...,
        [ 0.0252,  0.0077, -0.0106,  ...,  0.0205, -0.0133,  0.0104],
        [-0.0052, -0.0020,  0.0116,  ..., -0.0074, -0.0149, -0.0083],
        [-0.0092, -0.0021,  0.0134,  ..., -0.0376,  0.0252,  0.0037]],
       device='cuda:0')
2025-03-02 06:17:23,426 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,426 - mmdet - INFO - tensor([[-0.0155, -0.0070,  0.0173,  ...,  0.0102, -0.0489, -0.0024],
        [-0.0001, -0.0170, -0.0185,  ..., -0.0165, -0.0034,  0.0028],
        [ 0.0247,  0.0237, -0.0426,  ..., -0.0041, -0.0002, -0.0056],
        ...,
        [-0.0225, -0.0297, -0.0084,  ..., -0.0140,  0.0133, -0.0177],
        [ 0.0341, -0.0018, -0.0336,  ...,  0.0042, -0.0044,  0.0027],
        [ 0.0167,  0.0091,  0.0371,  ..., -0.0469, -0.0194,  0.0027]],
       device='cuda:0')
2025-03-02 06:17:23,431 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,432 - mmdet - INFO - tensor([[102],
        [ 58],
        [144],
        ...,
        [148],
        [134],
        [115]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,434 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,434 - mmdet - INFO - tensor([[-0.0218, -0.0063, -0.0035,  ...,  0.0359,  0.0283, -0.0270],
        [-0.0241,  0.0111, -0.0033,  ...,  0.0205, -0.0405, -0.0215],
        [-0.0228, -0.0190, -0.0274,  ...,  0.0054,  0.0145,  0.0052],
        ...,
        [ 0.0017,  0.0012, -0.0042,  ...,  0.0035,  0.0131,  0.0036],
        [-0.0080,  0.0256,  0.0357,  ..., -0.0020, -0.0033,  0.0113],
        [-0.0533,  0.0177, -0.0083,  ..., -0.0241, -0.0023, -0.0031]],
       device='cuda:0')
2025-03-02 06:17:23,443 - mmdet - INFO - lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,443 - mmdet - INFO - tensor([[ 0.0274,  0.0060,  0.0095,  ...,  0.0139, -0.0036, -0.0269],
        [-0.0126,  0.0455,  0.0159,  ...,  0.0377, -0.0421, -0.0333],
        [ 0.0126,  0.0246, -0.0029,  ..., -0.0109,  0.0260,  0.0111],
        ...,
        [-0.0274, -0.0049,  0.0024,  ..., -0.0120, -0.0150, -0.0059],
        [ 0.0137, -0.0025, -0.0015,  ..., -0.0061,  0.0075,  0.0102],
        [ 0.0268,  0.0582, -0.0015,  ..., -0.0086, -0.0054, -0.0143]],
       device='cuda:0')
2025-03-02 06:17:23,449 - mmdet - INFO - lm_head.base_model.model.model.layers.23.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,449 - mmdet - INFO - tensor([[ 93],
        [132],
        [120],
        ...,
        [106],
        [ 86],
        [134]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,452 - mmdet - INFO - lm_head.base_model.model.model.layers.23.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,453 - mmdet - INFO - tensor([[218],
        [211],
        [101],
        ...,
        [214],
        [ 39],
        [ 44]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,454 - mmdet - INFO - lm_head.base_model.model.model.layers.23.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,454 - mmdet - INFO - tensor([[121],
        [ 61],
        [ 89],
        ...,
        [103],
        [ 36],
        [181]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,456 - mmdet - INFO - lm_head.base_model.model.model.layers.23.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,456 - mmdet - INFO - tensor([0.5117, 0.5234, 0.5078,  ..., 0.5039, 0.5195, 0.5234], device='cuda:0')
2025-03-02 06:17:23,458 - mmdet - INFO - lm_head.base_model.model.model.layers.23.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,458 - mmdet - INFO - tensor([0.4004, 0.3945, 0.3965,  ..., 0.3984, 0.4004, 0.4023], device='cuda:0')
2025-03-02 06:17:23,460 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,460 - mmdet - INFO - tensor([[181],
        [153],
        [ 37],
        ...,
        [154],
        [101],
        [191]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,461 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,461 - mmdet - INFO - tensor([[200],
        [ 88],
        [ 52],
        ...,
        [196],
        [184],
        [111]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,463 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,463 - mmdet - INFO - tensor([[-0.0054,  0.0327,  0.0234,  ..., -0.0157,  0.0182,  0.0552],
        [ 0.0010, -0.0050,  0.0030,  ...,  0.0100, -0.0086,  0.0017],
        [-0.0023,  0.0150, -0.0328,  ..., -0.0126,  0.0111, -0.0267],
        ...,
        [-0.0255, -0.0094,  0.0335,  ...,  0.0060,  0.0048, -0.0255],
        [-0.0214,  0.0086, -0.0066,  ..., -0.0010,  0.0197,  0.0040],
        [ 0.0126,  0.0189,  0.0077,  ..., -0.0127,  0.0131, -0.0247]],
       device='cuda:0')
2025-03-02 06:17:23,471 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,471 - mmdet - INFO - tensor([[-9.3265e-04, -3.7762e-02,  9.0773e-04,  ..., -6.0678e-04,
         -1.5268e-02,  1.1854e-02],
        [-1.4329e-03,  3.1586e-02, -3.0825e-02,  ..., -7.8245e-03,
          3.5243e-02, -2.8456e-02],
        [-3.5724e-02, -4.1475e-02, -7.2405e-03,  ..., -2.3314e-02,
          2.6201e-02, -1.5918e-02],
        ...,
        [ 1.7931e-02, -3.8314e-03, -1.5648e-02,  ...,  1.1528e-02,
          1.2480e-03,  2.7684e-02],
        [-6.5267e-03,  6.2834e-03,  1.1765e-02,  ...,  3.1766e-02,
         -9.1556e-03, -6.2569e-03],
        [-1.2380e-02,  1.4992e-02, -3.5768e-02,  ..., -6.9432e-02,
          4.6326e-05, -4.9388e-03]], device='cuda:0')
2025-03-02 06:17:23,478 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,478 - mmdet - INFO - tensor([[211],
        [ 86],
        [ 18],
        ...,
        [231],
        [107],
        [ 69]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,480 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,480 - mmdet - INFO - tensor([[ 0.0266,  0.0110,  0.0065,  ..., -0.0378,  0.0030, -0.0110],
        [ 0.0068,  0.0085,  0.0057,  ...,  0.0176, -0.0076, -0.0131],
        [ 0.0021, -0.0121, -0.0123,  ..., -0.0463,  0.0182, -0.0212],
        ...,
        [ 0.0147, -0.0099,  0.0260,  ..., -0.0499,  0.0126,  0.0258],
        [ 0.0085,  0.0159, -0.0035,  ...,  0.0065, -0.0255,  0.0025],
        [ 0.0054,  0.0174, -0.0047,  ..., -0.0042, -0.0148, -0.0091]],
       device='cuda:0')
2025-03-02 06:17:23,489 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,489 - mmdet - INFO - tensor([[-0.0108, -0.0116,  0.0011,  ...,  0.0062, -0.0349, -0.0318],
        [-0.0103, -0.0176,  0.0100,  ..., -0.0344,  0.0107, -0.0378],
        [ 0.0196, -0.0085,  0.0074,  ...,  0.0003,  0.0094, -0.0252],
        ...,
        [ 0.0105, -0.0008, -0.0118,  ..., -0.0068,  0.0051,  0.0429],
        [ 0.0187, -0.0230,  0.0146,  ..., -0.0008, -0.0294,  0.0183],
        [-0.0090,  0.0147,  0.0016,  ...,  0.0167, -0.0032,  0.0051]],
       device='cuda:0')
2025-03-02 06:17:23,495 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,495 - mmdet - INFO - tensor([[ 91],
        [193],
        [158],
        ...,
        [135],
        [120],
        [ 58]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,497 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,497 - mmdet - INFO - tensor([[-0.0115,  0.0173,  0.0104,  ...,  0.0257, -0.0271, -0.0170],
        [-0.0200, -0.0137,  0.0106,  ..., -0.0279, -0.0102,  0.0339],
        [ 0.0195, -0.0214,  0.0178,  ...,  0.0237,  0.0178, -0.0315],
        ...,
        [ 0.0035, -0.0062, -0.0165,  ...,  0.0625,  0.0004,  0.0112],
        [-0.0030,  0.0279,  0.0118,  ..., -0.0251, -0.0159, -0.0013],
        [ 0.0175,  0.0174, -0.0176,  ..., -0.0303,  0.0094, -0.0494]],
       device='cuda:0')
2025-03-02 06:17:23,506 - mmdet - INFO - lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,506 - mmdet - INFO - tensor([[ 0.0192, -0.0033,  0.0057,  ...,  0.0091, -0.0030,  0.0210],
        [-0.0301, -0.0147,  0.0054,  ...,  0.0028, -0.0034, -0.0117],
        [-0.0213,  0.0278, -0.0159,  ...,  0.0232,  0.0065,  0.0320],
        ...,
        [ 0.0055, -0.0186,  0.0215,  ...,  0.0318,  0.0287,  0.0017],
        [ 0.0222, -0.0173,  0.0364,  ..., -0.0045, -0.0206,  0.0118],
        [-0.0121,  0.0414, -0.0080,  ...,  0.0014, -0.0051,  0.0299]],
       device='cuda:0')
2025-03-02 06:17:23,512 - mmdet - INFO - lm_head.base_model.model.model.layers.24.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,512 - mmdet - INFO - tensor([[ 36],
        [164],
        [134],
        ...,
        [ 75],
        [174],
        [ 48]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,514 - mmdet - INFO - lm_head.base_model.model.model.layers.24.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,514 - mmdet - INFO - tensor([[118],
        [199],
        [ 95],
        ...,
        [ 51],
        [139],
        [219]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,515 - mmdet - INFO - lm_head.base_model.model.model.layers.24.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,515 - mmdet - INFO - tensor([[100],
        [ 44],
        [124],
        ...,
        [159],
        [ 90],
        [ 81]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,517 - mmdet - INFO - lm_head.base_model.model.model.layers.24.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,517 - mmdet - INFO - tensor([0.4961, 0.5195, 0.5117,  ..., 0.4902, 0.5156, 0.5078], device='cuda:0')
2025-03-02 06:17:23,522 - mmdet - INFO - lm_head.base_model.model.model.layers.24.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,522 - mmdet - INFO - tensor([0.4102, 0.4062, 0.4102,  ..., 0.4102, 0.4180, 0.4121], device='cuda:0')
2025-03-02 06:17:23,524 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,524 - mmdet - INFO - tensor([[130],
        [ 20],
        [210],
        ...,
        [179],
        [136],
        [162]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,526 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,526 - mmdet - INFO - tensor([[ 67],
        [ 85],
        [170],
        ...,
        [176],
        [ 76],
        [132]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,527 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,527 - mmdet - INFO - tensor([[-0.0052, -0.0325,  0.0057,  ...,  0.0120, -0.0062, -0.0194],
        [ 0.0112, -0.0253, -0.0438,  ..., -0.0107,  0.0220,  0.0186],
        [-0.0228,  0.0104,  0.0151,  ...,  0.0597,  0.0034, -0.0009],
        ...,
        [ 0.0319,  0.0102, -0.0090,  ...,  0.0244, -0.0065,  0.0112],
        [ 0.0247,  0.0088, -0.0235,  ..., -0.0024, -0.0004, -0.0042],
        [-0.0003, -0.0056, -0.0095,  ..., -0.0268,  0.0003,  0.0420]],
       device='cuda:0')
2025-03-02 06:17:23,533 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,533 - mmdet - INFO - tensor([[ 0.0096, -0.0210,  0.0502,  ..., -0.0079, -0.0058,  0.0128],
        [-0.0138,  0.0077, -0.0026,  ...,  0.0145, -0.0179, -0.0219],
        [ 0.0027,  0.0172,  0.0147,  ..., -0.0194, -0.0127,  0.0179],
        ...,
        [-0.0091, -0.0390,  0.0108,  ..., -0.0439, -0.0010,  0.0396],
        [-0.0107,  0.0182, -0.0169,  ..., -0.0071, -0.0099,  0.0040],
        [-0.0098, -0.0220, -0.0047,  ...,  0.0250,  0.0139,  0.0186]],
       device='cuda:0')
2025-03-02 06:17:23,543 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,543 - mmdet - INFO - tensor([[170],
        [133],
        [117],
        ...,
        [216],
        [ 24],
        [187]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,545 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,545 - mmdet - INFO - tensor([[-0.0029, -0.0064, -0.0079,  ..., -0.0162,  0.0142, -0.0191],
        [-0.0021, -0.0004,  0.0062,  ..., -0.0177,  0.0561,  0.0003],
        [-0.0147,  0.0287,  0.0111,  ..., -0.0124,  0.0049,  0.0182],
        ...,
        [ 0.0023,  0.0108,  0.0087,  ..., -0.0185,  0.0053, -0.0171],
        [ 0.0075, -0.0100,  0.0272,  ..., -0.0024, -0.0159, -0.0206],
        [-0.0056, -0.0316,  0.0023,  ..., -0.0047, -0.0154,  0.0076]],
       device='cuda:0')
2025-03-02 06:17:23,555 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,555 - mmdet - INFO - tensor([[-0.0168,  0.0489,  0.0079,  ...,  0.0185,  0.0210,  0.0199],
        [-0.0097, -0.0049,  0.0014,  ...,  0.0033,  0.0220,  0.0035],
        [-0.0142,  0.0006, -0.0006,  ...,  0.0215,  0.0147, -0.0065],
        ...,
        [-0.0300,  0.0013,  0.0197,  ...,  0.0525,  0.0004, -0.0284],
        [ 0.0213,  0.0017,  0.0209,  ...,  0.0514, -0.0202, -0.0012],
        [-0.0308, -0.0157,  0.0506,  ...,  0.0048, -0.0177,  0.0066]],
       device='cuda:0')
2025-03-02 06:17:23,562 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,562 - mmdet - INFO - tensor([[170],
        [117],
        [104],
        ...,
        [ 29],
        [225],
        [ 52]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,564 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,564 - mmdet - INFO - tensor([[-0.0425, -0.0044, -0.0104,  ...,  0.0138, -0.0127,  0.0211],
        [-0.0183,  0.0157, -0.0137,  ...,  0.0206,  0.0468, -0.0020],
        [-0.0056,  0.0111,  0.0047,  ...,  0.0049, -0.0004,  0.0203],
        ...,
        [-0.0036,  0.0184, -0.0124,  ...,  0.0165, -0.0237, -0.0137],
        [-0.0199,  0.0364, -0.0037,  ..., -0.0060,  0.0125,  0.0154],
        [-0.0071, -0.0123, -0.0114,  ..., -0.0005,  0.0139, -0.0194]],
       device='cuda:0')
2025-03-02 06:17:23,573 - mmdet - INFO - lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,573 - mmdet - INFO - tensor([[-0.0065, -0.0111,  0.0068,  ...,  0.0175,  0.0040,  0.0231],
        [-0.0076, -0.0125, -0.0213,  ...,  0.0128, -0.0015, -0.0369],
        [-0.0276,  0.0219,  0.0067,  ..., -0.0156, -0.0194,  0.0098],
        ...,
        [ 0.0206, -0.0271, -0.0311,  ..., -0.0357,  0.0095, -0.0110],
        [-0.0279,  0.0222, -0.0233,  ...,  0.0021, -0.0188,  0.0025],
        [-0.0410,  0.0097, -0.0071,  ...,  0.0064, -0.0228, -0.0087]],
       device='cuda:0')
2025-03-02 06:17:23,579 - mmdet - INFO - lm_head.base_model.model.model.layers.25.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,579 - mmdet - INFO - tensor([[113],
        [241],
        [177],
        ...,
        [180],
        [158],
        [134]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,581 - mmdet - INFO - lm_head.base_model.model.model.layers.25.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,581 - mmdet - INFO - tensor([[ 54],
        [172],
        [192],
        ...,
        [170],
        [125],
        [157]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,583 - mmdet - INFO - lm_head.base_model.model.model.layers.25.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,583 - mmdet - INFO - tensor([[229],
        [178],
        [138],
        ...,
        [219],
        [113],
        [102]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,585 - mmdet - INFO - lm_head.base_model.model.model.layers.25.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,585 - mmdet - INFO - tensor([0.5469, 0.5547, 0.5430,  ..., 0.5469, 0.5625, 0.5508], device='cuda:0')
2025-03-02 06:17:23,589 - mmdet - INFO - lm_head.base_model.model.model.layers.25.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,589 - mmdet - INFO - tensor([0.4180, 0.4160, 0.4219,  ..., 0.4258, 0.4238, 0.4219], device='cuda:0')
2025-03-02 06:17:23,591 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,591 - mmdet - INFO - tensor([[229],
        [ 67],
        [164],
        ...,
        [167],
        [ 38],
        [ 18]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,592 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,593 - mmdet - INFO - tensor([[203],
        [ 70],
        [164],
        ...,
        [151],
        [ 23],
        [ 85]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,594 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,594 - mmdet - INFO - tensor([[-0.0358,  0.0017, -0.0031,  ..., -0.0045,  0.0032,  0.0183],
        [-0.0034, -0.0192, -0.0315,  ...,  0.0085, -0.0032, -0.0251],
        [-0.0096, -0.0293, -0.0389,  ..., -0.0035, -0.0026, -0.0157],
        ...,
        [-0.0233,  0.0178,  0.0061,  ...,  0.0103, -0.0154, -0.0020],
        [ 0.0047, -0.0001, -0.0047,  ...,  0.0162,  0.0165, -0.0024],
        [-0.0112,  0.0237,  0.0073,  ..., -0.0122, -0.0039, -0.0038]],
       device='cuda:0')
2025-03-02 06:17:23,600 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,600 - mmdet - INFO - tensor([[ 0.0095,  0.0235,  0.0532,  ..., -0.0249,  0.0260, -0.0047],
        [-0.0167, -0.0340,  0.0118,  ..., -0.0339, -0.0014, -0.0006],
        [-0.0054, -0.0025, -0.0164,  ...,  0.0347,  0.0007, -0.0124],
        ...,
        [ 0.0245, -0.0130,  0.0119,  ...,  0.0042,  0.0073, -0.0356],
        [-0.0487, -0.0033, -0.0237,  ...,  0.0359,  0.0118,  0.0024],
        [-0.0382,  0.0259, -0.0062,  ..., -0.0230,  0.0052, -0.0068]],
       device='cuda:0')
2025-03-02 06:17:23,609 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,609 - mmdet - INFO - tensor([[243],
        [ 54],
        [180],
        ...,
        [ 77],
        [105],
        [124]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,611 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,611 - mmdet - INFO - tensor([[-0.0408, -0.0097,  0.0151,  ..., -0.0386,  0.0314,  0.0266],
        [-0.0196,  0.0331, -0.0066,  ...,  0.0015,  0.0266, -0.0027],
        [-0.0117,  0.0135, -0.0265,  ...,  0.0195, -0.0094, -0.0208],
        ...,
        [ 0.0037,  0.0340,  0.0269,  ...,  0.0125,  0.0078,  0.0287],
        [ 0.0118, -0.0040, -0.0118,  ...,  0.0103,  0.0167, -0.0257],
        [-0.0521, -0.0011, -0.0259,  ..., -0.0317,  0.0213,  0.0354]],
       device='cuda:0')
2025-03-02 06:17:23,617 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,617 - mmdet - INFO - tensor([[ 0.0234,  0.0164, -0.0500,  ..., -0.0141,  0.0047, -0.0021],
        [-0.0099,  0.0023, -0.0116,  ..., -0.0094, -0.0076, -0.0100],
        [ 0.0213, -0.0153,  0.0241,  ..., -0.0016,  0.0227, -0.0331],
        ...,
        [ 0.0098,  0.0044,  0.0030,  ..., -0.0143, -0.0066,  0.0309],
        [ 0.0180,  0.0268,  0.0190,  ..., -0.0298,  0.0315,  0.0231],
        [-0.0050, -0.0103,  0.0572,  ..., -0.0161,  0.0212,  0.0174]],
       device='cuda:0')
2025-03-02 06:17:23,626 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,626 - mmdet - INFO - tensor([[168],
        [ 21],
        [ 77],
        ...,
        [ 41],
        [210],
        [194]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,628 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,628 - mmdet - INFO - tensor([[-0.0033,  0.0107,  0.0105,  ..., -0.0019,  0.0084,  0.0150],
        [-0.0214, -0.0052, -0.0125,  ..., -0.0149,  0.0066,  0.0178],
        [ 0.0101, -0.0187, -0.0031,  ...,  0.0258,  0.0242, -0.0245],
        ...,
        [-0.0168,  0.0177,  0.0119,  ...,  0.0267,  0.0237, -0.0104],
        [ 0.0117,  0.0229, -0.0295,  ..., -0.0186, -0.0029,  0.0084],
        [-0.0261, -0.0105,  0.0214,  ...,  0.0080, -0.0265,  0.0106]],
       device='cuda:0')
2025-03-02 06:17:23,635 - mmdet - INFO - lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,635 - mmdet - INFO - tensor([[ 1.4292e-02,  1.4785e-02,  1.3731e-02,  ..., -3.2593e-04,
         -5.6624e-03,  5.2515e-03],
        [-9.6232e-03, -1.5851e-02, -1.3073e-02,  ...,  2.8809e-02,
         -1.0657e-02,  3.7723e-02],
        [ 1.5100e-02,  4.8247e-03,  8.0844e-03,  ...,  3.4023e-02,
         -1.1668e-02,  1.6393e-04],
        ...,
        [-2.3589e-02,  3.4687e-02,  2.4580e-03,  ..., -3.5552e-02,
         -1.5928e-02,  2.0212e-02],
        [-8.8303e-03, -8.0621e-03, -1.0194e-02,  ...,  2.8422e-02,
          1.6860e-02, -3.9311e-03],
        [-1.0759e-02,  3.5440e-02,  1.4127e-03,  ...,  8.2521e-03,
          7.2929e-05, -7.4502e-03]], device='cuda:0')
2025-03-02 06:17:23,643 - mmdet - INFO - lm_head.base_model.model.model.layers.26.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,643 - mmdet - INFO - tensor([[165],
        [167],
        [ 28],
        ...,
        [ 76],
        [114],
        [101]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,645 - mmdet - INFO - lm_head.base_model.model.model.layers.26.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,645 - mmdet - INFO - tensor([[ 78],
        [121],
        [156],
        ...,
        [ 89],
        [ 36],
        [165]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,646 - mmdet - INFO - lm_head.base_model.model.model.layers.26.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,646 - mmdet - INFO - tensor([[ 68],
        [ 71],
        [141],
        ...,
        [ 28],
        [218],
        [203]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,647 - mmdet - INFO - lm_head.base_model.model.model.layers.26.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,647 - mmdet - INFO - tensor([0.5156, 0.5352, 0.5352,  ..., 0.5195, 0.5430, 0.5312], device='cuda:0')
2025-03-02 06:17:23,652 - mmdet - INFO - lm_head.base_model.model.model.layers.26.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,652 - mmdet - INFO - tensor([0.4375, 0.4316, 0.4375,  ..., 0.4434, 0.4414, 0.4395], device='cuda:0')
2025-03-02 06:17:23,656 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,656 - mmdet - INFO - tensor([[ 43],
        [153],
        [ 19],
        ...,
        [ 23],
        [ 76],
        [181]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,657 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,657 - mmdet - INFO - tensor([[102],
        [154],
        [  5],
        ...,
        [221],
        [114],
        [ 41]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,659 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,659 - mmdet - INFO - tensor([[ 0.0010, -0.0002, -0.0218,  ..., -0.0072, -0.0049, -0.0192],
        [-0.0099, -0.0060,  0.0013,  ...,  0.0117, -0.0230,  0.0183],
        [ 0.0146,  0.0214,  0.0195,  ..., -0.0183,  0.0017,  0.0156],
        ...,
        [ 0.0126,  0.0004,  0.0079,  ...,  0.0528, -0.0207, -0.0042],
        [ 0.0234,  0.0140, -0.0164,  ...,  0.0071, -0.0096, -0.0105],
        [ 0.0062, -0.0026, -0.0028,  ...,  0.0227, -0.0168,  0.0046]],
       device='cuda:0')
2025-03-02 06:17:23,665 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,665 - mmdet - INFO - tensor([[ 0.0044,  0.0339,  0.0022,  ...,  0.0044,  0.0524,  0.0255],
        [-0.0070,  0.0335,  0.0253,  ..., -0.0248,  0.0011,  0.0079],
        [-0.0010,  0.0099,  0.0053,  ...,  0.0180,  0.0125, -0.0179],
        ...,
        [-0.0332,  0.0109,  0.0065,  ...,  0.0125, -0.0021,  0.0207],
        [-0.0009,  0.0103, -0.0335,  ...,  0.0017,  0.0161,  0.0355],
        [ 0.0207, -0.0394, -0.0281,  ..., -0.0204,  0.0071,  0.0304]],
       device='cuda:0')
2025-03-02 06:17:23,673 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,673 - mmdet - INFO - tensor([[182],
        [ 22],
        [ 45],
        ...,
        [ 56],
        [ 83],
        [ 42]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,674 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,674 - mmdet - INFO - tensor([[-0.0210, -0.0163,  0.0031,  ...,  0.0243,  0.0137, -0.0233],
        [ 0.0037, -0.0314,  0.0046,  ...,  0.0276,  0.0188, -0.0440],
        [-0.0007,  0.0048, -0.0230,  ..., -0.0119, -0.0375, -0.0118],
        ...,
        [ 0.0142,  0.0227, -0.0131,  ...,  0.0252,  0.0336, -0.0133],
        [-0.0340, -0.0285, -0.0208,  ...,  0.0164, -0.0064, -0.0072],
        [-0.0329, -0.0094,  0.0120,  ...,  0.0084, -0.0224,  0.0135]],
       device='cuda:0')
2025-03-02 06:17:23,680 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,680 - mmdet - INFO - tensor([[-0.0155,  0.0285,  0.0061,  ...,  0.0063,  0.0520, -0.0244],
        [ 0.0376,  0.0139, -0.0072,  ...,  0.0305,  0.0170,  0.0478],
        [-0.0154,  0.0238, -0.0214,  ..., -0.0245,  0.0024,  0.0396],
        ...,
        [-0.0065,  0.0161,  0.0021,  ..., -0.0067, -0.0294, -0.0141],
        [ 0.0233,  0.0044,  0.0312,  ...,  0.0184,  0.0128,  0.0043],
        [ 0.0382,  0.0075,  0.0092,  ...,  0.0320,  0.0145, -0.0219]],
       device='cuda:0')
2025-03-02 06:17:23,690 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,690 - mmdet - INFO - tensor([[132],
        [146],
        [ 84],
        ...,
        [137],
        [117],
        [132]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,691 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,692 - mmdet - INFO - tensor([[-2.6140e-02, -1.5597e-02, -1.0729e-02,  ..., -1.4100e-02,
          3.8347e-03, -2.5380e-02],
        [-1.2093e-02,  2.1549e-02,  2.7041e-02,  ...,  2.5259e-02,
         -3.2572e-02,  2.1229e-02],
        [-5.4916e-02,  1.6817e-02,  2.0570e-02,  ..., -3.9857e-02,
          1.6548e-02,  7.6883e-03],
        ...,
        [ 9.5728e-03,  6.2843e-03,  2.7726e-05,  ...,  2.9417e-02,
          3.5784e-02,  1.2920e-02],
        [-8.1814e-03,  1.7440e-02,  6.1885e-03,  ...,  2.9796e-03,
         -1.5245e-02, -2.2437e-03],
        [ 4.0375e-02, -8.7308e-03,  1.6678e-02,  ...,  2.9668e-02,
         -1.8957e-02,  3.0947e-03]], device='cuda:0')
2025-03-02 06:17:23,697 - mmdet - INFO - lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,697 - mmdet - INFO - tensor([[ 0.0082,  0.0042, -0.0151,  ...,  0.0105,  0.0032,  0.0110],
        [-0.0021,  0.0294,  0.0230,  ...,  0.0294,  0.0046,  0.0009],
        [-0.0100,  0.0058, -0.0232,  ..., -0.0204, -0.0264,  0.0046],
        ...,
        [-0.0126, -0.0066, -0.0106,  ..., -0.0168, -0.0071,  0.0051],
        [ 0.0172,  0.0050, -0.0228,  ...,  0.0354,  0.0150,  0.0281],
        [ 0.0213,  0.0451, -0.0134,  ...,  0.0312, -0.0199,  0.0265]],
       device='cuda:0')
2025-03-02 06:17:23,706 - mmdet - INFO - lm_head.base_model.model.model.layers.27.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,706 - mmdet - INFO - tensor([[235],
        [ 67],
        [140],
        ...,
        [201],
        [149],
        [ 72]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,708 - mmdet - INFO - lm_head.base_model.model.model.layers.27.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,708 - mmdet - INFO - tensor([[107],
        [214],
        [ 38],
        ...,
        [ 35],
        [132],
        [ 40]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,709 - mmdet - INFO - lm_head.base_model.model.model.layers.27.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,709 - mmdet - INFO - tensor([[162],
        [224],
        [161],
        ...,
        [148],
        [ 93],
        [104]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,710 - mmdet - INFO - lm_head.base_model.model.model.layers.27.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,710 - mmdet - INFO - tensor([0.5430, 0.5508, 0.5508,  ..., 0.5508, 0.5508, 0.5547], device='cuda:0')
2025-03-02 06:17:23,712 - mmdet - INFO - lm_head.base_model.model.model.layers.27.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,713 - mmdet - INFO - tensor([0.4551, 0.4473, 0.4453,  ..., 0.4531, 0.4590, 0.4492], device='cuda:0')
2025-03-02 06:17:23,715 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,715 - mmdet - INFO - tensor([[114],
        [169],
        [ 51],
        ...,
        [ 39],
        [158],
        [178]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,716 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,716 - mmdet - INFO - tensor([[102],
        [200],
        [219],
        ...,
        [108],
        [135],
        [ 70]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,718 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,719 - mmdet - INFO - tensor([[-0.0267, -0.0249,  0.0238,  ..., -0.0231,  0.0242,  0.0246],
        [-0.0110,  0.0109,  0.0315,  ...,  0.0162,  0.0253,  0.0055],
        [-0.0156, -0.0203,  0.0003,  ..., -0.0298,  0.0386,  0.0048],
        ...,
        [-0.0083,  0.0172, -0.0046,  ..., -0.0216, -0.0063, -0.0284],
        [ 0.0262, -0.0071, -0.0069,  ...,  0.0192, -0.0014, -0.0216],
        [ 0.0343, -0.0022, -0.0263,  ...,  0.0042,  0.0398, -0.0115]],
       device='cuda:0')
2025-03-02 06:17:23,727 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,727 - mmdet - INFO - tensor([[-0.0040, -0.0141,  0.0287,  ..., -0.0061, -0.0256,  0.0174],
        [ 0.0249, -0.0147, -0.0156,  ..., -0.0175, -0.0017,  0.0113],
        [ 0.0347,  0.0242,  0.0064,  ..., -0.0034,  0.0172,  0.0258],
        ...,
        [-0.0060, -0.0136,  0.0025,  ..., -0.0116, -0.0130, -0.0177],
        [ 0.0171,  0.0243, -0.0126,  ...,  0.0390, -0.0154,  0.0012],
        [-0.0029,  0.0559,  0.0258,  ..., -0.0399, -0.0029, -0.0271]],
       device='cuda:0')
2025-03-02 06:17:23,740 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,740 - mmdet - INFO - tensor([[ 57],
        [205],
        [113],
        ...,
        [144],
        [ 29],
        [135]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,743 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,743 - mmdet - INFO - tensor([[ 0.0058, -0.0395,  0.0176,  ..., -0.0160, -0.0175,  0.0101],
        [ 0.0044,  0.0178, -0.0021,  ...,  0.0052, -0.0322,  0.0230],
        [-0.0100,  0.0415,  0.0440,  ...,  0.0118,  0.0247, -0.0153],
        ...,
        [ 0.0316,  0.0139, -0.0228,  ..., -0.0592, -0.0153,  0.0282],
        [ 0.0010,  0.0041, -0.0221,  ..., -0.0109, -0.0261, -0.0397],
        [-0.0035, -0.0206,  0.0232,  ..., -0.0204,  0.0295,  0.0131]],
       device='cuda:0')
2025-03-02 06:17:23,756 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,757 - mmdet - INFO - tensor([[-0.0079,  0.0450,  0.0033,  ...,  0.0060,  0.0080, -0.0364],
        [ 0.0034, -0.0060, -0.0044,  ...,  0.0142,  0.0329, -0.0219],
        [ 0.0126,  0.0416, -0.0321,  ..., -0.0169,  0.0103, -0.0276],
        ...,
        [-0.0163,  0.0122, -0.0026,  ..., -0.0034,  0.0157, -0.0272],
        [-0.0155, -0.0077,  0.0107,  ..., -0.0215, -0.0085,  0.0100],
        [ 0.0186,  0.0297, -0.0252,  ..., -0.0195,  0.0047,  0.0090]],
       device='cuda:0')
2025-03-02 06:17:23,768 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,768 - mmdet - INFO - tensor([[155],
        [ 19],
        [ 77],
        ...,
        [103],
        [195],
        [120]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,771 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,771 - mmdet - INFO - tensor([[-0.0105,  0.0036,  0.0194,  ..., -0.0259,  0.0089,  0.0124],
        [-0.0040,  0.0169,  0.0142,  ...,  0.0014,  0.0118, -0.0101],
        [-0.0167,  0.0134,  0.0355,  ..., -0.0071,  0.0109,  0.0078],
        ...,
        [-0.0250, -0.0181,  0.0082,  ..., -0.0048, -0.0179,  0.0410],
        [ 0.0162,  0.0094, -0.0014,  ...,  0.0003, -0.0233, -0.0116],
        [ 0.0130,  0.0162,  0.0159,  ..., -0.0149, -0.0196, -0.0350]],
       device='cuda:0')
2025-03-02 06:17:23,782 - mmdet - INFO - lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,782 - mmdet - INFO - tensor([[-0.0125, -0.0193,  0.0184,  ...,  0.0185, -0.0116,  0.0176],
        [ 0.0212, -0.0189,  0.0244,  ...,  0.0296,  0.0202, -0.0186],
        [-0.0134, -0.0375,  0.0121,  ...,  0.0364, -0.0102,  0.0057],
        ...,
        [-0.0003, -0.0429, -0.0023,  ...,  0.0361, -0.0159, -0.0059],
        [-0.0183,  0.0097, -0.0243,  ..., -0.0035,  0.0073, -0.0243],
        [-0.0088,  0.0082, -0.0093,  ..., -0.0108,  0.0199,  0.0247]],
       device='cuda:0')
2025-03-02 06:17:23,793 - mmdet - INFO - lm_head.base_model.model.model.layers.28.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,793 - mmdet - INFO - tensor([[104],
        [127],
        [ 98],
        ...,
        [165],
        [165],
        [ 75]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,795 - mmdet - INFO - lm_head.base_model.model.model.layers.28.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,795 - mmdet - INFO - tensor([[201],
        [231],
        [ 46],
        ...,
        [130],
        [229],
        [150]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,797 - mmdet - INFO - lm_head.base_model.model.model.layers.28.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,797 - mmdet - INFO - tensor([[158],
        [ 90],
        [136],
        ...,
        [164],
        [108],
        [212]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,798 - mmdet - INFO - lm_head.base_model.model.model.layers.28.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,798 - mmdet - INFO - tensor([0.5625, 0.5664, 0.5586,  ..., 0.5469, 0.5703, 0.5586], device='cuda:0')
2025-03-02 06:17:23,804 - mmdet - INFO - lm_head.base_model.model.model.layers.28.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,804 - mmdet - INFO - tensor([0.4629, 0.4590, 0.4570,  ..., 0.4668, 0.4590, 0.4570], device='cuda:0')
2025-03-02 06:17:23,807 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,807 - mmdet - INFO - tensor([[137],
        [ 86],
        [ 56],
        ...,
        [102],
        [201],
        [145]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,809 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,809 - mmdet - INFO - tensor([[244],
        [ 59],
        [157],
        ...,
        [197],
        [ 48],
        [ 56]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,810 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,810 - mmdet - INFO - tensor([[ 0.0242, -0.0021, -0.0041,  ...,  0.0116, -0.0104, -0.0143],
        [-0.0236,  0.0301,  0.0015,  ...,  0.0077, -0.0207,  0.0070],
        [ 0.0096,  0.0129, -0.0009,  ...,  0.0172, -0.0376,  0.0312],
        ...,
        [ 0.0066, -0.0041,  0.0455,  ..., -0.0053, -0.0005, -0.0363],
        [ 0.0030,  0.0052, -0.0366,  ..., -0.0020, -0.0200,  0.0364],
        [-0.0182, -0.0317,  0.0157,  ..., -0.0243, -0.0300, -0.0276]],
       device='cuda:0')
2025-03-02 06:17:23,818 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,818 - mmdet - INFO - tensor([[-0.0153,  0.0096, -0.0039,  ...,  0.0099,  0.0052, -0.0157],
        [ 0.0371, -0.0192, -0.0070,  ...,  0.0263,  0.0006, -0.0028],
        [ 0.0013,  0.0077,  0.0097,  ..., -0.0106,  0.0046, -0.0239],
        ...,
        [-0.0040,  0.0038, -0.0019,  ..., -0.0301,  0.0219, -0.0068],
        [-0.0254, -0.0179, -0.0249,  ...,  0.0012,  0.0205, -0.0020],
        [-0.0329, -0.0271,  0.0073,  ..., -0.0390, -0.0455, -0.0125]],
       device='cuda:0')
2025-03-02 06:17:23,830 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,830 - mmdet - INFO - tensor([[152],
        [214],
        [  3],
        ...,
        [154],
        [104],
        [ 92]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,833 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,833 - mmdet - INFO - tensor([[-0.0205,  0.0285, -0.0138,  ...,  0.0180,  0.0146,  0.0027],
        [-0.0359,  0.0465, -0.0128,  ..., -0.0237, -0.0107,  0.0068],
        [ 0.0017,  0.0092,  0.0167,  ...,  0.0408, -0.0005, -0.0036],
        ...,
        [-0.0241, -0.0222,  0.0179,  ..., -0.0236,  0.0223,  0.0060],
        [ 0.0226,  0.0175,  0.0003,  ...,  0.0204,  0.0048, -0.0068],
        [-0.0376,  0.0240,  0.0322,  ..., -0.0306, -0.0259, -0.0141]],
       device='cuda:0')
2025-03-02 06:17:23,846 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,846 - mmdet - INFO - tensor([[ 0.0020, -0.0013, -0.0032,  ...,  0.0392, -0.0004, -0.0201],
        [-0.0021, -0.0055, -0.0377,  ..., -0.0168, -0.0330,  0.0188],
        [ 0.0190, -0.0042,  0.0039,  ..., -0.0439,  0.0352,  0.0021],
        ...,
        [ 0.0010,  0.0297,  0.0169,  ..., -0.0177,  0.0015,  0.0437],
        [-0.0158, -0.0027, -0.0104,  ...,  0.0218, -0.0441,  0.0282],
        [ 0.0334,  0.0250, -0.0327,  ...,  0.0161,  0.0426, -0.0110]],
       device='cuda:0')
2025-03-02 06:17:23,858 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,858 - mmdet - INFO - tensor([[110],
        [230],
        [ 75],
        ...,
        [ 86],
        [137],
        [177]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,860 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,860 - mmdet - INFO - tensor([[ 0.0075,  0.0391, -0.0022,  ..., -0.0066,  0.0223,  0.0065],
        [ 0.0378,  0.0063, -0.0304,  ..., -0.0486, -0.0083,  0.0279],
        [-0.0125, -0.0133, -0.0451,  ..., -0.0053,  0.0031,  0.0011],
        ...,
        [-0.0227,  0.0166, -0.0056,  ...,  0.0258,  0.0163,  0.0470],
        [ 0.0145, -0.0292, -0.0045,  ...,  0.0164, -0.0161,  0.0155],
        [ 0.0266,  0.0436,  0.0350,  ...,  0.0269,  0.0055, -0.0373]],
       device='cuda:0')
2025-03-02 06:17:23,868 - mmdet - INFO - lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,868 - mmdet - INFO - tensor([[-0.0106,  0.0114,  0.0097,  ...,  0.0380, -0.0198,  0.0106],
        [-0.0191, -0.0049, -0.0145,  ..., -0.0197,  0.0141, -0.0178],
        [ 0.0168,  0.0064,  0.0239,  ..., -0.0126,  0.0002,  0.0010],
        ...,
        [-0.0082,  0.0173, -0.0055,  ...,  0.0340,  0.0156, -0.0303],
        [ 0.0158,  0.0279, -0.0159,  ...,  0.0083, -0.0081, -0.0144],
        [-0.0074, -0.0295, -0.0086,  ..., -0.0361, -0.0237,  0.0352]],
       device='cuda:0')
2025-03-02 06:17:23,877 - mmdet - INFO - lm_head.base_model.model.model.layers.29.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,877 - mmdet - INFO - tensor([[173],
        [ 88],
        [184],
        ...,
        [ 41],
        [ 75],
        [ 68]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,879 - mmdet - INFO - lm_head.base_model.model.model.layers.29.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,879 - mmdet - INFO - tensor([[119],
        [146],
        [118],
        ...,
        [ 38],
        [ 70],
        [184]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,881 - mmdet - INFO - lm_head.base_model.model.model.layers.29.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,881 - mmdet - INFO - tensor([[249],
        [115],
        [197],
        ...,
        [199],
        [164],
        [ 87]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,883 - mmdet - INFO - lm_head.base_model.model.model.layers.29.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,883 - mmdet - INFO - tensor([0.5273, 0.5391, 0.5312,  ..., 0.5273, 0.5352, 0.5547], device='cuda:0')
2025-03-02 06:17:23,890 - mmdet - INFO - lm_head.base_model.model.model.layers.29.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,890 - mmdet - INFO - tensor([0.4688, 0.4688, 0.4668,  ..., 0.4707, 0.4746, 0.4707], device='cuda:0')
2025-03-02 06:17:23,893 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,893 - mmdet - INFO - tensor([[115],
        [118],
        [192],
        ...,
        [137],
        [ 70],
        [118]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,894 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,894 - mmdet - INFO - tensor([[211],
        [116],
        [197],
        ...,
        [233],
        [184],
        [179]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,896 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,896 - mmdet - INFO - tensor([[-0.0017, -0.0199, -0.0041,  ..., -0.0074,  0.0139,  0.0136],
        [-0.0149, -0.0286,  0.0046,  ..., -0.0230, -0.0208,  0.0240],
        [-0.0019, -0.0118, -0.0081,  ...,  0.0066, -0.0254,  0.0331],
        ...,
        [ 0.0022, -0.0013, -0.0180,  ..., -0.0170, -0.0106, -0.0214],
        [ 0.0197,  0.0116, -0.0166,  ..., -0.0281, -0.0129,  0.0207],
        [ 0.0244,  0.0107,  0.0046,  ...,  0.0066,  0.0056,  0.0120]],
       device='cuda:0')
2025-03-02 06:17:23,906 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,906 - mmdet - INFO - tensor([[ 0.0127, -0.0084,  0.0409,  ...,  0.0146,  0.0055,  0.0012],
        [ 0.0008,  0.0188, -0.0124,  ...,  0.0008,  0.0083,  0.0202],
        [-0.0146,  0.0087, -0.0025,  ...,  0.0082, -0.0510,  0.0158],
        ...,
        [ 0.0140, -0.0117,  0.0098,  ...,  0.0156,  0.0197,  0.0017],
        [ 0.0393, -0.0058,  0.0203,  ..., -0.0186,  0.0139,  0.0316],
        [ 0.0147,  0.0396, -0.0238,  ...,  0.0194,  0.0263, -0.0208]],
       device='cuda:0')
2025-03-02 06:17:23,912 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,912 - mmdet - INFO - tensor([[113],
        [205],
        [142],
        ...,
        [ 71],
        [ 86],
        [ 20]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,913 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,913 - mmdet - INFO - tensor([[-0.0197, -0.0158,  0.0147,  ...,  0.0331, -0.0030, -0.0080],
        [ 0.0081, -0.0076, -0.0377,  ..., -0.0042, -0.0066, -0.0456],
        [ 0.0095,  0.0483, -0.0229,  ...,  0.0224,  0.0175,  0.0165],
        ...,
        [-0.0044, -0.0076,  0.0057,  ...,  0.0172, -0.0240, -0.0129],
        [ 0.0085, -0.0068, -0.0066,  ...,  0.0219, -0.0321,  0.0135],
        [ 0.0034, -0.0063,  0.0465,  ..., -0.0105,  0.0021, -0.0125]],
       device='cuda:0')
2025-03-02 06:17:23,922 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,922 - mmdet - INFO - tensor([[-0.0002, -0.0095,  0.0043,  ...,  0.0037, -0.0024,  0.0007],
        [-0.0344, -0.0093,  0.0075,  ...,  0.0095,  0.0233, -0.0069],
        [-0.0375, -0.0174,  0.0347,  ...,  0.0132, -0.0137, -0.0007],
        ...,
        [ 0.0246, -0.0130,  0.0272,  ..., -0.0037,  0.0048, -0.0128],
        [ 0.0238,  0.0553, -0.0242,  ...,  0.0295,  0.0063, -0.0092],
        [-0.0318,  0.0497, -0.0158,  ..., -0.0051,  0.0045, -0.0232]],
       device='cuda:0')
2025-03-02 06:17:23,929 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,929 - mmdet - INFO - tensor([[ 89],
        [ 84],
        [151],
        ...,
        [213],
        [198],
        [164]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,930 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,930 - mmdet - INFO - tensor([[-0.0006, -0.0114, -0.0071,  ..., -0.0151, -0.0172,  0.0176],
        [ 0.0324, -0.0138, -0.0433,  ..., -0.0118, -0.0173, -0.0072],
        [ 0.0367, -0.0103,  0.0541,  ..., -0.0016,  0.0322, -0.0149],
        ...,
        [ 0.0510, -0.0232, -0.0014,  ...,  0.0278, -0.0159,  0.0163],
        [ 0.0107, -0.0110, -0.0138,  ..., -0.0053, -0.0143,  0.0055],
        [ 0.0192,  0.0487, -0.0140,  ...,  0.0030,  0.0112, -0.0170]],
       device='cuda:0')
2025-03-02 06:17:23,939 - mmdet - INFO - lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,939 - mmdet - INFO - tensor([[ 0.0158,  0.0162, -0.0210,  ...,  0.0058, -0.0100,  0.0213],
        [-0.0072, -0.0040,  0.0098,  ..., -0.0238, -0.0243, -0.0058],
        [ 0.0311, -0.0029, -0.0096,  ..., -0.0122,  0.0132,  0.0245],
        ...,
        [ 0.0127,  0.0257,  0.0002,  ...,  0.0043,  0.0145,  0.0207],
        [ 0.0072,  0.0225,  0.0125,  ...,  0.0131,  0.0107, -0.0010],
        [-0.0184, -0.0048,  0.0298,  ..., -0.0263,  0.0076,  0.0005]],
       device='cuda:0')
2025-03-02 06:17:23,946 - mmdet - INFO - lm_head.base_model.model.model.layers.30.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,946 - mmdet - INFO - tensor([[ 18],
        [ 98],
        [105],
        ...,
        [193],
        [103],
        [162]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,948 - mmdet - INFO - lm_head.base_model.model.model.layers.30.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,948 - mmdet - INFO - tensor([[121],
        [165],
        [201],
        ...,
        [195],
        [116],
        [123]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,949 - mmdet - INFO - lm_head.base_model.model.model.layers.30.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,949 - mmdet - INFO - tensor([[195],
        [ 29],
        [105],
        ...,
        [198],
        [153],
        [116]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,951 - mmdet - INFO - lm_head.base_model.model.model.layers.30.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,951 - mmdet - INFO - tensor([0.5781, 0.5820, 0.5664,  ..., 0.5508, 0.5625, 0.5820], device='cuda:0')
2025-03-02 06:17:23,955 - mmdet - INFO - lm_head.base_model.model.model.layers.30.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:23,955 - mmdet - INFO - tensor([0.4805, 0.4883, 0.4805,  ..., 0.4824, 0.4824, 0.4785], device='cuda:0')
2025-03-02 06:17:23,958 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.q_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,958 - mmdet - INFO - tensor([[ 12],
        [222],
        [184],
        ...,
        [179],
        [ 30],
        [156]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,959 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.k_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,959 - mmdet - INFO - tensor([[ 49],
        [222],
        [166],
        ...,
        [148],
        [182],
        [120]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,960 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,960 - mmdet - INFO - tensor([[ 0.0137,  0.0154, -0.0151,  ..., -0.0321,  0.0422, -0.0146],
        [ 0.0257, -0.0060, -0.0271,  ..., -0.0597, -0.0208, -0.0256],
        [-0.0027, -0.0224,  0.0160,  ..., -0.0141,  0.0031,  0.0050],
        ...,
        [-0.0005,  0.0269, -0.0527,  ..., -0.0290, -0.0097,  0.0222],
        [ 0.0379, -0.0204, -0.0252,  ...,  0.0021, -0.0128,  0.0017],
        [ 0.0022, -0.0368, -0.0266,  ...,  0.0159,  0.0012, -0.0035]],
       device='cuda:0')
2025-03-02 06:17:23,966 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,966 - mmdet - INFO - tensor([[-0.0025, -0.0129,  0.0404,  ..., -0.0117,  0.0372,  0.0117],
        [ 0.0056,  0.0234,  0.0308,  ..., -0.0082,  0.0184,  0.0200],
        [-0.0091, -0.0328,  0.0106,  ..., -0.0307, -0.0095,  0.0075],
        ...,
        [ 0.0112,  0.0208,  0.0304,  ..., -0.0086,  0.0319, -0.0119],
        [-0.0468, -0.0319, -0.0079,  ...,  0.0223,  0.0005,  0.0276],
        [-0.0213, -0.0051,  0.0063,  ...,  0.0174,  0.0247,  0.0113]],
       device='cuda:0')
2025-03-02 06:17:23,976 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.v_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,976 - mmdet - INFO - tensor([[193],
        [ 82],
        [ 83],
        ...,
        [114],
        [252],
        [ 95]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,978 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,978 - mmdet - INFO - tensor([[-0.0085,  0.0270, -0.0168,  ...,  0.0103, -0.0083,  0.0316],
        [ 0.0175, -0.0118,  0.0044,  ..., -0.0058,  0.0224, -0.0239],
        [-0.0019,  0.0073, -0.0096,  ...,  0.0374, -0.0278,  0.0226],
        ...,
        [ 0.0181, -0.0058,  0.0002,  ...,  0.0239,  0.0183,  0.0179],
        [ 0.0023,  0.0212, -0.0147,  ...,  0.0202,  0.0006, -0.0158],
        [ 0.0199,  0.0011, -0.0241,  ...,  0.0113, -0.0200, -0.0009]],
       device='cuda:0')
2025-03-02 06:17:23,983 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,983 - mmdet - INFO - tensor([[-0.0005, -0.0111, -0.0093,  ..., -0.0004,  0.0541, -0.0151],
        [-0.0122, -0.0154,  0.0047,  ...,  0.0058,  0.0100,  0.0004],
        [-0.0146,  0.0029,  0.0221,  ..., -0.0138,  0.0243, -0.0016],
        ...,
        [ 0.0624,  0.0287, -0.0262,  ...,  0.0172,  0.0010,  0.0277],
        [ 0.0241,  0.0030,  0.0201,  ...,  0.0129,  0.0287, -0.0215],
        [ 0.0344, -0.0152, -0.0089,  ..., -0.0104, -0.0025,  0.0125]],
       device='cuda:0')
2025-03-02 06:17:23,993 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.o_proj.base_layer.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:23,993 - mmdet - INFO - tensor([[141],
        [101],
        [132],
        ...,
        [ 67],
        [189],
        [ 57]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:23,994 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_A.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:23,994 - mmdet - INFO - tensor([[-0.0035,  0.0141, -0.0205,  ...,  0.0191, -0.0194,  0.0164],
        [ 0.0036, -0.0109, -0.0269,  ..., -0.0054, -0.0101, -0.0179],
        [ 0.0312,  0.0071, -0.0101,  ...,  0.0275, -0.0162,  0.0282],
        ...,
        [ 0.0078, -0.0128,  0.0046,  ..., -0.0093, -0.0161,  0.0067],
        [ 0.0200,  0.0059,  0.0092,  ..., -0.0201,  0.0046, -0.0102],
        [ 0.0280, -0.0049,  0.0043,  ..., -0.0229,  0.0322,  0.0125]],
       device='cuda:0')
2025-03-02 06:17:24,000 - mmdet - INFO - lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_B.default.weight: torch.float32, True, cuda:0
2025-03-02 06:17:24,001 - mmdet - INFO - tensor([[-0.0223, -0.0136,  0.0032,  ...,  0.0320, -0.0029, -0.0031],
        [-0.0216, -0.0287,  0.0119,  ..., -0.0307, -0.0102, -0.0148],
        [ 0.0031,  0.0162,  0.0519,  ...,  0.0033,  0.0108,  0.0055],
        ...,
        [ 0.0082,  0.0050,  0.0249,  ...,  0.0065, -0.0045, -0.0210],
        [-0.0024, -0.0291,  0.0008,  ...,  0.0081, -0.0052, -0.0149],
        [-0.0256, -0.0246,  0.0118,  ...,  0.0114, -0.0404, -0.0152]],
       device='cuda:0')
2025-03-02 06:17:24,010 - mmdet - INFO - lm_head.base_model.model.model.layers.31.mlp.gate_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:24,010 - mmdet - INFO - tensor([[132],
        [225],
        [124],
        ...,
        [189],
        [ 69],
        [168]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:24,011 - mmdet - INFO - lm_head.base_model.model.model.layers.31.mlp.up_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:24,011 - mmdet - INFO - tensor([[ 20],
        [210],
        [149],
        ...,
        [ 86],
        [134],
        [139]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:24,013 - mmdet - INFO - lm_head.base_model.model.model.layers.31.mlp.down_proj.weight: torch.uint8, False, cuda:0
2025-03-02 06:17:24,013 - mmdet - INFO - tensor([[114],
        [ 84],
        [231],
        ...,
        [ 70],
        [ 57],
        [125]], device='cuda:0', dtype=torch.uint8)
2025-03-02 06:17:24,014 - mmdet - INFO - lm_head.base_model.model.model.layers.31.input_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:24,014 - mmdet - INFO - tensor([0.4863, 0.4863, 0.4375,  ..., 0.4316, 0.4531, 0.4805], device='cuda:0')
2025-03-02 06:17:24,016 - mmdet - INFO - lm_head.base_model.model.model.layers.31.post_attention_layernorm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:24,016 - mmdet - INFO - tensor([0.4316, 0.4355, 0.4414,  ..., 0.4238, 0.4102, 0.4277], device='cuda:0')
2025-03-02 06:17:24,022 - mmdet - INFO - lm_head.base_model.model.model.norm.weight: torch.float32, False, cuda:0
2025-03-02 06:17:24,022 - mmdet - INFO - tensor([1.8672, 1.8672, 1.8047,  ..., 1.7188, 1.8281, 1.6016], device='cuda:0')
2025-03-02 06:17:24,024 - mmdet - INFO - lm_head.base_model.model.lm_head.weight: torch.float32, False, cuda:0
2025-03-02 06:17:24,024 - mmdet - INFO - tensor([[-0.0033,  0.0036, -0.0073,  ...,  0.0054, -0.0089,  0.0070],
        [-0.0317,  0.0474, -0.0022,  ..., -0.0204,  0.0154,  0.0344],
        [-0.0123,  0.0032,  0.0190,  ..., -0.0277,  0.0143, -0.0086],
        ...,
        [-0.0267, -0.0200, -0.0017,  ...,  0.0121, -0.0135, -0.0238],
        [ 0.0234,  0.0259,  0.0311,  ...,  0.0068, -0.0138, -0.0055],
        [ 0.0093, -0.0082,  0.0048,  ..., -0.0294, -0.0221,  0.0347]],
       device='cuda:0')
2025-03-02 06:17:32,052 - mmdet - INFO - load checkpoint from local path: ckpts/eva02_petr_proj.pth
2025-03-02 06:17:33,378 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for img_backbone.rope_glb.freqs_cos: copying a param with shape torch.Size([9216, 64]) from checkpoint, the shape in current model is torch.Size([1600, 64]).
size mismatch for img_backbone.rope_glb.freqs_sin: copying a param with shape torch.Size([9216, 64]) from checkpoint, the shape in current model is torch.Size([1600, 64]).
missing keys in source state_dict: position_range, coords_d, pts_bbox_head.code_weights, pts_bbox_head.match_costs, pts_bbox_head.pc_range, pts_bbox_head.cls_branches.0.0.weight, pts_bbox_head.cls_branches.0.0.bias, pts_bbox_head.cls_branches.0.1.weight, pts_bbox_head.cls_branches.0.1.bias, pts_bbox_head.cls_branches.0.3.weight, pts_bbox_head.cls_branches.0.3.bias, pts_bbox_head.cls_branches.0.4.weight, pts_bbox_head.cls_branches.0.4.bias, pts_bbox_head.cls_branches.0.6.weight, pts_bbox_head.cls_branches.0.6.bias, pts_bbox_head.cls_branches.1.0.weight, pts_bbox_head.cls_branches.1.0.bias, pts_bbox_head.cls_branches.1.1.weight, pts_bbox_head.cls_branches.1.1.bias, pts_bbox_head.cls_branches.1.3.weight, pts_bbox_head.cls_branches.1.3.bias, pts_bbox_head.cls_branches.1.4.weight, pts_bbox_head.cls_branches.1.4.bias, pts_bbox_head.cls_branches.1.6.weight, pts_bbox_head.cls_branches.1.6.bias, pts_bbox_head.cls_branches.2.0.weight, pts_bbox_head.cls_branches.2.0.bias, pts_bbox_head.cls_branches.2.1.weight, pts_bbox_head.cls_branches.2.1.bias, pts_bbox_head.cls_branches.2.3.weight, pts_bbox_head.cls_branches.2.3.bias, pts_bbox_head.cls_branches.2.4.weight, pts_bbox_head.cls_branches.2.4.bias, pts_bbox_head.cls_branches.2.6.weight, pts_bbox_head.cls_branches.2.6.bias, pts_bbox_head.cls_branches.3.0.weight, pts_bbox_head.cls_branches.3.0.bias, pts_bbox_head.cls_branches.3.1.weight, pts_bbox_head.cls_branches.3.1.bias, pts_bbox_head.cls_branches.3.3.weight, pts_bbox_head.cls_branches.3.3.bias, pts_bbox_head.cls_branches.3.4.weight, pts_bbox_head.cls_branches.3.4.bias, pts_bbox_head.cls_branches.3.6.weight, pts_bbox_head.cls_branches.3.6.bias, pts_bbox_head.cls_branches.4.0.weight, pts_bbox_head.cls_branches.4.0.bias, pts_bbox_head.cls_branches.4.1.weight, pts_bbox_head.cls_branches.4.1.bias, pts_bbox_head.cls_branches.4.3.weight, pts_bbox_head.cls_branches.4.3.bias, pts_bbox_head.cls_branches.4.4.weight, pts_bbox_head.cls_branches.4.4.bias, pts_bbox_head.cls_branches.4.6.weight, pts_bbox_head.cls_branches.4.6.bias, pts_bbox_head.cls_branches.5.0.weight, pts_bbox_head.cls_branches.5.0.bias, pts_bbox_head.cls_branches.5.1.weight, pts_bbox_head.cls_branches.5.1.bias, pts_bbox_head.cls_branches.5.3.weight, pts_bbox_head.cls_branches.5.3.bias, pts_bbox_head.cls_branches.5.4.weight, pts_bbox_head.cls_branches.5.4.bias, pts_bbox_head.cls_branches.5.6.weight, pts_bbox_head.cls_branches.5.6.bias, pts_bbox_head.reg_branches.0.0.weight, pts_bbox_head.reg_branches.0.0.bias, pts_bbox_head.reg_branches.0.2.weight, pts_bbox_head.reg_branches.0.2.bias, pts_bbox_head.reg_branches.0.4.weight, pts_bbox_head.reg_branches.0.4.bias, pts_bbox_head.reg_branches.1.0.weight, pts_bbox_head.reg_branches.1.0.bias, pts_bbox_head.reg_branches.1.2.weight, pts_bbox_head.reg_branches.1.2.bias, pts_bbox_head.reg_branches.1.4.weight, pts_bbox_head.reg_branches.1.4.bias, pts_bbox_head.reg_branches.2.0.weight, pts_bbox_head.reg_branches.2.0.bias, pts_bbox_head.reg_branches.2.2.weight, pts_bbox_head.reg_branches.2.2.bias, pts_bbox_head.reg_branches.2.4.weight, pts_bbox_head.reg_branches.2.4.bias, pts_bbox_head.reg_branches.3.0.weight, pts_bbox_head.reg_branches.3.0.bias, pts_bbox_head.reg_branches.3.2.weight, pts_bbox_head.reg_branches.3.2.bias, pts_bbox_head.reg_branches.3.4.weight, pts_bbox_head.reg_branches.3.4.bias, pts_bbox_head.reg_branches.4.0.weight, pts_bbox_head.reg_branches.4.0.bias, pts_bbox_head.reg_branches.4.2.weight, pts_bbox_head.reg_branches.4.2.bias, pts_bbox_head.reg_branches.4.4.weight, pts_bbox_head.reg_branches.4.4.bias, pts_bbox_head.reg_branches.5.0.weight, pts_bbox_head.reg_branches.5.0.bias, pts_bbox_head.reg_branches.5.2.weight, pts_bbox_head.reg_branches.5.2.bias, pts_bbox_head.reg_branches.5.4.weight, pts_bbox_head.reg_branches.5.4.bias, pts_bbox_head.reference_points.weight, pts_bbox_head.pseudo_reference_points.weight, pts_bbox_head.can_bus_embed.0.weight, pts_bbox_head.can_bus_embed.0.bias, pts_bbox_head.can_bus_embed.2.weight, pts_bbox_head.can_bus_embed.2.bias, pts_bbox_head.query_pos.0.weight, pts_bbox_head.query_pos.0.bias, pts_bbox_head.query_pos.2.weight, pts_bbox_head.query_pos.2.bias, pts_bbox_head.time_embedding.0.weight, pts_bbox_head.time_embedding.0.bias, pts_bbox_head.time_embedding.1.weight, pts_bbox_head.time_embedding.1.bias, pts_bbox_head.ego_pose_pe.reduce.0.weight, pts_bbox_head.ego_pose_pe.reduce.0.bias, pts_bbox_head.ego_pose_pe.gamma.weight, pts_bbox_head.ego_pose_pe.gamma.bias, pts_bbox_head.ego_pose_pe.beta.weight, pts_bbox_head.ego_pose_pe.beta.bias, query_pos.0.weight, query_pos.0.bias, query_pos.2.weight, query_pos.2.bias, time_embedding.0.weight, time_embedding.0.bias, time_embedding.1.weight, time_embedding.1.bias, ego_pose_pe.reduce.0.weight, ego_pose_pe.reduce.0.bias, ego_pose_pe.gamma.weight, ego_pose_pe.gamma.bias, ego_pose_pe.beta.weight, ego_pose_pe.beta.bias, map_head.code_weights, map_head.match_costs, map_head.pc_range, map_head.cls_branches.0.0.weight, map_head.cls_branches.0.0.bias, map_head.cls_branches.0.1.weight, map_head.cls_branches.0.1.bias, map_head.cls_branches.0.3.weight, map_head.cls_branches.0.3.bias, map_head.cls_branches.0.4.weight, map_head.cls_branches.0.4.bias, map_head.cls_branches.0.6.weight, map_head.cls_branches.0.6.bias, map_head.cls_branches.1.0.weight, map_head.cls_branches.1.0.bias, map_head.cls_branches.1.1.weight, map_head.cls_branches.1.1.bias, map_head.cls_branches.1.3.weight, map_head.cls_branches.1.3.bias, map_head.cls_branches.1.4.weight, map_head.cls_branches.1.4.bias, map_head.cls_branches.1.6.weight, map_head.cls_branches.1.6.bias, map_head.cls_branches.2.0.weight, map_head.cls_branches.2.0.bias, map_head.cls_branches.2.1.weight, map_head.cls_branches.2.1.bias, map_head.cls_branches.2.3.weight, map_head.cls_branches.2.3.bias, map_head.cls_branches.2.4.weight, map_head.cls_branches.2.4.bias, map_head.cls_branches.2.6.weight, map_head.cls_branches.2.6.bias, map_head.cls_branches.3.0.weight, map_head.cls_branches.3.0.bias, map_head.cls_branches.3.1.weight, map_head.cls_branches.3.1.bias, map_head.cls_branches.3.3.weight, map_head.cls_branches.3.3.bias, map_head.cls_branches.3.4.weight, map_head.cls_branches.3.4.bias, map_head.cls_branches.3.6.weight, map_head.cls_branches.3.6.bias, map_head.cls_branches.4.0.weight, map_head.cls_branches.4.0.bias, map_head.cls_branches.4.1.weight, map_head.cls_branches.4.1.bias, map_head.cls_branches.4.3.weight, map_head.cls_branches.4.3.bias, map_head.cls_branches.4.4.weight, map_head.cls_branches.4.4.bias, map_head.cls_branches.4.6.weight, map_head.cls_branches.4.6.bias, map_head.cls_branches.5.0.weight, map_head.cls_branches.5.0.bias, map_head.cls_branches.5.1.weight, map_head.cls_branches.5.1.bias, map_head.cls_branches.5.3.weight, map_head.cls_branches.5.3.bias, map_head.cls_branches.5.4.weight, map_head.cls_branches.5.4.bias, map_head.cls_branches.5.6.weight, map_head.cls_branches.5.6.bias, map_head.reg_branches.0.0.weight, map_head.reg_branches.0.0.bias, map_head.reg_branches.0.2.weight, map_head.reg_branches.0.2.bias, map_head.reg_branches.0.4.weight, map_head.reg_branches.0.4.bias, map_head.reg_branches.1.0.weight, map_head.reg_branches.1.0.bias, map_head.reg_branches.1.2.weight, map_head.reg_branches.1.2.bias, map_head.reg_branches.1.4.weight, map_head.reg_branches.1.4.bias, map_head.reg_branches.2.0.weight, map_head.reg_branches.2.0.bias, map_head.reg_branches.2.2.weight, map_head.reg_branches.2.2.bias, map_head.reg_branches.2.4.weight, map_head.reg_branches.2.4.bias, map_head.reg_branches.3.0.weight, map_head.reg_branches.3.0.bias, map_head.reg_branches.3.2.weight, map_head.reg_branches.3.2.bias, map_head.reg_branches.3.4.weight, map_head.reg_branches.3.4.bias, map_head.reg_branches.4.0.weight, map_head.reg_branches.4.0.bias, map_head.reg_branches.4.2.weight, map_head.reg_branches.4.2.bias, map_head.reg_branches.4.4.weight, map_head.reg_branches.4.4.bias, map_head.reg_branches.5.0.weight, map_head.reg_branches.5.0.bias, map_head.reg_branches.5.2.weight, map_head.reg_branches.5.2.bias, map_head.reg_branches.5.4.weight, map_head.reg_branches.5.4.bias, map_head.reference_points_lane.weight, map_head.reference_points_lane.bias, map_head.points_embedding_lane.weight, map_head.instance_embedding_lane.weight, map_head.query_pos.0.weight, map_head.query_pos.0.bias, map_head.query_pos.2.weight, map_head.query_pos.2.bias, map_head.time_embedding.0.weight, map_head.time_embedding.0.bias, map_head.time_embedding.1.weight, map_head.time_embedding.1.bias, map_head.ego_pose_pe.reduce.0.weight, map_head.ego_pose_pe.reduce.0.bias, map_head.ego_pose_pe.gamma.weight, map_head.ego_pose_pe.gamma.bias, map_head.ego_pose_pe.beta.weight, map_head.ego_pose_pe.beta.bias, position_encoder.0.weight, position_encoder.0.bias, position_encoder.2.weight, position_encoder.2.bias, lm_head.base_model.model.weighted_mask, lm_head.base_model.model.model.embed_tokens.weight, lm_head.base_model.model.model.layers.0.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.0.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.0.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.0.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.0.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.0.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.0.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.0.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.0.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.0.mlp.up_proj.weight, lm_head.base_model.model.model.layers.0.mlp.down_proj.weight, lm_head.base_model.model.model.layers.0.input_layernorm.weight, lm_head.base_model.model.model.layers.0.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.1.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.1.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.1.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.1.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.1.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.1.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.1.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.1.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.1.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.1.mlp.up_proj.weight, lm_head.base_model.model.model.layers.1.mlp.down_proj.weight, lm_head.base_model.model.model.layers.1.input_layernorm.weight, lm_head.base_model.model.model.layers.1.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.2.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.2.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.2.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.2.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.2.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.2.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.2.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.2.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.2.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.2.mlp.up_proj.weight, lm_head.base_model.model.model.layers.2.mlp.down_proj.weight, lm_head.base_model.model.model.layers.2.input_layernorm.weight, lm_head.base_model.model.model.layers.2.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.3.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.3.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.3.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.3.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.3.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.3.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.3.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.3.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.3.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.3.mlp.up_proj.weight, lm_head.base_model.model.model.layers.3.mlp.down_proj.weight, lm_head.base_model.model.model.layers.3.input_layernorm.weight, lm_head.base_model.model.model.layers.3.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.4.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.4.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.4.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.4.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.4.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.4.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.4.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.4.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.4.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.4.mlp.up_proj.weight, lm_head.base_model.model.model.layers.4.mlp.down_proj.weight, lm_head.base_model.model.model.layers.4.input_layernorm.weight, lm_head.base_model.model.model.layers.4.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.5.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.5.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.5.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.5.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.5.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.5.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.5.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.5.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.5.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.5.mlp.up_proj.weight, lm_head.base_model.model.model.layers.5.mlp.down_proj.weight, lm_head.base_model.model.model.layers.5.input_layernorm.weight, lm_head.base_model.model.model.layers.5.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.6.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.6.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.6.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.6.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.6.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.6.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.6.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.6.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.6.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.6.mlp.up_proj.weight, lm_head.base_model.model.model.layers.6.mlp.down_proj.weight, lm_head.base_model.model.model.layers.6.input_layernorm.weight, lm_head.base_model.model.model.layers.6.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.7.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.7.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.7.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.7.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.7.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.7.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.7.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.7.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.7.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.7.mlp.up_proj.weight, lm_head.base_model.model.model.layers.7.mlp.down_proj.weight, lm_head.base_model.model.model.layers.7.input_layernorm.weight, lm_head.base_model.model.model.layers.7.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.8.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.8.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.8.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.8.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.8.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.8.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.8.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.8.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.8.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.8.mlp.up_proj.weight, lm_head.base_model.model.model.layers.8.mlp.down_proj.weight, lm_head.base_model.model.model.layers.8.input_layernorm.weight, lm_head.base_model.model.model.layers.8.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.9.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.9.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.9.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.9.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.9.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.9.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.9.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.9.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.9.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.9.mlp.up_proj.weight, lm_head.base_model.model.model.layers.9.mlp.down_proj.weight, lm_head.base_model.model.model.layers.9.input_layernorm.weight, lm_head.base_model.model.model.layers.9.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.10.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.10.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.10.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.10.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.10.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.10.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.10.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.10.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.10.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.10.mlp.up_proj.weight, lm_head.base_model.model.model.layers.10.mlp.down_proj.weight, lm_head.base_model.model.model.layers.10.input_layernorm.weight, lm_head.base_model.model.model.layers.10.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.11.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.11.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.11.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.11.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.11.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.11.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.11.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.11.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.11.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.11.mlp.up_proj.weight, lm_head.base_model.model.model.layers.11.mlp.down_proj.weight, lm_head.base_model.model.model.layers.11.input_layernorm.weight, lm_head.base_model.model.model.layers.11.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.12.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.12.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.12.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.12.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.12.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.12.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.12.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.12.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.12.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.12.mlp.up_proj.weight, lm_head.base_model.model.model.layers.12.mlp.down_proj.weight, lm_head.base_model.model.model.layers.12.input_layernorm.weight, lm_head.base_model.model.model.layers.12.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.13.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.13.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.13.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.13.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.13.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.13.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.13.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.13.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.13.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.13.mlp.up_proj.weight, lm_head.base_model.model.model.layers.13.mlp.down_proj.weight, lm_head.base_model.model.model.layers.13.input_layernorm.weight, lm_head.base_model.model.model.layers.13.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.14.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.14.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.14.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.14.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.14.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.14.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.14.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.14.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.14.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.14.mlp.up_proj.weight, lm_head.base_model.model.model.layers.14.mlp.down_proj.weight, lm_head.base_model.model.model.layers.14.input_layernorm.weight, lm_head.base_model.model.model.layers.14.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.15.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.15.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.15.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.15.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.15.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.15.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.15.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.15.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.15.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.15.mlp.up_proj.weight, lm_head.base_model.model.model.layers.15.mlp.down_proj.weight, lm_head.base_model.model.model.layers.15.input_layernorm.weight, lm_head.base_model.model.model.layers.15.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.16.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.16.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.16.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.16.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.16.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.16.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.16.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.16.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.16.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.16.mlp.up_proj.weight, lm_head.base_model.model.model.layers.16.mlp.down_proj.weight, lm_head.base_model.model.model.layers.16.input_layernorm.weight, lm_head.base_model.model.model.layers.16.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.17.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.17.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.17.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.17.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.17.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.17.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.17.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.17.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.17.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.17.mlp.up_proj.weight, lm_head.base_model.model.model.layers.17.mlp.down_proj.weight, lm_head.base_model.model.model.layers.17.input_layernorm.weight, lm_head.base_model.model.model.layers.17.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.18.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.18.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.18.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.18.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.18.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.18.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.18.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.18.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.18.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.18.mlp.up_proj.weight, lm_head.base_model.model.model.layers.18.mlp.down_proj.weight, lm_head.base_model.model.model.layers.18.input_layernorm.weight, lm_head.base_model.model.model.layers.18.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.19.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.19.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.19.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.19.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.19.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.19.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.19.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.19.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.19.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.19.mlp.up_proj.weight, lm_head.base_model.model.model.layers.19.mlp.down_proj.weight, lm_head.base_model.model.model.layers.19.input_layernorm.weight, lm_head.base_model.model.model.layers.19.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.20.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.20.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.20.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.20.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.20.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.20.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.20.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.20.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.20.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.20.mlp.up_proj.weight, lm_head.base_model.model.model.layers.20.mlp.down_proj.weight, lm_head.base_model.model.model.layers.20.input_layernorm.weight, lm_head.base_model.model.model.layers.20.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.21.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.21.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.21.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.21.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.21.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.21.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.21.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.21.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.21.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.21.mlp.up_proj.weight, lm_head.base_model.model.model.layers.21.mlp.down_proj.weight, lm_head.base_model.model.model.layers.21.input_layernorm.weight, lm_head.base_model.model.model.layers.21.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.22.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.22.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.22.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.22.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.22.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.22.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.22.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.22.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.22.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.22.mlp.up_proj.weight, lm_head.base_model.model.model.layers.22.mlp.down_proj.weight, lm_head.base_model.model.model.layers.22.input_layernorm.weight, lm_head.base_model.model.model.layers.22.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.23.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.23.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.23.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.23.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.23.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.23.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.23.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.23.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.23.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.23.mlp.up_proj.weight, lm_head.base_model.model.model.layers.23.mlp.down_proj.weight, lm_head.base_model.model.model.layers.23.input_layernorm.weight, lm_head.base_model.model.model.layers.23.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.24.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.24.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.24.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.24.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.24.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.24.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.24.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.24.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.24.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.24.mlp.up_proj.weight, lm_head.base_model.model.model.layers.24.mlp.down_proj.weight, lm_head.base_model.model.model.layers.24.input_layernorm.weight, lm_head.base_model.model.model.layers.24.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.25.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.25.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.25.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.25.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.25.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.25.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.25.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.25.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.25.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.25.mlp.up_proj.weight, lm_head.base_model.model.model.layers.25.mlp.down_proj.weight, lm_head.base_model.model.model.layers.25.input_layernorm.weight, lm_head.base_model.model.model.layers.25.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.26.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.26.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.26.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.26.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.26.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.26.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.26.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.26.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.26.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.26.mlp.up_proj.weight, lm_head.base_model.model.model.layers.26.mlp.down_proj.weight, lm_head.base_model.model.model.layers.26.input_layernorm.weight, lm_head.base_model.model.model.layers.26.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.27.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.27.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.27.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.27.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.27.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.27.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.27.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.27.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.27.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.27.mlp.up_proj.weight, lm_head.base_model.model.model.layers.27.mlp.down_proj.weight, lm_head.base_model.model.model.layers.27.input_layernorm.weight, lm_head.base_model.model.model.layers.27.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.28.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.28.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.28.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.28.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.28.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.28.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.28.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.28.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.28.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.28.mlp.up_proj.weight, lm_head.base_model.model.model.layers.28.mlp.down_proj.weight, lm_head.base_model.model.model.layers.28.input_layernorm.weight, lm_head.base_model.model.model.layers.28.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.29.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.29.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.29.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.29.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.29.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.29.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.29.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.29.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.29.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.29.mlp.up_proj.weight, lm_head.base_model.model.model.layers.29.mlp.down_proj.weight, lm_head.base_model.model.model.layers.29.input_layernorm.weight, lm_head.base_model.model.model.layers.29.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.30.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.30.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.30.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.30.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.30.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.30.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.30.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.30.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.30.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.30.mlp.up_proj.weight, lm_head.base_model.model.model.layers.30.mlp.down_proj.weight, lm_head.base_model.model.model.layers.30.input_layernorm.weight, lm_head.base_model.model.model.layers.30.post_attention_layernorm.weight, lm_head.base_model.model.model.layers.31.self_attn.q_proj.weight, lm_head.base_model.model.model.layers.31.self_attn.k_proj.base_layer.weight, lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.31.self_attn.k_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.31.self_attn.v_proj.base_layer.weight, lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.31.self_attn.v_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.31.self_attn.o_proj.base_layer.weight, lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_A.default.weight, lm_head.base_model.model.model.layers.31.self_attn.o_proj.lora_B.default.weight, lm_head.base_model.model.model.layers.31.self_attn.rotary_emb.inv_freq, lm_head.base_model.model.model.layers.31.mlp.gate_proj.weight, lm_head.base_model.model.model.layers.31.mlp.up_proj.weight, lm_head.base_model.model.model.layers.31.mlp.down_proj.weight, lm_head.base_model.model.model.layers.31.input_layernorm.weight, lm_head.base_model.model.model.layers.31.post_attention_layernorm.weight, lm_head.base_model.model.model.norm.weight, lm_head.base_model.model.lm_head.weight

2025-03-02 06:17:33,383 - mmdet - INFO - Start running, host: mist_sophia@DESKTOP-FV3EM2A, work_dir: /home/mist_sophia/ad/test/OmniDrive/work_dirs/mask_eva_lane_det_vlm
2025-03-02 06:17:33,384 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) CustomDistEvalHook                 
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(NORMAL      ) CustomDistEvalHook                 
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(NORMAL      ) CustomDistEvalHook                 
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) CustomDistEvalHook                 
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) CustomDistEvalHook                 
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2025-03-02 06:17:33,384 - mmdet - INFO - workflow: [('train', 1)], max: 168780 iters
2025-03-02 06:17:33,389 - mmdet - INFO - Checkpoints will be saved to /home/mist_sophia/ad/test/OmniDrive/work_dirs/mask_eva_lane_det_vlm by HardDiskBackend.
